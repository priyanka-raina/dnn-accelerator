Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> source_text
Rule 1     source_text -> description
Rule 2     description -> definitions
Rule 3     definitions -> definitions definition
Rule 4     definitions -> definition
Rule 5     definition -> moduledef
Rule 6     definition -> pragma
Rule 7     pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN
Rule 8     pragma -> LPAREN TIMES ID TIMES RPAREN
Rule 9     moduledef -> MODULE modulename paramlist portlist items ENDMODULE
Rule 10    modulename -> ID
Rule 11    modulename -> SENS_OR
Rule 12    paramlist -> DELAY LPAREN params RPAREN
Rule 13    paramlist -> empty
Rule 14    params -> params_begin param_end
Rule 15    params_begin -> params_begin param
Rule 16    params_begin -> param
Rule 17    params -> param_end
Rule 18    param -> PARAMETER param_substitution_list COMMA
Rule 19    param -> PARAMETER SIGNED param_substitution_list COMMA
Rule 20    param -> PARAMETER width param_substitution_list COMMA
Rule 21    param -> PARAMETER SIGNED width param_substitution_list COMMA
Rule 22    param -> PARAMETER INTEGER param_substitution_list COMMA
Rule 23    param_end -> PARAMETER param_substitution_list
Rule 24    param_end -> PARAMETER SIGNED param_substitution_list
Rule 25    param_end -> PARAMETER width param_substitution_list
Rule 26    param_end -> PARAMETER SIGNED width param_substitution_list
Rule 27    param_end -> PARAMETER INTEGER param_substitution_list
Rule 28    portlist -> LPAREN ports RPAREN SEMICOLON
Rule 29    portlist -> LPAREN ioports RPAREN SEMICOLON
Rule 30    portlist -> LPAREN RPAREN SEMICOLON
Rule 31    portlist -> SEMICOLON
Rule 32    ports -> ports COMMA portname
Rule 33    ports -> portname
Rule 34    portname -> ID
Rule 35    sigtypes -> sigtypes sigtype
Rule 36    sigtypes -> sigtype
Rule 37    sigtype -> INPUT
Rule 38    sigtype -> OUTPUT
Rule 39    sigtype -> INOUT
Rule 40    sigtype -> TRI
Rule 41    sigtype -> REG
Rule 42    sigtype -> WIRE
Rule 43    sigtype -> SIGNED
Rule 44    sigtype -> SUPPLY0
Rule 45    sigtype -> SUPPLY1
Rule 46    ioports -> ioports COMMA ioport
Rule 47    ioports -> ioport_head
Rule 48    ioport -> sigtypes portname
Rule 49    ioport -> sigtypes width portname
Rule 50    ioport_head -> sigtypes portname
Rule 51    ioport_head -> sigtypes width portname
Rule 52    ioport -> portname
Rule 53    width -> LBRACKET expression COLON expression RBRACKET
Rule 54    length -> LBRACKET expression COLON expression RBRACKET
Rule 55    items -> items item
Rule 56    items -> item
Rule 57    items -> empty
Rule 58    item -> standard_item
Rule 59    item -> generate
Rule 60    standard_item -> decl
Rule 61    standard_item -> integerdecl
Rule 62    standard_item -> realdecl
Rule 63    standard_item -> declassign
Rule 64    standard_item -> parameterdecl
Rule 65    standard_item -> localparamdecl
Rule 66    standard_item -> genvardecl
Rule 67    standard_item -> assignment
Rule 68    standard_item -> always
Rule 69    standard_item -> initial
Rule 70    standard_item -> instance
Rule 71    standard_item -> function
Rule 72    standard_item -> task
Rule 73    standard_item -> pragma
Rule 74    decl -> sigtypes declnamelist SEMICOLON
Rule 75    decl -> sigtypes width declnamelist SEMICOLON
Rule 76    declnamelist -> declnamelist COMMA declname
Rule 77    declnamelist -> declname
Rule 78    declname -> ID
Rule 79    declname -> ID length
Rule 80    declassign -> sigtypes declassign_element SEMICOLON
Rule 81    declassign -> sigtypes width declassign_element SEMICOLON
Rule 82    declassign_element -> ID EQUALS rvalue
Rule 83    declassign_element -> delays ID EQUALS delays rvalue
Rule 84    integerdecl -> INTEGER integernamelist SEMICOLON
Rule 85    integerdecl -> INTEGER SIGNED integernamelist SEMICOLON
Rule 86    integernamelist -> integernamelist COMMA integername
Rule 87    integernamelist -> integername
Rule 88    integername -> ID
Rule 89    realdecl -> REAL realnamelist SEMICOLON
Rule 90    realnamelist -> realnamelist COMMA realname
Rule 91    realnamelist -> realname
Rule 92    realname -> ID
Rule 93    parameterdecl -> PARAMETER param_substitution_list SEMICOLON
Rule 94    parameterdecl -> PARAMETER SIGNED param_substitution_list SEMICOLON
Rule 95    parameterdecl -> PARAMETER width param_substitution_list SEMICOLON
Rule 96    parameterdecl -> PARAMETER SIGNED width param_substitution_list SEMICOLON
Rule 97    parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON
Rule 98    localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON
Rule 99    localparamdecl -> LOCALPARAM SIGNED param_substitution_list SEMICOLON
Rule 100   localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON
Rule 101   localparamdecl -> LOCALPARAM SIGNED width param_substitution_list SEMICOLON
Rule 102   localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON
Rule 103   param_substitution_list -> param_substitution_list COMMA param_substitution
Rule 104   param_substitution_list -> param_substitution
Rule 105   param_substitution -> ID EQUALS rvalue
Rule 106   assignment -> ASSIGN lvalue EQUALS rvalue SEMICOLON
Rule 107   assignment -> ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON
Rule 108   lpartselect -> pointer LBRACKET expression COLON expression RBRACKET
Rule 109   lpartselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET
Rule 110   lpartselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET
Rule 111   lpartselect -> identifier LBRACKET expression COLON expression RBRACKET
Rule 112   lpartselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET
Rule 113   lpartselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET
Rule 114   lpointer -> pointer
Rule 115   lconcat -> LBRACE lconcatlist RBRACE
Rule 116   lconcatlist -> lconcatlist COMMA lconcat_one
Rule 117   lconcatlist -> lconcat_one
Rule 118   lconcat_one -> identifier
Rule 119   lconcat_one -> lpartselect
Rule 120   lconcat_one -> lpointer
Rule 121   lconcat_one -> lconcat
Rule 122   lvalue -> lpartselect
Rule 123   lvalue -> lpointer
Rule 124   lvalue -> lconcat
Rule 125   lvalue -> identifier
Rule 126   rvalue -> expression
Rule 127   expression -> MINUS expression
Rule 128   expression -> PLUS expression
Rule 129   expression -> LNOT expression
Rule 130   expression -> NOT expression
Rule 131   expression -> AND expression
Rule 132   expression -> NAND expression
Rule 133   expression -> NOR expression
Rule 134   expression -> OR expression
Rule 135   expression -> XOR expression
Rule 136   expression -> XNOR expression
Rule 137   expression -> expression POWER expression
Rule 138   expression -> expression TIMES expression
Rule 139   expression -> expression DIVIDE expression
Rule 140   expression -> expression MOD expression
Rule 141   expression -> expression PLUS expression
Rule 142   expression -> expression MINUS expression
Rule 143   expression -> expression LSHIFT expression
Rule 144   expression -> expression RSHIFT expression
Rule 145   expression -> expression LSHIFTA expression
Rule 146   expression -> expression RSHIFTA expression
Rule 147   expression -> expression LT expression
Rule 148   expression -> expression GT expression
Rule 149   expression -> expression LE expression
Rule 150   expression -> expression GE expression
Rule 151   expression -> expression EQ expression
Rule 152   expression -> expression NE expression
Rule 153   expression -> expression EQL expression
Rule 154   expression -> expression NEL expression
Rule 155   expression -> expression AND expression
Rule 156   expression -> expression XOR expression
Rule 157   expression -> expression XNOR expression
Rule 158   expression -> expression OR expression
Rule 159   expression -> expression LAND expression
Rule 160   expression -> expression LOR expression
Rule 161   expression -> expression COND expression COLON expression
Rule 162   expression -> LPAREN expression RPAREN
Rule 163   expression -> concat
Rule 164   expression -> repeat
Rule 165   expression -> partselect
Rule 166   expression -> pointer
Rule 167   expression -> functioncall
Rule 168   expression -> systemcall
Rule 169   expression -> identifier
Rule 170   expression -> const_expression
Rule 171   concat -> LBRACE concatlist RBRACE
Rule 172   concatlist -> concatlist COMMA expression
Rule 173   concatlist -> expression
Rule 174   repeat -> LBRACE expression concat RBRACE
Rule 175   partselect -> identifier LBRACKET expression COLON expression RBRACKET
Rule 176   partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET
Rule 177   partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET
Rule 178   partselect -> pointer LBRACKET expression COLON expression RBRACKET
Rule 179   partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET
Rule 180   partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET
Rule 181   pointer -> identifier LBRACKET expression RBRACKET
Rule 182   pointer -> pointer LBRACKET expression RBRACKET
Rule 183   const_expression -> intnumber
Rule 184   const_expression -> floatnumber
Rule 185   const_expression -> stringliteral
Rule 186   floatnumber -> FLOATNUMBER
Rule 187   intnumber -> INTNUMBER_DEC
Rule 188   intnumber -> SIGNED_INTNUMBER_DEC
Rule 189   intnumber -> INTNUMBER_BIN
Rule 190   intnumber -> SIGNED_INTNUMBER_BIN
Rule 191   intnumber -> INTNUMBER_OCT
Rule 192   intnumber -> SIGNED_INTNUMBER_OCT
Rule 193   intnumber -> INTNUMBER_HEX
Rule 194   intnumber -> SIGNED_INTNUMBER_HEX
Rule 195   stringliteral -> STRING_LITERAL
Rule 196   always -> ALWAYS senslist always_statement
Rule 197   senslist -> AT LPAREN edgesigs RPAREN
Rule 198   edgesig -> POSEDGE edgesig_base
Rule 199   edgesig -> NEGEDGE edgesig_base
Rule 200   edgesig_base -> identifier
Rule 201   edgesig_base -> pointer
Rule 202   edgesigs -> edgesigs SENS_OR edgesig
Rule 203   edgesigs -> edgesig
Rule 204   senslist -> empty
Rule 205   senslist -> AT levelsig
Rule 206   senslist -> AT LPAREN levelsigs RPAREN
Rule 207   levelsig -> levelsig_base
Rule 208   levelsig_base -> identifier
Rule 209   levelsig_base -> pointer
Rule 210   levelsig_base -> partselect
Rule 211   levelsigs -> levelsigs SENS_OR levelsig
Rule 212   levelsigs -> levelsigs COMMA levelsig
Rule 213   levelsigs -> levelsig
Rule 214   senslist -> AT TIMES
Rule 215   senslist -> AT LPAREN TIMES RPAREN
Rule 216   basic_statement -> if_statement
Rule 217   basic_statement -> case_statement
Rule 218   basic_statement -> casex_statement
Rule 219   basic_statement -> for_statement
Rule 220   basic_statement -> while_statement
Rule 221   basic_statement -> event_statement
Rule 222   basic_statement -> wait_statement
Rule 223   basic_statement -> forever_statement
Rule 224   basic_statement -> block
Rule 225   basic_statement -> namedblock
Rule 226   basic_statement -> parallelblock
Rule 227   basic_statement -> blocking_substitution
Rule 228   basic_statement -> nonblocking_substitution
Rule 229   basic_statement -> single_statement
Rule 230   always_statement -> basic_statement
Rule 231   blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON
Rule 232   blocking_substitution_base -> delays lvalue EQUALS delays rvalue
Rule 233   nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON
Rule 234   delays -> DELAY LPAREN expression RPAREN
Rule 235   delays -> DELAY identifier
Rule 236   delays -> DELAY intnumber
Rule 237   delays -> DELAY floatnumber
Rule 238   delays -> empty
Rule 239   block -> BEGIN block_statements END
Rule 240   block -> BEGIN END
Rule 241   block_statements -> block_statements block_statement
Rule 242   block_statements -> block_statement
Rule 243   block_statement -> basic_statement
Rule 244   namedblock -> BEGIN COLON ID namedblock_statements END
Rule 245   namedblock -> BEGIN COLON ID END
Rule 246   namedblock_statements -> namedblock_statements namedblock_statement
Rule 247   namedblock_statements -> namedblock_statement
Rule 248   namedblock_statement -> basic_statement
Rule 249   namedblock_statement -> decl
Rule 250   namedblock_statement -> integerdecl
Rule 251   namedblock_statement -> realdecl
Rule 252   namedblock_statement -> parameterdecl
Rule 253   namedblock_statement -> localparamdecl
Rule 254   parallelblock -> FORK block_statements JOIN
Rule 255   parallelblock -> FORK JOIN
Rule 256   if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement
Rule 257   if_statement -> IF LPAREN cond RPAREN true_statement
Rule 258   if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement
Rule 259   if_statement -> delays IF LPAREN cond RPAREN true_statement
Rule 260   cond -> expression
Rule 261   ifcontent_statement -> basic_statement
Rule 262   true_statement -> ifcontent_statement
Rule 263   else_statement -> ifcontent_statement
Rule 264   for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement
Rule 265   forpre -> blocking_substitution
Rule 266   forpre -> SEMICOLON
Rule 267   forcond -> cond SEMICOLON
Rule 268   forcond -> SEMICOLON
Rule 269   forpost -> blocking_substitution_base
Rule 270   forpost -> empty
Rule 271   forcontent_statement -> basic_statement
Rule 272   while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement
Rule 273   whilecontent_statement -> basic_statement
Rule 274   case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE
Rule 275   casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE
Rule 276   case_comp -> expression
Rule 277   casecontent_statements -> casecontent_statements casecontent_statement
Rule 278   casecontent_statements -> casecontent_statement
Rule 279   casecontent_statement -> casecontent_condition COLON basic_statement
Rule 280   casecontent_condition -> casecontent_condition COMMA expression
Rule 281   casecontent_condition -> expression
Rule 282   casecontent_statement -> DEFAULT COLON basic_statement
Rule 283   initial -> INITIAL initial_statement
Rule 284   initial_statement -> basic_statement
Rule 285   event_statement -> senslist SEMICOLON
Rule 286   wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement
Rule 287   waitcontent_statement -> basic_statement
Rule 288   waitcontent_statement -> SEMICOLON
Rule 289   forever_statement -> FOREVER basic_statement
Rule 290   instance -> ID parameterlist instance_bodylist SEMICOLON
Rule 291   instance -> SENS_OR parameterlist instance_bodylist SEMICOLON
Rule 292   instance_bodylist -> instance_bodylist COMMA instance_body
Rule 293   instance_bodylist -> instance_body
Rule 294   instance_body -> ID LPAREN instance_ports RPAREN
Rule 295   instance_body -> ID width LPAREN instance_ports RPAREN
Rule 296   instance -> ID instance_bodylist_noname SEMICOLON
Rule 297   instance -> SENS_OR instance_bodylist_noname SEMICOLON
Rule 298   instance_bodylist_noname -> instance_bodylist_noname COMMA instance_body_noname
Rule 299   instance_bodylist_noname -> instance_body_noname
Rule 300   instance_body_noname -> LPAREN instance_ports RPAREN
Rule 301   parameterlist -> DELAY LPAREN param_args RPAREN
Rule 302   parameterlist -> DELAY LPAREN param_args_noname RPAREN
Rule 303   parameterlist -> empty
Rule 304   param_args_noname -> param_args_noname COMMA param_arg_noname
Rule 305   param_args_noname -> param_arg_noname
Rule 306   param_args -> param_args COMMA param_arg
Rule 307   param_args -> param_arg
Rule 308   param_args -> empty
Rule 309   param_arg_noname -> expression
Rule 310   param_arg -> DOT ID LPAREN expression RPAREN
Rule 311   instance_ports -> instance_ports_list
Rule 312   instance_ports -> instance_ports_arg
Rule 313   instance_ports_list -> instance_ports_list COMMA instance_port_list
Rule 314   instance_ports_list -> instance_port_list
Rule 315   instance_ports_list -> empty
Rule 316   instance_port_list -> expression
Rule 317   instance_ports_arg -> instance_ports_arg COMMA instance_port_arg
Rule 318   instance_ports_arg -> instance_port_arg
Rule 319   instance_port_arg -> DOT ID LPAREN identifier RPAREN
Rule 320   instance_port_arg -> DOT ID LPAREN expression RPAREN
Rule 321   instance_port_arg -> DOT ID LPAREN RPAREN
Rule 322   genvardecl -> GENVAR genvarlist SEMICOLON
Rule 323   genvarlist -> genvarlist COMMA genvar
Rule 324   genvarlist -> genvar
Rule 325   genvar -> ID
Rule 326   generate -> GENERATE generate_items ENDGENERATE
Rule 327   generate_items -> empty
Rule 328   generate_items -> generate_items generate_item
Rule 329   generate_items -> generate_item
Rule 330   generate_item -> standard_item
Rule 331   generate_item -> generate_if
Rule 332   generate_item -> generate_for
Rule 333   generate_block -> BEGIN generate_items END
Rule 334   generate_block -> BEGIN COLON ID generate_items END
Rule 335   generate_if -> IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item
Rule 336   generate_if -> IF LPAREN cond RPAREN gif_true_item
Rule 337   gif_true_item -> generate_item
Rule 338   gif_true_item -> generate_block
Rule 339   gif_false_item -> generate_item
Rule 340   gif_false_item -> generate_block
Rule 341   generate_for -> FOR LPAREN forpre forcond forpost RPAREN generate_forcontent
Rule 342   generate_forcontent -> generate_item
Rule 343   generate_forcontent -> generate_block
Rule 344   systemcall -> DOLLER ID
Rule 345   systemcall -> DOLLER ID LPAREN sysargs RPAREN
Rule 346   systemcall -> DOLLER SIGNED LPAREN sysargs RPAREN
Rule 347   sysargs -> sysargs COMMA sysarg
Rule 348   sysargs -> sysarg
Rule 349   sysargs -> empty
Rule 350   sysarg -> expression
Rule 351   function -> FUNCTION width ID SEMICOLON function_statement ENDFUNCTION
Rule 352   function -> FUNCTION ID SEMICOLON function_statement ENDFUNCTION
Rule 353   function_statement -> funcvardecls function_calc
Rule 354   funcvardecls -> funcvardecls funcvardecl
Rule 355   funcvardecls -> funcvardecl
Rule 356   funcvardecl -> decl
Rule 357   funcvardecl -> integerdecl
Rule 358   function_calc -> blocking_substitution
Rule 359   function_calc -> if_statement
Rule 360   function_calc -> for_statement
Rule 361   function_calc -> while_statement
Rule 362   function_calc -> case_statement
Rule 363   function_calc -> casex_statement
Rule 364   function_calc -> block
Rule 365   function_calc -> namedblock
Rule 366   functioncall -> identifier LPAREN func_args RPAREN
Rule 367   func_args -> func_args COMMA expression
Rule 368   func_args -> expression
Rule 369   func_args -> empty
Rule 370   task -> TASK ID SEMICOLON task_statement ENDTASK
Rule 371   task_statement -> taskvardecls task_calc
Rule 372   taskvardecls -> taskvardecls taskvardecl
Rule 373   taskvardecls -> taskvardecl
Rule 374   taskvardecls -> empty
Rule 375   taskvardecl -> decl
Rule 376   taskvardecl -> integerdecl
Rule 377   task_calc -> blocking_substitution
Rule 378   task_calc -> if_statement
Rule 379   task_calc -> for_statement
Rule 380   task_calc -> while_statement
Rule 381   task_calc -> case_statement
Rule 382   task_calc -> casex_statement
Rule 383   task_calc -> block
Rule 384   task_calc -> namedblock
Rule 385   identifier -> ID
Rule 386   identifier -> scope ID
Rule 387   scope -> identifier DOT
Rule 388   scope -> pointer DOT
Rule 389   disable -> DISABLE ID
Rule 390   single_statement -> DELAY expression SEMICOLON
Rule 391   single_statement -> systemcall SEMICOLON
Rule 392   single_statement -> disable SEMICOLON
Rule 393   empty -> <empty>

Terminals, with rules where they appear

ALWAYS               : 196
AND                  : 131 155
ASSIGN               : 106 107
AT                   : 197 205 206 214 215
BEGIN                : 239 240 244 245 333 334
CASE                 : 274
CASEX                : 275
COLON                : 53 54 108 111 161 175 178 244 245 279 282 334
COMMA                : 18 19 20 21 22 32 46 76 86 90 103 116 172 212 280 292 298 304 306 313 317 323 347 367
COND                 : 161
DEFAULT              : 282
DELAY                : 12 234 235 236 237 301 302 390
DISABLE              : 389
DIVIDE               : 139
DOLLER               : 344 345 346
DOT                  : 310 319 320 321 387 388
ELSE                 : 256 258 335
END                  : 239 240 244 245 333 334
ENDCASE              : 274 275
ENDFUNCTION          : 351 352
ENDGENERATE          : 326
ENDMODULE            : 9
ENDTASK              : 370
EQ                   : 151
EQL                  : 153
EQUALS               : 7 82 83 105 106 107 231 232
FLOATNUMBER          : 186
FOR                  : 264 341
FOREVER              : 289
FORK                 : 254 255
FUNCTION             : 351 352
GE                   : 150
GENERATE             : 326
GENVAR               : 322
GT                   : 148
ID                   : 7 8 10 34 78 79 82 83 88 92 105 244 245 290 294 295 296 310 319 320 321 325 334 344 345 351 352 370 385 386 389
IF                   : 256 257 258 259 335 336
INITIAL              : 283
INOUT                : 39
INPUT                : 37
INTEGER              : 22 27 84 85 97 102
INTNUMBER_BIN        : 189
INTNUMBER_DEC        : 187
INTNUMBER_HEX        : 193
INTNUMBER_OCT        : 191
JOIN                 : 254 255
LAND                 : 159
LBRACE               : 115 171 174
LBRACKET             : 53 54 108 109 110 111 112 113 175 176 177 178 179 180 181 182
LE                   : 149 233
LNOT                 : 129
LOCALPARAM           : 98 99 100 101 102
LOR                  : 160
LPAREN               : 7 8 12 28 29 30 162 197 206 215 234 256 257 258 259 264 272 274 275 286 294 295 300 301 302 310 319 320 321 335 336 341 345 346 366
LSHIFT               : 143
LSHIFTA              : 145
LT                   : 147
MINUS                : 127 142
MINUSCOLON           : 110 113 177 180
MOD                  : 140
MODULE               : 9
NAND                 : 132
NE                   : 152
NEGEDGE              : 199
NEL                  : 154
NOR                  : 133
NOT                  : 130
OR                   : 134 158
OUTPUT               : 38
PARAMETER            : 18 19 20 21 22 23 24 25 26 27 93 94 95 96 97
PLUS                 : 128 141
PLUSCOLON            : 109 112 176 179
POSEDGE              : 198
POWER                : 137
RBRACE               : 115 171 174
RBRACKET             : 53 54 108 109 110 111 112 113 175 176 177 178 179 180 181 182
REAL                 : 89
REG                  : 41
RPAREN               : 7 8 12 28 29 30 162 197 206 215 234 256 257 258 259 264 272 274 275 286 294 295 300 301 302 310 319 320 321 335 336 341 345 346 366
RSHIFT               : 144
RSHIFTA              : 146
SEMICOLON            : 28 29 30 31 74 75 80 81 84 85 89 93 94 95 96 97 98 99 100 101 102 106 107 231 233 266 267 268 285 288 290 291 296 297 322 351 352 370 390 391 392
SENS_OR              : 11 202 211 291 297
SIGNED               : 19 21 24 26 43 85 94 96 99 101 346
SIGNED_INTNUMBER_BIN : 190
SIGNED_INTNUMBER_DEC : 188
SIGNED_INTNUMBER_HEX : 194
SIGNED_INTNUMBER_OCT : 192
STRING_LITERAL       : 195
SUPPLY0              : 44
SUPPLY1              : 45
TASK                 : 370
TIMES                : 7 7 8 8 138 214 215
TRI                  : 40
WAIT                 : 286
WHILE                : 272
WIRE                 : 42
XNOR                 : 136 157
XOR                  : 135 156
error                : 

Nonterminals, with rules where they appear

always               : 68
always_statement     : 196
assignment           : 67
basic_statement      : 230 243 248 261 271 273 279 282 284 287 289
block                : 224 364 383
block_statement      : 241 242
block_statements     : 239 241 254
blocking_substitution : 227 265 358 377
blocking_substitution_base : 269
case_comp            : 274 275
case_statement       : 217 362 381
casecontent_condition : 279 280
casecontent_statement : 277 278
casecontent_statements : 274 275 277
casex_statement      : 218 363 382
concat               : 163 174
concatlist           : 171 172
cond                 : 256 257 258 259 267 272 286 335 336
const_expression     : 170
decl                 : 60 249 356 375
declassign           : 63
declassign_element   : 80 81
declname             : 76 77
declnamelist         : 74 75 76
definition           : 3 4
definitions          : 2 3
delays               : 83 83 107 107 231 231 232 232 233 233 258 259
description          : 1
disable              : 392
edgesig              : 202 203
edgesig_base         : 198 199
edgesigs             : 197 202
else_statement       : 256 258
empty                : 13 57 204 238 270 303 308 315 327 349 369 374
event_statement      : 221
expression           : 7 53 53 54 54 108 108 109 109 110 110 111 111 112 112 113 113 126 127 128 129 130 131 132 133 134 135 136 137 137 138 138 139 139 140 140 141 141 142 142 143 143 144 144 145 145 146 146 147 147 148 148 149 149 150 150 151 151 152 152 153 153 154 154 155 155 156 156 157 157 158 158 159 159 160 160 161 161 161 162 172 173 174 175 175 176 176 177 177 178 178 179 179 180 180 181 182 234 260 276 280 281 309 310 316 320 350 367 368 390
floatnumber          : 184 237
for_statement        : 219 360 379
forcond              : 264 341
forcontent_statement : 264
forever_statement    : 223
forpost              : 264 341
forpre               : 264 341
func_args            : 366 367
function             : 71
function_calc        : 353
function_statement   : 351 352
functioncall         : 167
funcvardecl          : 354 355
funcvardecls         : 353 354
generate             : 59
generate_block       : 338 340 343
generate_for         : 332
generate_forcontent  : 341
generate_if          : 331
generate_item        : 328 329 337 339 342
generate_items       : 326 328 333 334
genvar               : 323 324
genvardecl           : 66
genvarlist           : 322 323
gif_false_item       : 335
gif_true_item        : 335 336
identifier           : 111 112 113 118 125 169 175 176 177 181 200 208 235 319 366 387
if_statement         : 216 359 378
ifcontent_statement  : 262 263
initial              : 69
initial_statement    : 283
instance             : 70
instance_body        : 292 293
instance_body_noname : 298 299
instance_bodylist    : 290 291 292
instance_bodylist_noname : 296 297 298
instance_port_arg    : 317 318
instance_port_list   : 313 314
instance_ports       : 294 295 300
instance_ports_arg   : 312 317
instance_ports_list  : 311 313
integerdecl          : 61 250 357 376
integername          : 86 87
integernamelist      : 84 85 86
intnumber            : 183 236
ioport               : 46
ioport_head          : 47
ioports              : 29 46
item                 : 55 56
items                : 9 55
lconcat              : 121 124
lconcat_one          : 116 117
lconcatlist          : 115 116
length               : 79
levelsig             : 205 211 212 213
levelsig_base        : 207
levelsigs            : 206 211 212
localparamdecl       : 65 253
lpartselect          : 119 122
lpointer             : 120 123
lvalue               : 106 107 231 232 233
moduledef            : 5
modulename           : 9
namedblock           : 225 365 384
namedblock_statement : 246 247
namedblock_statements : 244 246
nonblocking_substitution : 228
parallelblock        : 226
param                : 15 16
param_arg            : 306 307
param_arg_noname     : 304 305
param_args           : 301 306
param_args_noname    : 302 304
param_end            : 14 17
param_substitution   : 103 104
param_substitution_list : 18 19 20 21 22 23 24 25 26 27 93 94 95 96 97 98 99 100 101 102 103
parameterdecl        : 64 252
parameterlist        : 290 291
paramlist            : 9
params               : 12
params_begin         : 14 15
partselect           : 165 210
pointer              : 108 109 110 114 166 178 179 180 182 201 209 388
portlist             : 9
portname             : 32 33 48 49 50 51 52
ports                : 28 32
pragma               : 6 73
realdecl             : 62 251
realname             : 90 91
realnamelist         : 89 90
repeat               : 164
rvalue               : 82 83 105 106 107 231 232 233
scope                : 386
senslist             : 196 285
sigtype              : 35 36
sigtypes             : 35 48 49 50 51 74 75 80 81
single_statement     : 229
source_text          : 0
standard_item        : 58 330
stringliteral        : 185
sysarg               : 347 348
sysargs              : 345 346 347
systemcall           : 168 391
task                 : 72
task_calc            : 371
task_statement       : 370
taskvardecl          : 372 373
taskvardecls         : 371 372
true_statement       : 256 257 258 259
wait_statement       : 222
waitcontent_statement : 286
while_statement      : 220 361 380
whilecontent_statement : 272
width                : 20 21 25 26 49 51 75 81 95 96 100 101 295 351

Parsing method: LALR

state 0

    (0) S' -> . source_text
    (1) source_text -> . description
    (2) description -> . definitions
    (3) definitions -> . definitions definition
    (4) definitions -> . definition
    (5) definition -> . moduledef
    (6) definition -> . pragma
    (9) moduledef -> . MODULE modulename paramlist portlist items ENDMODULE
    (7) pragma -> . LPAREN TIMES ID EQUALS expression TIMES RPAREN
    (8) pragma -> . LPAREN TIMES ID TIMES RPAREN

    MODULE          shift and go to state 4
    LPAREN          shift and go to state 2

    definition                     shift and go to state 1
    description                    shift and go to state 3
    source_text                    shift and go to state 5
    pragma                         shift and go to state 6
    definitions                    shift and go to state 7
    moduledef                      shift and go to state 8

state 1

    (4) definitions -> definition .

    MODULE          reduce using rule 4 (definitions -> definition .)
    LPAREN          reduce using rule 4 (definitions -> definition .)
    $end            reduce using rule 4 (definitions -> definition .)


state 2

    (7) pragma -> LPAREN . TIMES ID EQUALS expression TIMES RPAREN
    (8) pragma -> LPAREN . TIMES ID TIMES RPAREN

    TIMES           shift and go to state 9


state 3

    (1) source_text -> description .

    $end            reduce using rule 1 (source_text -> description .)


state 4

    (9) moduledef -> MODULE . modulename paramlist portlist items ENDMODULE
    (10) modulename -> . ID
    (11) modulename -> . SENS_OR

    ID              shift and go to state 12
    SENS_OR         shift and go to state 11

    modulename                     shift and go to state 10

state 5

    (0) S' -> source_text .



state 6

    (6) definition -> pragma .

    MODULE          reduce using rule 6 (definition -> pragma .)
    LPAREN          reduce using rule 6 (definition -> pragma .)
    $end            reduce using rule 6 (definition -> pragma .)


state 7

    (2) description -> definitions .
    (3) definitions -> definitions . definition
    (5) definition -> . moduledef
    (6) definition -> . pragma
    (9) moduledef -> . MODULE modulename paramlist portlist items ENDMODULE
    (7) pragma -> . LPAREN TIMES ID EQUALS expression TIMES RPAREN
    (8) pragma -> . LPAREN TIMES ID TIMES RPAREN

    $end            reduce using rule 2 (description -> definitions .)
    MODULE          shift and go to state 4
    LPAREN          shift and go to state 2

    definition                     shift and go to state 13
    pragma                         shift and go to state 6
    moduledef                      shift and go to state 8

state 8

    (5) definition -> moduledef .

    MODULE          reduce using rule 5 (definition -> moduledef .)
    LPAREN          reduce using rule 5 (definition -> moduledef .)
    $end            reduce using rule 5 (definition -> moduledef .)


state 9

    (7) pragma -> LPAREN TIMES . ID EQUALS expression TIMES RPAREN
    (8) pragma -> LPAREN TIMES . ID TIMES RPAREN

    ID              shift and go to state 14


state 10

    (9) moduledef -> MODULE modulename . paramlist portlist items ENDMODULE
    (12) paramlist -> . DELAY LPAREN params RPAREN
    (13) paramlist -> . empty
    (393) empty -> .

    DELAY           shift and go to state 16
    LPAREN          reduce using rule 393 (empty -> .)
    SEMICOLON       reduce using rule 393 (empty -> .)

    paramlist                      shift and go to state 15
    empty                          shift and go to state 17

state 11

    (11) modulename -> SENS_OR .

    DELAY           reduce using rule 11 (modulename -> SENS_OR .)
    LPAREN          reduce using rule 11 (modulename -> SENS_OR .)
    SEMICOLON       reduce using rule 11 (modulename -> SENS_OR .)


state 12

    (10) modulename -> ID .

    DELAY           reduce using rule 10 (modulename -> ID .)
    LPAREN          reduce using rule 10 (modulename -> ID .)
    SEMICOLON       reduce using rule 10 (modulename -> ID .)


state 13

    (3) definitions -> definitions definition .

    MODULE          reduce using rule 3 (definitions -> definitions definition .)
    LPAREN          reduce using rule 3 (definitions -> definitions definition .)
    $end            reduce using rule 3 (definitions -> definitions definition .)


state 14

    (7) pragma -> LPAREN TIMES ID . EQUALS expression TIMES RPAREN
    (8) pragma -> LPAREN TIMES ID . TIMES RPAREN

    EQUALS          shift and go to state 18
    TIMES           shift and go to state 19


state 15

    (9) moduledef -> MODULE modulename paramlist . portlist items ENDMODULE
    (28) portlist -> . LPAREN ports RPAREN SEMICOLON
    (29) portlist -> . LPAREN ioports RPAREN SEMICOLON
    (30) portlist -> . LPAREN RPAREN SEMICOLON
    (31) portlist -> . SEMICOLON

    LPAREN          shift and go to state 22
    SEMICOLON       shift and go to state 20

    portlist                       shift and go to state 21

state 16

    (12) paramlist -> DELAY . LPAREN params RPAREN

    LPAREN          shift and go to state 23


state 17

    (13) paramlist -> empty .

    LPAREN          reduce using rule 13 (paramlist -> empty .)
    SEMICOLON       reduce using rule 13 (paramlist -> empty .)


state 18

    (7) pragma -> LPAREN TIMES ID EQUALS . expression TIMES RPAREN
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 58
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 19

    (8) pragma -> LPAREN TIMES ID TIMES . RPAREN

    RPAREN          shift and go to state 61


state 20

    (31) portlist -> SEMICOLON .

    GENERATE        reduce using rule 31 (portlist -> SEMICOLON .)
    INTEGER         reduce using rule 31 (portlist -> SEMICOLON .)
    REAL            reduce using rule 31 (portlist -> SEMICOLON .)
    PARAMETER       reduce using rule 31 (portlist -> SEMICOLON .)
    LOCALPARAM      reduce using rule 31 (portlist -> SEMICOLON .)
    GENVAR          reduce using rule 31 (portlist -> SEMICOLON .)
    ASSIGN          reduce using rule 31 (portlist -> SEMICOLON .)
    ALWAYS          reduce using rule 31 (portlist -> SEMICOLON .)
    INITIAL         reduce using rule 31 (portlist -> SEMICOLON .)
    ID              reduce using rule 31 (portlist -> SEMICOLON .)
    SENS_OR         reduce using rule 31 (portlist -> SEMICOLON .)
    FUNCTION        reduce using rule 31 (portlist -> SEMICOLON .)
    TASK            reduce using rule 31 (portlist -> SEMICOLON .)
    LPAREN          reduce using rule 31 (portlist -> SEMICOLON .)
    INPUT           reduce using rule 31 (portlist -> SEMICOLON .)
    OUTPUT          reduce using rule 31 (portlist -> SEMICOLON .)
    INOUT           reduce using rule 31 (portlist -> SEMICOLON .)
    TRI             reduce using rule 31 (portlist -> SEMICOLON .)
    REG             reduce using rule 31 (portlist -> SEMICOLON .)
    WIRE            reduce using rule 31 (portlist -> SEMICOLON .)
    SIGNED          reduce using rule 31 (portlist -> SEMICOLON .)
    SUPPLY0         reduce using rule 31 (portlist -> SEMICOLON .)
    SUPPLY1         reduce using rule 31 (portlist -> SEMICOLON .)
    ENDMODULE       reduce using rule 31 (portlist -> SEMICOLON .)


state 21

    (9) moduledef -> MODULE modulename paramlist portlist . items ENDMODULE
    (55) items -> . items item
    (56) items -> . item
    (57) items -> . empty
    (58) item -> . standard_item
    (59) item -> . generate
    (393) empty -> .
    (60) standard_item -> . decl
    (61) standard_item -> . integerdecl
    (62) standard_item -> . realdecl
    (63) standard_item -> . declassign
    (64) standard_item -> . parameterdecl
    (65) standard_item -> . localparamdecl
    (66) standard_item -> . genvardecl
    (67) standard_item -> . assignment
    (68) standard_item -> . always
    (69) standard_item -> . initial
    (70) standard_item -> . instance
    (71) standard_item -> . function
    (72) standard_item -> . task
    (73) standard_item -> . pragma
    (326) generate -> . GENERATE generate_items ENDGENERATE
    (74) decl -> . sigtypes declnamelist SEMICOLON
    (75) decl -> . sigtypes width declnamelist SEMICOLON
    (84) integerdecl -> . INTEGER integernamelist SEMICOLON
    (85) integerdecl -> . INTEGER SIGNED integernamelist SEMICOLON
    (89) realdecl -> . REAL realnamelist SEMICOLON
    (80) declassign -> . sigtypes declassign_element SEMICOLON
    (81) declassign -> . sigtypes width declassign_element SEMICOLON
    (93) parameterdecl -> . PARAMETER param_substitution_list SEMICOLON
    (94) parameterdecl -> . PARAMETER SIGNED param_substitution_list SEMICOLON
    (95) parameterdecl -> . PARAMETER width param_substitution_list SEMICOLON
    (96) parameterdecl -> . PARAMETER SIGNED width param_substitution_list SEMICOLON
    (97) parameterdecl -> . PARAMETER INTEGER param_substitution_list SEMICOLON
    (98) localparamdecl -> . LOCALPARAM param_substitution_list SEMICOLON
    (99) localparamdecl -> . LOCALPARAM SIGNED param_substitution_list SEMICOLON
    (100) localparamdecl -> . LOCALPARAM width param_substitution_list SEMICOLON
    (101) localparamdecl -> . LOCALPARAM SIGNED width param_substitution_list SEMICOLON
    (102) localparamdecl -> . LOCALPARAM INTEGER param_substitution_list SEMICOLON
    (322) genvardecl -> . GENVAR genvarlist SEMICOLON
    (106) assignment -> . ASSIGN lvalue EQUALS rvalue SEMICOLON
    (107) assignment -> . ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON
    (196) always -> . ALWAYS senslist always_statement
    (283) initial -> . INITIAL initial_statement
    (290) instance -> . ID parameterlist instance_bodylist SEMICOLON
    (291) instance -> . SENS_OR parameterlist instance_bodylist SEMICOLON
    (296) instance -> . ID instance_bodylist_noname SEMICOLON
    (297) instance -> . SENS_OR instance_bodylist_noname SEMICOLON
    (351) function -> . FUNCTION width ID SEMICOLON function_statement ENDFUNCTION
    (352) function -> . FUNCTION ID SEMICOLON function_statement ENDFUNCTION
    (370) task -> . TASK ID SEMICOLON task_statement ENDTASK
    (7) pragma -> . LPAREN TIMES ID EQUALS expression TIMES RPAREN
    (8) pragma -> . LPAREN TIMES ID TIMES RPAREN
    (35) sigtypes -> . sigtypes sigtype
    (36) sigtypes -> . sigtype
    (37) sigtype -> . INPUT
    (38) sigtype -> . OUTPUT
    (39) sigtype -> . INOUT
    (40) sigtype -> . TRI
    (41) sigtype -> . REG
    (42) sigtype -> . WIRE
    (43) sigtype -> . SIGNED
    (44) sigtype -> . SUPPLY0
    (45) sigtype -> . SUPPLY1

  ! shift/reduce conflict for GENERATE resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for REAL resolved as shift
  ! shift/reduce conflict for PARAMETER resolved as shift
  ! shift/reduce conflict for LOCALPARAM resolved as shift
  ! shift/reduce conflict for GENVAR resolved as shift
  ! shift/reduce conflict for ASSIGN resolved as shift
  ! shift/reduce conflict for ALWAYS resolved as shift
  ! shift/reduce conflict for INITIAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SENS_OR resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for TASK resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for OUTPUT resolved as shift
  ! shift/reduce conflict for INOUT resolved as shift
  ! shift/reduce conflict for TRI resolved as shift
  ! shift/reduce conflict for REG resolved as shift
  ! shift/reduce conflict for WIRE resolved as shift
  ! shift/reduce conflict for SIGNED resolved as shift
  ! shift/reduce conflict for SUPPLY0 resolved as shift
  ! shift/reduce conflict for SUPPLY1 resolved as shift
    ENDMODULE       reduce using rule 393 (empty -> .)
    GENERATE        shift and go to state 77
    INTEGER         shift and go to state 83
    REAL            shift and go to state 63
    PARAMETER       shift and go to state 70
    LOCALPARAM      shift and go to state 101
    GENVAR          shift and go to state 69
    ASSIGN          shift and go to state 85
    ALWAYS          shift and go to state 68
    INITIAL         shift and go to state 66
    ID              shift and go to state 92
    SENS_OR         shift and go to state 99
    FUNCTION        shift and go to state 93
    TASK            shift and go to state 90
    LPAREN          shift and go to state 2
    INPUT           shift and go to state 91
    OUTPUT          shift and go to state 96
    INOUT           shift and go to state 72
    TRI             shift and go to state 89
    REG             shift and go to state 67
    WIRE            shift and go to state 104
    SIGNED          shift and go to state 98
    SUPPLY0         shift and go to state 79
    SUPPLY1         shift and go to state 80

  ! GENERATE        [ reduce using rule 393 (empty -> .) ]
  ! INTEGER         [ reduce using rule 393 (empty -> .) ]
  ! REAL            [ reduce using rule 393 (empty -> .) ]
  ! PARAMETER       [ reduce using rule 393 (empty -> .) ]
  ! LOCALPARAM      [ reduce using rule 393 (empty -> .) ]
  ! GENVAR          [ reduce using rule 393 (empty -> .) ]
  ! ASSIGN          [ reduce using rule 393 (empty -> .) ]
  ! ALWAYS          [ reduce using rule 393 (empty -> .) ]
  ! INITIAL         [ reduce using rule 393 (empty -> .) ]
  ! ID              [ reduce using rule 393 (empty -> .) ]
  ! SENS_OR         [ reduce using rule 393 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 393 (empty -> .) ]
  ! TASK            [ reduce using rule 393 (empty -> .) ]
  ! LPAREN          [ reduce using rule 393 (empty -> .) ]
  ! INPUT           [ reduce using rule 393 (empty -> .) ]
  ! OUTPUT          [ reduce using rule 393 (empty -> .) ]
  ! INOUT           [ reduce using rule 393 (empty -> .) ]
  ! TRI             [ reduce using rule 393 (empty -> .) ]
  ! REG             [ reduce using rule 393 (empty -> .) ]
  ! WIRE            [ reduce using rule 393 (empty -> .) ]
  ! SIGNED          [ reduce using rule 393 (empty -> .) ]
  ! SUPPLY0         [ reduce using rule 393 (empty -> .) ]
  ! SUPPLY1         [ reduce using rule 393 (empty -> .) ]

    decl                           shift and go to state 62
    localparamdecl                 shift and go to state 64
    declassign                     shift and go to state 65
    integerdecl                    shift and go to state 71
    standard_item                  shift and go to state 73
    genvardecl                     shift and go to state 74
    sigtype                        shift and go to state 75
    initial                        shift and go to state 76
    instance                       shift and go to state 78
    sigtypes                       shift and go to state 88
    assignment                     shift and go to state 81
    realdecl                       shift and go to state 82
    empty                          shift and go to state 86
    function                       shift and go to state 87
    parameterdecl                  shift and go to state 84
    pragma                         shift and go to state 102
    generate                       shift and go to state 94
    task                           shift and go to state 95
    always                         shift and go to state 97
    item                           shift and go to state 100
    items                          shift and go to state 103

state 22

    (28) portlist -> LPAREN . ports RPAREN SEMICOLON
    (29) portlist -> LPAREN . ioports RPAREN SEMICOLON
    (30) portlist -> LPAREN . RPAREN SEMICOLON
    (32) ports -> . ports COMMA portname
    (33) ports -> . portname
    (46) ioports -> . ioports COMMA ioport
    (47) ioports -> . ioport_head
    (34) portname -> . ID
    (50) ioport_head -> . sigtypes portname
    (51) ioport_head -> . sigtypes width portname
    (35) sigtypes -> . sigtypes sigtype
    (36) sigtypes -> . sigtype
    (37) sigtype -> . INPUT
    (38) sigtype -> . OUTPUT
    (39) sigtype -> . INOUT
    (40) sigtype -> . TRI
    (41) sigtype -> . REG
    (42) sigtype -> . WIRE
    (43) sigtype -> . SIGNED
    (44) sigtype -> . SUPPLY0
    (45) sigtype -> . SUPPLY1

    RPAREN          shift and go to state 107
    ID              shift and go to state 109
    INPUT           shift and go to state 91
    OUTPUT          shift and go to state 96
    INOUT           shift and go to state 72
    TRI             shift and go to state 89
    REG             shift and go to state 67
    WIRE            shift and go to state 104
    SIGNED          shift and go to state 98
    SUPPLY0         shift and go to state 79
    SUPPLY1         shift and go to state 80

    ioport_head                    shift and go to state 105
    sigtype                        shift and go to state 75
    ioports                        shift and go to state 106
    sigtypes                       shift and go to state 108
    portname                       shift and go to state 110
    ports                          shift and go to state 111

state 23

    (12) paramlist -> DELAY LPAREN . params RPAREN
    (14) params -> . params_begin param_end
    (17) params -> . param_end
    (15) params_begin -> . params_begin param
    (16) params_begin -> . param
    (23) param_end -> . PARAMETER param_substitution_list
    (24) param_end -> . PARAMETER SIGNED param_substitution_list
    (25) param_end -> . PARAMETER width param_substitution_list
    (26) param_end -> . PARAMETER SIGNED width param_substitution_list
    (27) param_end -> . PARAMETER INTEGER param_substitution_list
    (18) param -> . PARAMETER param_substitution_list COMMA
    (19) param -> . PARAMETER SIGNED param_substitution_list COMMA
    (20) param -> . PARAMETER width param_substitution_list COMMA
    (21) param -> . PARAMETER SIGNED width param_substitution_list COMMA
    (22) param -> . PARAMETER INTEGER param_substitution_list COMMA

    PARAMETER       shift and go to state 116

    params_begin                   shift and go to state 112
    param                          shift and go to state 113
    param_end                      shift and go to state 114
    params                         shift and go to state 115

state 24

    (129) expression -> LNOT . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 117
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 25

    (186) floatnumber -> FLOATNUMBER .

    POWER           reduce using rule 186 (floatnumber -> FLOATNUMBER .)
    TIMES           reduce using rule 186 (floatnumber -> FLOATNUMBER .)
    DIVIDE          reduce using rule 186 (floatnumber -> FLOATNUMBER .)
    MOD             reduce using rule 186 (floatnumber -> FLOATNUMBER .)
    PLUS            reduce using rule 186 (floatnumber -> FLOATNUMBER .)
    MINUS           reduce using rule 186 (floatnumber -> FLOATNUMBER .)
    LSHIFT          reduce using rule 186 (floatnumber -> FLOATNUMBER .)
    RSHIFT          reduce using rule 186 (floatnumber -> FLOATNUMBER .)
    LSHIFTA         reduce using rule 186 (floatnumber -> FLOATNUMBER .)
    RSHIFTA         reduce using rule 186 (floatnumber -> FLOATNUMBER .)
    LT              reduce using rule 186 (floatnumber -> FLOATNUMBER .)
    GT              reduce using rule 186 (floatnumber -> FLOATNUMBER .)
    LE              reduce using rule 186 (floatnumber -> FLOATNUMBER .)
    GE              reduce using rule 186 (floatnumber -> FLOATNUMBER .)
    EQ              reduce using rule 186 (floatnumber -> FLOATNUMBER .)
    NE              reduce using rule 186 (floatnumber -> FLOATNUMBER .)
    EQL             reduce using rule 186 (floatnumber -> FLOATNUMBER .)
    NEL             reduce using rule 186 (floatnumber -> FLOATNUMBER .)
    AND             reduce using rule 186 (floatnumber -> FLOATNUMBER .)
    XOR             reduce using rule 186 (floatnumber -> FLOATNUMBER .)
    XNOR            reduce using rule 186 (floatnumber -> FLOATNUMBER .)
    OR              reduce using rule 186 (floatnumber -> FLOATNUMBER .)
    LAND            reduce using rule 186 (floatnumber -> FLOATNUMBER .)
    LOR             reduce using rule 186 (floatnumber -> FLOATNUMBER .)
    COND            reduce using rule 186 (floatnumber -> FLOATNUMBER .)
    RPAREN          reduce using rule 186 (floatnumber -> FLOATNUMBER .)
    LBRACE          reduce using rule 186 (floatnumber -> FLOATNUMBER .)
    RBRACE          reduce using rule 186 (floatnumber -> FLOATNUMBER .)
    COMMA           reduce using rule 186 (floatnumber -> FLOATNUMBER .)
    COLON           reduce using rule 186 (floatnumber -> FLOATNUMBER .)
    PLUSCOLON       reduce using rule 186 (floatnumber -> FLOATNUMBER .)
    MINUSCOLON      reduce using rule 186 (floatnumber -> FLOATNUMBER .)
    RBRACKET        reduce using rule 186 (floatnumber -> FLOATNUMBER .)
    SEMICOLON       reduce using rule 186 (floatnumber -> FLOATNUMBER .)
    IF              reduce using rule 186 (floatnumber -> FLOATNUMBER .)
    ID              reduce using rule 186 (floatnumber -> FLOATNUMBER .)
    LNOT            reduce using rule 186 (floatnumber -> FLOATNUMBER .)
    NOT             reduce using rule 186 (floatnumber -> FLOATNUMBER .)
    NAND            reduce using rule 186 (floatnumber -> FLOATNUMBER .)
    NOR             reduce using rule 186 (floatnumber -> FLOATNUMBER .)
    LPAREN          reduce using rule 186 (floatnumber -> FLOATNUMBER .)
    DOLLER          reduce using rule 186 (floatnumber -> FLOATNUMBER .)
    INTNUMBER_DEC   reduce using rule 186 (floatnumber -> FLOATNUMBER .)
    SIGNED_INTNUMBER_DEC reduce using rule 186 (floatnumber -> FLOATNUMBER .)
    INTNUMBER_BIN   reduce using rule 186 (floatnumber -> FLOATNUMBER .)
    SIGNED_INTNUMBER_BIN reduce using rule 186 (floatnumber -> FLOATNUMBER .)
    INTNUMBER_OCT   reduce using rule 186 (floatnumber -> FLOATNUMBER .)
    SIGNED_INTNUMBER_OCT reduce using rule 186 (floatnumber -> FLOATNUMBER .)
    INTNUMBER_HEX   reduce using rule 186 (floatnumber -> FLOATNUMBER .)
    SIGNED_INTNUMBER_HEX reduce using rule 186 (floatnumber -> FLOATNUMBER .)
    FLOATNUMBER     reduce using rule 186 (floatnumber -> FLOATNUMBER .)
    STRING_LITERAL  reduce using rule 186 (floatnumber -> FLOATNUMBER .)


state 26

    (194) intnumber -> SIGNED_INTNUMBER_HEX .

    POWER           reduce using rule 194 (intnumber -> SIGNED_INTNUMBER_HEX .)
    TIMES           reduce using rule 194 (intnumber -> SIGNED_INTNUMBER_HEX .)
    DIVIDE          reduce using rule 194 (intnumber -> SIGNED_INTNUMBER_HEX .)
    MOD             reduce using rule 194 (intnumber -> SIGNED_INTNUMBER_HEX .)
    PLUS            reduce using rule 194 (intnumber -> SIGNED_INTNUMBER_HEX .)
    MINUS           reduce using rule 194 (intnumber -> SIGNED_INTNUMBER_HEX .)
    LSHIFT          reduce using rule 194 (intnumber -> SIGNED_INTNUMBER_HEX .)
    RSHIFT          reduce using rule 194 (intnumber -> SIGNED_INTNUMBER_HEX .)
    LSHIFTA         reduce using rule 194 (intnumber -> SIGNED_INTNUMBER_HEX .)
    RSHIFTA         reduce using rule 194 (intnumber -> SIGNED_INTNUMBER_HEX .)
    LT              reduce using rule 194 (intnumber -> SIGNED_INTNUMBER_HEX .)
    GT              reduce using rule 194 (intnumber -> SIGNED_INTNUMBER_HEX .)
    LE              reduce using rule 194 (intnumber -> SIGNED_INTNUMBER_HEX .)
    GE              reduce using rule 194 (intnumber -> SIGNED_INTNUMBER_HEX .)
    EQ              reduce using rule 194 (intnumber -> SIGNED_INTNUMBER_HEX .)
    NE              reduce using rule 194 (intnumber -> SIGNED_INTNUMBER_HEX .)
    EQL             reduce using rule 194 (intnumber -> SIGNED_INTNUMBER_HEX .)
    NEL             reduce using rule 194 (intnumber -> SIGNED_INTNUMBER_HEX .)
    AND             reduce using rule 194 (intnumber -> SIGNED_INTNUMBER_HEX .)
    XOR             reduce using rule 194 (intnumber -> SIGNED_INTNUMBER_HEX .)
    XNOR            reduce using rule 194 (intnumber -> SIGNED_INTNUMBER_HEX .)
    OR              reduce using rule 194 (intnumber -> SIGNED_INTNUMBER_HEX .)
    LAND            reduce using rule 194 (intnumber -> SIGNED_INTNUMBER_HEX .)
    LOR             reduce using rule 194 (intnumber -> SIGNED_INTNUMBER_HEX .)
    COND            reduce using rule 194 (intnumber -> SIGNED_INTNUMBER_HEX .)
    RPAREN          reduce using rule 194 (intnumber -> SIGNED_INTNUMBER_HEX .)
    LBRACE          reduce using rule 194 (intnumber -> SIGNED_INTNUMBER_HEX .)
    RBRACE          reduce using rule 194 (intnumber -> SIGNED_INTNUMBER_HEX .)
    COMMA           reduce using rule 194 (intnumber -> SIGNED_INTNUMBER_HEX .)
    COLON           reduce using rule 194 (intnumber -> SIGNED_INTNUMBER_HEX .)
    PLUSCOLON       reduce using rule 194 (intnumber -> SIGNED_INTNUMBER_HEX .)
    MINUSCOLON      reduce using rule 194 (intnumber -> SIGNED_INTNUMBER_HEX .)
    RBRACKET        reduce using rule 194 (intnumber -> SIGNED_INTNUMBER_HEX .)
    SEMICOLON       reduce using rule 194 (intnumber -> SIGNED_INTNUMBER_HEX .)
    ID              reduce using rule 194 (intnumber -> SIGNED_INTNUMBER_HEX .)
    LNOT            reduce using rule 194 (intnumber -> SIGNED_INTNUMBER_HEX .)
    NOT             reduce using rule 194 (intnumber -> SIGNED_INTNUMBER_HEX .)
    NAND            reduce using rule 194 (intnumber -> SIGNED_INTNUMBER_HEX .)
    NOR             reduce using rule 194 (intnumber -> SIGNED_INTNUMBER_HEX .)
    LPAREN          reduce using rule 194 (intnumber -> SIGNED_INTNUMBER_HEX .)
    DOLLER          reduce using rule 194 (intnumber -> SIGNED_INTNUMBER_HEX .)
    INTNUMBER_DEC   reduce using rule 194 (intnumber -> SIGNED_INTNUMBER_HEX .)
    SIGNED_INTNUMBER_DEC reduce using rule 194 (intnumber -> SIGNED_INTNUMBER_HEX .)
    INTNUMBER_BIN   reduce using rule 194 (intnumber -> SIGNED_INTNUMBER_HEX .)
    SIGNED_INTNUMBER_BIN reduce using rule 194 (intnumber -> SIGNED_INTNUMBER_HEX .)
    INTNUMBER_OCT   reduce using rule 194 (intnumber -> SIGNED_INTNUMBER_HEX .)
    SIGNED_INTNUMBER_OCT reduce using rule 194 (intnumber -> SIGNED_INTNUMBER_HEX .)
    INTNUMBER_HEX   reduce using rule 194 (intnumber -> SIGNED_INTNUMBER_HEX .)
    SIGNED_INTNUMBER_HEX reduce using rule 194 (intnumber -> SIGNED_INTNUMBER_HEX .)
    FLOATNUMBER     reduce using rule 194 (intnumber -> SIGNED_INTNUMBER_HEX .)
    STRING_LITERAL  reduce using rule 194 (intnumber -> SIGNED_INTNUMBER_HEX .)
    IF              reduce using rule 194 (intnumber -> SIGNED_INTNUMBER_HEX .)


state 27

    (168) expression -> systemcall .

    RBRACKET        reduce using rule 168 (expression -> systemcall .)
    POWER           reduce using rule 168 (expression -> systemcall .)
    TIMES           reduce using rule 168 (expression -> systemcall .)
    DIVIDE          reduce using rule 168 (expression -> systemcall .)
    MOD             reduce using rule 168 (expression -> systemcall .)
    PLUS            reduce using rule 168 (expression -> systemcall .)
    MINUS           reduce using rule 168 (expression -> systemcall .)
    LSHIFT          reduce using rule 168 (expression -> systemcall .)
    RSHIFT          reduce using rule 168 (expression -> systemcall .)
    LSHIFTA         reduce using rule 168 (expression -> systemcall .)
    RSHIFTA         reduce using rule 168 (expression -> systemcall .)
    LT              reduce using rule 168 (expression -> systemcall .)
    GT              reduce using rule 168 (expression -> systemcall .)
    LE              reduce using rule 168 (expression -> systemcall .)
    GE              reduce using rule 168 (expression -> systemcall .)
    EQ              reduce using rule 168 (expression -> systemcall .)
    NE              reduce using rule 168 (expression -> systemcall .)
    EQL             reduce using rule 168 (expression -> systemcall .)
    NEL             reduce using rule 168 (expression -> systemcall .)
    AND             reduce using rule 168 (expression -> systemcall .)
    XOR             reduce using rule 168 (expression -> systemcall .)
    XNOR            reduce using rule 168 (expression -> systemcall .)
    OR              reduce using rule 168 (expression -> systemcall .)
    LAND            reduce using rule 168 (expression -> systemcall .)
    LOR             reduce using rule 168 (expression -> systemcall .)
    COND            reduce using rule 168 (expression -> systemcall .)
    RPAREN          reduce using rule 168 (expression -> systemcall .)
    COLON           reduce using rule 168 (expression -> systemcall .)
    PLUSCOLON       reduce using rule 168 (expression -> systemcall .)
    MINUSCOLON      reduce using rule 168 (expression -> systemcall .)
    SEMICOLON       reduce using rule 168 (expression -> systemcall .)
    LBRACE          reduce using rule 168 (expression -> systemcall .)
    RBRACE          reduce using rule 168 (expression -> systemcall .)
    COMMA           reduce using rule 168 (expression -> systemcall .)


state 28

    (191) intnumber -> INTNUMBER_OCT .

    POWER           reduce using rule 191 (intnumber -> INTNUMBER_OCT .)
    TIMES           reduce using rule 191 (intnumber -> INTNUMBER_OCT .)
    DIVIDE          reduce using rule 191 (intnumber -> INTNUMBER_OCT .)
    MOD             reduce using rule 191 (intnumber -> INTNUMBER_OCT .)
    PLUS            reduce using rule 191 (intnumber -> INTNUMBER_OCT .)
    MINUS           reduce using rule 191 (intnumber -> INTNUMBER_OCT .)
    LSHIFT          reduce using rule 191 (intnumber -> INTNUMBER_OCT .)
    RSHIFT          reduce using rule 191 (intnumber -> INTNUMBER_OCT .)
    LSHIFTA         reduce using rule 191 (intnumber -> INTNUMBER_OCT .)
    RSHIFTA         reduce using rule 191 (intnumber -> INTNUMBER_OCT .)
    LT              reduce using rule 191 (intnumber -> INTNUMBER_OCT .)
    GT              reduce using rule 191 (intnumber -> INTNUMBER_OCT .)
    LE              reduce using rule 191 (intnumber -> INTNUMBER_OCT .)
    GE              reduce using rule 191 (intnumber -> INTNUMBER_OCT .)
    EQ              reduce using rule 191 (intnumber -> INTNUMBER_OCT .)
    NE              reduce using rule 191 (intnumber -> INTNUMBER_OCT .)
    EQL             reduce using rule 191 (intnumber -> INTNUMBER_OCT .)
    NEL             reduce using rule 191 (intnumber -> INTNUMBER_OCT .)
    AND             reduce using rule 191 (intnumber -> INTNUMBER_OCT .)
    XOR             reduce using rule 191 (intnumber -> INTNUMBER_OCT .)
    XNOR            reduce using rule 191 (intnumber -> INTNUMBER_OCT .)
    OR              reduce using rule 191 (intnumber -> INTNUMBER_OCT .)
    LAND            reduce using rule 191 (intnumber -> INTNUMBER_OCT .)
    LOR             reduce using rule 191 (intnumber -> INTNUMBER_OCT .)
    COND            reduce using rule 191 (intnumber -> INTNUMBER_OCT .)
    RPAREN          reduce using rule 191 (intnumber -> INTNUMBER_OCT .)
    LBRACE          reduce using rule 191 (intnumber -> INTNUMBER_OCT .)
    RBRACE          reduce using rule 191 (intnumber -> INTNUMBER_OCT .)
    COMMA           reduce using rule 191 (intnumber -> INTNUMBER_OCT .)
    COLON           reduce using rule 191 (intnumber -> INTNUMBER_OCT .)
    PLUSCOLON       reduce using rule 191 (intnumber -> INTNUMBER_OCT .)
    MINUSCOLON      reduce using rule 191 (intnumber -> INTNUMBER_OCT .)
    RBRACKET        reduce using rule 191 (intnumber -> INTNUMBER_OCT .)
    SEMICOLON       reduce using rule 191 (intnumber -> INTNUMBER_OCT .)
    ID              reduce using rule 191 (intnumber -> INTNUMBER_OCT .)
    LNOT            reduce using rule 191 (intnumber -> INTNUMBER_OCT .)
    NOT             reduce using rule 191 (intnumber -> INTNUMBER_OCT .)
    NAND            reduce using rule 191 (intnumber -> INTNUMBER_OCT .)
    NOR             reduce using rule 191 (intnumber -> INTNUMBER_OCT .)
    LPAREN          reduce using rule 191 (intnumber -> INTNUMBER_OCT .)
    DOLLER          reduce using rule 191 (intnumber -> INTNUMBER_OCT .)
    INTNUMBER_DEC   reduce using rule 191 (intnumber -> INTNUMBER_OCT .)
    SIGNED_INTNUMBER_DEC reduce using rule 191 (intnumber -> INTNUMBER_OCT .)
    INTNUMBER_BIN   reduce using rule 191 (intnumber -> INTNUMBER_OCT .)
    SIGNED_INTNUMBER_BIN reduce using rule 191 (intnumber -> INTNUMBER_OCT .)
    INTNUMBER_OCT   reduce using rule 191 (intnumber -> INTNUMBER_OCT .)
    SIGNED_INTNUMBER_OCT reduce using rule 191 (intnumber -> INTNUMBER_OCT .)
    INTNUMBER_HEX   reduce using rule 191 (intnumber -> INTNUMBER_OCT .)
    SIGNED_INTNUMBER_HEX reduce using rule 191 (intnumber -> INTNUMBER_OCT .)
    FLOATNUMBER     reduce using rule 191 (intnumber -> INTNUMBER_OCT .)
    STRING_LITERAL  reduce using rule 191 (intnumber -> INTNUMBER_OCT .)
    IF              reduce using rule 191 (intnumber -> INTNUMBER_OCT .)


state 29

    (170) expression -> const_expression .

    RBRACKET        reduce using rule 170 (expression -> const_expression .)
    POWER           reduce using rule 170 (expression -> const_expression .)
    TIMES           reduce using rule 170 (expression -> const_expression .)
    DIVIDE          reduce using rule 170 (expression -> const_expression .)
    MOD             reduce using rule 170 (expression -> const_expression .)
    PLUS            reduce using rule 170 (expression -> const_expression .)
    MINUS           reduce using rule 170 (expression -> const_expression .)
    LSHIFT          reduce using rule 170 (expression -> const_expression .)
    RSHIFT          reduce using rule 170 (expression -> const_expression .)
    LSHIFTA         reduce using rule 170 (expression -> const_expression .)
    RSHIFTA         reduce using rule 170 (expression -> const_expression .)
    LT              reduce using rule 170 (expression -> const_expression .)
    GT              reduce using rule 170 (expression -> const_expression .)
    LE              reduce using rule 170 (expression -> const_expression .)
    GE              reduce using rule 170 (expression -> const_expression .)
    EQ              reduce using rule 170 (expression -> const_expression .)
    NE              reduce using rule 170 (expression -> const_expression .)
    EQL             reduce using rule 170 (expression -> const_expression .)
    NEL             reduce using rule 170 (expression -> const_expression .)
    AND             reduce using rule 170 (expression -> const_expression .)
    XOR             reduce using rule 170 (expression -> const_expression .)
    XNOR            reduce using rule 170 (expression -> const_expression .)
    OR              reduce using rule 170 (expression -> const_expression .)
    LAND            reduce using rule 170 (expression -> const_expression .)
    LOR             reduce using rule 170 (expression -> const_expression .)
    COND            reduce using rule 170 (expression -> const_expression .)
    RPAREN          reduce using rule 170 (expression -> const_expression .)
    COLON           reduce using rule 170 (expression -> const_expression .)
    PLUSCOLON       reduce using rule 170 (expression -> const_expression .)
    MINUSCOLON      reduce using rule 170 (expression -> const_expression .)
    SEMICOLON       reduce using rule 170 (expression -> const_expression .)
    LBRACE          reduce using rule 170 (expression -> const_expression .)
    RBRACE          reduce using rule 170 (expression -> const_expression .)
    COMMA           reduce using rule 170 (expression -> const_expression .)


state 30

    (164) expression -> repeat .

    RBRACKET        reduce using rule 164 (expression -> repeat .)
    POWER           reduce using rule 164 (expression -> repeat .)
    TIMES           reduce using rule 164 (expression -> repeat .)
    DIVIDE          reduce using rule 164 (expression -> repeat .)
    MOD             reduce using rule 164 (expression -> repeat .)
    PLUS            reduce using rule 164 (expression -> repeat .)
    MINUS           reduce using rule 164 (expression -> repeat .)
    LSHIFT          reduce using rule 164 (expression -> repeat .)
    RSHIFT          reduce using rule 164 (expression -> repeat .)
    LSHIFTA         reduce using rule 164 (expression -> repeat .)
    RSHIFTA         reduce using rule 164 (expression -> repeat .)
    LT              reduce using rule 164 (expression -> repeat .)
    GT              reduce using rule 164 (expression -> repeat .)
    LE              reduce using rule 164 (expression -> repeat .)
    GE              reduce using rule 164 (expression -> repeat .)
    EQ              reduce using rule 164 (expression -> repeat .)
    NE              reduce using rule 164 (expression -> repeat .)
    EQL             reduce using rule 164 (expression -> repeat .)
    NEL             reduce using rule 164 (expression -> repeat .)
    AND             reduce using rule 164 (expression -> repeat .)
    XOR             reduce using rule 164 (expression -> repeat .)
    XNOR            reduce using rule 164 (expression -> repeat .)
    OR              reduce using rule 164 (expression -> repeat .)
    LAND            reduce using rule 164 (expression -> repeat .)
    LOR             reduce using rule 164 (expression -> repeat .)
    COND            reduce using rule 164 (expression -> repeat .)
    RPAREN          reduce using rule 164 (expression -> repeat .)
    COLON           reduce using rule 164 (expression -> repeat .)
    PLUSCOLON       reduce using rule 164 (expression -> repeat .)
    MINUSCOLON      reduce using rule 164 (expression -> repeat .)
    SEMICOLON       reduce using rule 164 (expression -> repeat .)
    LBRACE          reduce using rule 164 (expression -> repeat .)
    RBRACE          reduce using rule 164 (expression -> repeat .)
    COMMA           reduce using rule 164 (expression -> repeat .)


state 31

    (166) expression -> pointer .
    (178) partselect -> pointer . LBRACKET expression COLON expression RBRACKET
    (179) partselect -> pointer . LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> pointer . LBRACKET expression MINUSCOLON expression RBRACKET
    (182) pointer -> pointer . LBRACKET expression RBRACKET
    (388) scope -> pointer . DOT

    RBRACKET        reduce using rule 166 (expression -> pointer .)
    POWER           reduce using rule 166 (expression -> pointer .)
    TIMES           reduce using rule 166 (expression -> pointer .)
    DIVIDE          reduce using rule 166 (expression -> pointer .)
    MOD             reduce using rule 166 (expression -> pointer .)
    PLUS            reduce using rule 166 (expression -> pointer .)
    MINUS           reduce using rule 166 (expression -> pointer .)
    LSHIFT          reduce using rule 166 (expression -> pointer .)
    RSHIFT          reduce using rule 166 (expression -> pointer .)
    LSHIFTA         reduce using rule 166 (expression -> pointer .)
    RSHIFTA         reduce using rule 166 (expression -> pointer .)
    LT              reduce using rule 166 (expression -> pointer .)
    GT              reduce using rule 166 (expression -> pointer .)
    LE              reduce using rule 166 (expression -> pointer .)
    GE              reduce using rule 166 (expression -> pointer .)
    EQ              reduce using rule 166 (expression -> pointer .)
    NE              reduce using rule 166 (expression -> pointer .)
    EQL             reduce using rule 166 (expression -> pointer .)
    NEL             reduce using rule 166 (expression -> pointer .)
    AND             reduce using rule 166 (expression -> pointer .)
    XOR             reduce using rule 166 (expression -> pointer .)
    XNOR            reduce using rule 166 (expression -> pointer .)
    OR              reduce using rule 166 (expression -> pointer .)
    LAND            reduce using rule 166 (expression -> pointer .)
    LOR             reduce using rule 166 (expression -> pointer .)
    COND            reduce using rule 166 (expression -> pointer .)
    RPAREN          reduce using rule 166 (expression -> pointer .)
    COLON           reduce using rule 166 (expression -> pointer .)
    PLUSCOLON       reduce using rule 166 (expression -> pointer .)
    MINUSCOLON      reduce using rule 166 (expression -> pointer .)
    SEMICOLON       reduce using rule 166 (expression -> pointer .)
    LBRACE          reduce using rule 166 (expression -> pointer .)
    RBRACE          reduce using rule 166 (expression -> pointer .)
    COMMA           reduce using rule 166 (expression -> pointer .)
    LBRACKET        shift and go to state 118
    DOT             shift and go to state 119


state 32

    (127) expression -> MINUS . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 120
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 33

    (165) expression -> partselect .

    RBRACKET        reduce using rule 165 (expression -> partselect .)
    POWER           reduce using rule 165 (expression -> partselect .)
    TIMES           reduce using rule 165 (expression -> partselect .)
    DIVIDE          reduce using rule 165 (expression -> partselect .)
    MOD             reduce using rule 165 (expression -> partselect .)
    PLUS            reduce using rule 165 (expression -> partselect .)
    MINUS           reduce using rule 165 (expression -> partselect .)
    LSHIFT          reduce using rule 165 (expression -> partselect .)
    RSHIFT          reduce using rule 165 (expression -> partselect .)
    LSHIFTA         reduce using rule 165 (expression -> partselect .)
    RSHIFTA         reduce using rule 165 (expression -> partselect .)
    LT              reduce using rule 165 (expression -> partselect .)
    GT              reduce using rule 165 (expression -> partselect .)
    LE              reduce using rule 165 (expression -> partselect .)
    GE              reduce using rule 165 (expression -> partselect .)
    EQ              reduce using rule 165 (expression -> partselect .)
    NE              reduce using rule 165 (expression -> partselect .)
    EQL             reduce using rule 165 (expression -> partselect .)
    NEL             reduce using rule 165 (expression -> partselect .)
    AND             reduce using rule 165 (expression -> partselect .)
    XOR             reduce using rule 165 (expression -> partselect .)
    XNOR            reduce using rule 165 (expression -> partselect .)
    OR              reduce using rule 165 (expression -> partselect .)
    LAND            reduce using rule 165 (expression -> partselect .)
    LOR             reduce using rule 165 (expression -> partselect .)
    COND            reduce using rule 165 (expression -> partselect .)
    RPAREN          reduce using rule 165 (expression -> partselect .)
    COLON           reduce using rule 165 (expression -> partselect .)
    PLUSCOLON       reduce using rule 165 (expression -> partselect .)
    MINUSCOLON      reduce using rule 165 (expression -> partselect .)
    SEMICOLON       reduce using rule 165 (expression -> partselect .)
    LBRACE          reduce using rule 165 (expression -> partselect .)
    RBRACE          reduce using rule 165 (expression -> partselect .)
    COMMA           reduce using rule 165 (expression -> partselect .)


state 34

    (132) expression -> NAND . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 121
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 35

    (187) intnumber -> INTNUMBER_DEC .

    POWER           reduce using rule 187 (intnumber -> INTNUMBER_DEC .)
    TIMES           reduce using rule 187 (intnumber -> INTNUMBER_DEC .)
    DIVIDE          reduce using rule 187 (intnumber -> INTNUMBER_DEC .)
    MOD             reduce using rule 187 (intnumber -> INTNUMBER_DEC .)
    PLUS            reduce using rule 187 (intnumber -> INTNUMBER_DEC .)
    MINUS           reduce using rule 187 (intnumber -> INTNUMBER_DEC .)
    LSHIFT          reduce using rule 187 (intnumber -> INTNUMBER_DEC .)
    RSHIFT          reduce using rule 187 (intnumber -> INTNUMBER_DEC .)
    LSHIFTA         reduce using rule 187 (intnumber -> INTNUMBER_DEC .)
    RSHIFTA         reduce using rule 187 (intnumber -> INTNUMBER_DEC .)
    LT              reduce using rule 187 (intnumber -> INTNUMBER_DEC .)
    GT              reduce using rule 187 (intnumber -> INTNUMBER_DEC .)
    LE              reduce using rule 187 (intnumber -> INTNUMBER_DEC .)
    GE              reduce using rule 187 (intnumber -> INTNUMBER_DEC .)
    EQ              reduce using rule 187 (intnumber -> INTNUMBER_DEC .)
    NE              reduce using rule 187 (intnumber -> INTNUMBER_DEC .)
    EQL             reduce using rule 187 (intnumber -> INTNUMBER_DEC .)
    NEL             reduce using rule 187 (intnumber -> INTNUMBER_DEC .)
    AND             reduce using rule 187 (intnumber -> INTNUMBER_DEC .)
    XOR             reduce using rule 187 (intnumber -> INTNUMBER_DEC .)
    XNOR            reduce using rule 187 (intnumber -> INTNUMBER_DEC .)
    OR              reduce using rule 187 (intnumber -> INTNUMBER_DEC .)
    LAND            reduce using rule 187 (intnumber -> INTNUMBER_DEC .)
    LOR             reduce using rule 187 (intnumber -> INTNUMBER_DEC .)
    COND            reduce using rule 187 (intnumber -> INTNUMBER_DEC .)
    RPAREN          reduce using rule 187 (intnumber -> INTNUMBER_DEC .)
    LBRACE          reduce using rule 187 (intnumber -> INTNUMBER_DEC .)
    RBRACE          reduce using rule 187 (intnumber -> INTNUMBER_DEC .)
    COMMA           reduce using rule 187 (intnumber -> INTNUMBER_DEC .)
    COLON           reduce using rule 187 (intnumber -> INTNUMBER_DEC .)
    PLUSCOLON       reduce using rule 187 (intnumber -> INTNUMBER_DEC .)
    MINUSCOLON      reduce using rule 187 (intnumber -> INTNUMBER_DEC .)
    RBRACKET        reduce using rule 187 (intnumber -> INTNUMBER_DEC .)
    SEMICOLON       reduce using rule 187 (intnumber -> INTNUMBER_DEC .)
    ID              reduce using rule 187 (intnumber -> INTNUMBER_DEC .)
    LNOT            reduce using rule 187 (intnumber -> INTNUMBER_DEC .)
    NOT             reduce using rule 187 (intnumber -> INTNUMBER_DEC .)
    NAND            reduce using rule 187 (intnumber -> INTNUMBER_DEC .)
    NOR             reduce using rule 187 (intnumber -> INTNUMBER_DEC .)
    LPAREN          reduce using rule 187 (intnumber -> INTNUMBER_DEC .)
    DOLLER          reduce using rule 187 (intnumber -> INTNUMBER_DEC .)
    INTNUMBER_DEC   reduce using rule 187 (intnumber -> INTNUMBER_DEC .)
    SIGNED_INTNUMBER_DEC reduce using rule 187 (intnumber -> INTNUMBER_DEC .)
    INTNUMBER_BIN   reduce using rule 187 (intnumber -> INTNUMBER_DEC .)
    SIGNED_INTNUMBER_BIN reduce using rule 187 (intnumber -> INTNUMBER_DEC .)
    INTNUMBER_OCT   reduce using rule 187 (intnumber -> INTNUMBER_DEC .)
    SIGNED_INTNUMBER_OCT reduce using rule 187 (intnumber -> INTNUMBER_DEC .)
    INTNUMBER_HEX   reduce using rule 187 (intnumber -> INTNUMBER_DEC .)
    SIGNED_INTNUMBER_HEX reduce using rule 187 (intnumber -> INTNUMBER_DEC .)
    FLOATNUMBER     reduce using rule 187 (intnumber -> INTNUMBER_DEC .)
    STRING_LITERAL  reduce using rule 187 (intnumber -> INTNUMBER_DEC .)
    IF              reduce using rule 187 (intnumber -> INTNUMBER_DEC .)


state 36

    (128) expression -> PLUS . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 122
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 37

    (183) const_expression -> intnumber .

    RBRACKET        reduce using rule 183 (const_expression -> intnumber .)
    POWER           reduce using rule 183 (const_expression -> intnumber .)
    TIMES           reduce using rule 183 (const_expression -> intnumber .)
    DIVIDE          reduce using rule 183 (const_expression -> intnumber .)
    MOD             reduce using rule 183 (const_expression -> intnumber .)
    PLUS            reduce using rule 183 (const_expression -> intnumber .)
    MINUS           reduce using rule 183 (const_expression -> intnumber .)
    LSHIFT          reduce using rule 183 (const_expression -> intnumber .)
    RSHIFT          reduce using rule 183 (const_expression -> intnumber .)
    LSHIFTA         reduce using rule 183 (const_expression -> intnumber .)
    RSHIFTA         reduce using rule 183 (const_expression -> intnumber .)
    LT              reduce using rule 183 (const_expression -> intnumber .)
    GT              reduce using rule 183 (const_expression -> intnumber .)
    LE              reduce using rule 183 (const_expression -> intnumber .)
    GE              reduce using rule 183 (const_expression -> intnumber .)
    EQ              reduce using rule 183 (const_expression -> intnumber .)
    NE              reduce using rule 183 (const_expression -> intnumber .)
    EQL             reduce using rule 183 (const_expression -> intnumber .)
    NEL             reduce using rule 183 (const_expression -> intnumber .)
    AND             reduce using rule 183 (const_expression -> intnumber .)
    XOR             reduce using rule 183 (const_expression -> intnumber .)
    XNOR            reduce using rule 183 (const_expression -> intnumber .)
    OR              reduce using rule 183 (const_expression -> intnumber .)
    LAND            reduce using rule 183 (const_expression -> intnumber .)
    LOR             reduce using rule 183 (const_expression -> intnumber .)
    COND            reduce using rule 183 (const_expression -> intnumber .)
    COLON           reduce using rule 183 (const_expression -> intnumber .)
    COMMA           reduce using rule 183 (const_expression -> intnumber .)
    SEMICOLON       reduce using rule 183 (const_expression -> intnumber .)
    RPAREN          reduce using rule 183 (const_expression -> intnumber .)
    LBRACE          reduce using rule 183 (const_expression -> intnumber .)
    RBRACE          reduce using rule 183 (const_expression -> intnumber .)
    PLUSCOLON       reduce using rule 183 (const_expression -> intnumber .)
    MINUSCOLON      reduce using rule 183 (const_expression -> intnumber .)


state 38

    (136) expression -> XNOR . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 123
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 39

    (135) expression -> XOR . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 124
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 40

    (190) intnumber -> SIGNED_INTNUMBER_BIN .

    POWER           reduce using rule 190 (intnumber -> SIGNED_INTNUMBER_BIN .)
    TIMES           reduce using rule 190 (intnumber -> SIGNED_INTNUMBER_BIN .)
    DIVIDE          reduce using rule 190 (intnumber -> SIGNED_INTNUMBER_BIN .)
    MOD             reduce using rule 190 (intnumber -> SIGNED_INTNUMBER_BIN .)
    PLUS            reduce using rule 190 (intnumber -> SIGNED_INTNUMBER_BIN .)
    MINUS           reduce using rule 190 (intnumber -> SIGNED_INTNUMBER_BIN .)
    LSHIFT          reduce using rule 190 (intnumber -> SIGNED_INTNUMBER_BIN .)
    RSHIFT          reduce using rule 190 (intnumber -> SIGNED_INTNUMBER_BIN .)
    LSHIFTA         reduce using rule 190 (intnumber -> SIGNED_INTNUMBER_BIN .)
    RSHIFTA         reduce using rule 190 (intnumber -> SIGNED_INTNUMBER_BIN .)
    LT              reduce using rule 190 (intnumber -> SIGNED_INTNUMBER_BIN .)
    GT              reduce using rule 190 (intnumber -> SIGNED_INTNUMBER_BIN .)
    LE              reduce using rule 190 (intnumber -> SIGNED_INTNUMBER_BIN .)
    GE              reduce using rule 190 (intnumber -> SIGNED_INTNUMBER_BIN .)
    EQ              reduce using rule 190 (intnumber -> SIGNED_INTNUMBER_BIN .)
    NE              reduce using rule 190 (intnumber -> SIGNED_INTNUMBER_BIN .)
    EQL             reduce using rule 190 (intnumber -> SIGNED_INTNUMBER_BIN .)
    NEL             reduce using rule 190 (intnumber -> SIGNED_INTNUMBER_BIN .)
    AND             reduce using rule 190 (intnumber -> SIGNED_INTNUMBER_BIN .)
    XOR             reduce using rule 190 (intnumber -> SIGNED_INTNUMBER_BIN .)
    XNOR            reduce using rule 190 (intnumber -> SIGNED_INTNUMBER_BIN .)
    OR              reduce using rule 190 (intnumber -> SIGNED_INTNUMBER_BIN .)
    LAND            reduce using rule 190 (intnumber -> SIGNED_INTNUMBER_BIN .)
    LOR             reduce using rule 190 (intnumber -> SIGNED_INTNUMBER_BIN .)
    COND            reduce using rule 190 (intnumber -> SIGNED_INTNUMBER_BIN .)
    RPAREN          reduce using rule 190 (intnumber -> SIGNED_INTNUMBER_BIN .)
    LBRACE          reduce using rule 190 (intnumber -> SIGNED_INTNUMBER_BIN .)
    RBRACE          reduce using rule 190 (intnumber -> SIGNED_INTNUMBER_BIN .)
    COMMA           reduce using rule 190 (intnumber -> SIGNED_INTNUMBER_BIN .)
    COLON           reduce using rule 190 (intnumber -> SIGNED_INTNUMBER_BIN .)
    PLUSCOLON       reduce using rule 190 (intnumber -> SIGNED_INTNUMBER_BIN .)
    MINUSCOLON      reduce using rule 190 (intnumber -> SIGNED_INTNUMBER_BIN .)
    RBRACKET        reduce using rule 190 (intnumber -> SIGNED_INTNUMBER_BIN .)
    SEMICOLON       reduce using rule 190 (intnumber -> SIGNED_INTNUMBER_BIN .)
    ID              reduce using rule 190 (intnumber -> SIGNED_INTNUMBER_BIN .)
    LNOT            reduce using rule 190 (intnumber -> SIGNED_INTNUMBER_BIN .)
    NOT             reduce using rule 190 (intnumber -> SIGNED_INTNUMBER_BIN .)
    NAND            reduce using rule 190 (intnumber -> SIGNED_INTNUMBER_BIN .)
    NOR             reduce using rule 190 (intnumber -> SIGNED_INTNUMBER_BIN .)
    LPAREN          reduce using rule 190 (intnumber -> SIGNED_INTNUMBER_BIN .)
    DOLLER          reduce using rule 190 (intnumber -> SIGNED_INTNUMBER_BIN .)
    INTNUMBER_DEC   reduce using rule 190 (intnumber -> SIGNED_INTNUMBER_BIN .)
    SIGNED_INTNUMBER_DEC reduce using rule 190 (intnumber -> SIGNED_INTNUMBER_BIN .)
    INTNUMBER_BIN   reduce using rule 190 (intnumber -> SIGNED_INTNUMBER_BIN .)
    SIGNED_INTNUMBER_BIN reduce using rule 190 (intnumber -> SIGNED_INTNUMBER_BIN .)
    INTNUMBER_OCT   reduce using rule 190 (intnumber -> SIGNED_INTNUMBER_BIN .)
    SIGNED_INTNUMBER_OCT reduce using rule 190 (intnumber -> SIGNED_INTNUMBER_BIN .)
    INTNUMBER_HEX   reduce using rule 190 (intnumber -> SIGNED_INTNUMBER_BIN .)
    SIGNED_INTNUMBER_HEX reduce using rule 190 (intnumber -> SIGNED_INTNUMBER_BIN .)
    FLOATNUMBER     reduce using rule 190 (intnumber -> SIGNED_INTNUMBER_BIN .)
    STRING_LITERAL  reduce using rule 190 (intnumber -> SIGNED_INTNUMBER_BIN .)
    IF              reduce using rule 190 (intnumber -> SIGNED_INTNUMBER_BIN .)


state 41

    (192) intnumber -> SIGNED_INTNUMBER_OCT .

    POWER           reduce using rule 192 (intnumber -> SIGNED_INTNUMBER_OCT .)
    TIMES           reduce using rule 192 (intnumber -> SIGNED_INTNUMBER_OCT .)
    DIVIDE          reduce using rule 192 (intnumber -> SIGNED_INTNUMBER_OCT .)
    MOD             reduce using rule 192 (intnumber -> SIGNED_INTNUMBER_OCT .)
    PLUS            reduce using rule 192 (intnumber -> SIGNED_INTNUMBER_OCT .)
    MINUS           reduce using rule 192 (intnumber -> SIGNED_INTNUMBER_OCT .)
    LSHIFT          reduce using rule 192 (intnumber -> SIGNED_INTNUMBER_OCT .)
    RSHIFT          reduce using rule 192 (intnumber -> SIGNED_INTNUMBER_OCT .)
    LSHIFTA         reduce using rule 192 (intnumber -> SIGNED_INTNUMBER_OCT .)
    RSHIFTA         reduce using rule 192 (intnumber -> SIGNED_INTNUMBER_OCT .)
    LT              reduce using rule 192 (intnumber -> SIGNED_INTNUMBER_OCT .)
    GT              reduce using rule 192 (intnumber -> SIGNED_INTNUMBER_OCT .)
    LE              reduce using rule 192 (intnumber -> SIGNED_INTNUMBER_OCT .)
    GE              reduce using rule 192 (intnumber -> SIGNED_INTNUMBER_OCT .)
    EQ              reduce using rule 192 (intnumber -> SIGNED_INTNUMBER_OCT .)
    NE              reduce using rule 192 (intnumber -> SIGNED_INTNUMBER_OCT .)
    EQL             reduce using rule 192 (intnumber -> SIGNED_INTNUMBER_OCT .)
    NEL             reduce using rule 192 (intnumber -> SIGNED_INTNUMBER_OCT .)
    AND             reduce using rule 192 (intnumber -> SIGNED_INTNUMBER_OCT .)
    XOR             reduce using rule 192 (intnumber -> SIGNED_INTNUMBER_OCT .)
    XNOR            reduce using rule 192 (intnumber -> SIGNED_INTNUMBER_OCT .)
    OR              reduce using rule 192 (intnumber -> SIGNED_INTNUMBER_OCT .)
    LAND            reduce using rule 192 (intnumber -> SIGNED_INTNUMBER_OCT .)
    LOR             reduce using rule 192 (intnumber -> SIGNED_INTNUMBER_OCT .)
    COND            reduce using rule 192 (intnumber -> SIGNED_INTNUMBER_OCT .)
    RPAREN          reduce using rule 192 (intnumber -> SIGNED_INTNUMBER_OCT .)
    LBRACE          reduce using rule 192 (intnumber -> SIGNED_INTNUMBER_OCT .)
    RBRACE          reduce using rule 192 (intnumber -> SIGNED_INTNUMBER_OCT .)
    COMMA           reduce using rule 192 (intnumber -> SIGNED_INTNUMBER_OCT .)
    COLON           reduce using rule 192 (intnumber -> SIGNED_INTNUMBER_OCT .)
    PLUSCOLON       reduce using rule 192 (intnumber -> SIGNED_INTNUMBER_OCT .)
    MINUSCOLON      reduce using rule 192 (intnumber -> SIGNED_INTNUMBER_OCT .)
    RBRACKET        reduce using rule 192 (intnumber -> SIGNED_INTNUMBER_OCT .)
    SEMICOLON       reduce using rule 192 (intnumber -> SIGNED_INTNUMBER_OCT .)
    ID              reduce using rule 192 (intnumber -> SIGNED_INTNUMBER_OCT .)
    LNOT            reduce using rule 192 (intnumber -> SIGNED_INTNUMBER_OCT .)
    NOT             reduce using rule 192 (intnumber -> SIGNED_INTNUMBER_OCT .)
    NAND            reduce using rule 192 (intnumber -> SIGNED_INTNUMBER_OCT .)
    NOR             reduce using rule 192 (intnumber -> SIGNED_INTNUMBER_OCT .)
    LPAREN          reduce using rule 192 (intnumber -> SIGNED_INTNUMBER_OCT .)
    DOLLER          reduce using rule 192 (intnumber -> SIGNED_INTNUMBER_OCT .)
    INTNUMBER_DEC   reduce using rule 192 (intnumber -> SIGNED_INTNUMBER_OCT .)
    SIGNED_INTNUMBER_DEC reduce using rule 192 (intnumber -> SIGNED_INTNUMBER_OCT .)
    INTNUMBER_BIN   reduce using rule 192 (intnumber -> SIGNED_INTNUMBER_OCT .)
    SIGNED_INTNUMBER_BIN reduce using rule 192 (intnumber -> SIGNED_INTNUMBER_OCT .)
    INTNUMBER_OCT   reduce using rule 192 (intnumber -> SIGNED_INTNUMBER_OCT .)
    SIGNED_INTNUMBER_OCT reduce using rule 192 (intnumber -> SIGNED_INTNUMBER_OCT .)
    INTNUMBER_HEX   reduce using rule 192 (intnumber -> SIGNED_INTNUMBER_OCT .)
    SIGNED_INTNUMBER_HEX reduce using rule 192 (intnumber -> SIGNED_INTNUMBER_OCT .)
    FLOATNUMBER     reduce using rule 192 (intnumber -> SIGNED_INTNUMBER_OCT .)
    STRING_LITERAL  reduce using rule 192 (intnumber -> SIGNED_INTNUMBER_OCT .)
    IF              reduce using rule 192 (intnumber -> SIGNED_INTNUMBER_OCT .)


state 42

    (188) intnumber -> SIGNED_INTNUMBER_DEC .

    POWER           reduce using rule 188 (intnumber -> SIGNED_INTNUMBER_DEC .)
    TIMES           reduce using rule 188 (intnumber -> SIGNED_INTNUMBER_DEC .)
    DIVIDE          reduce using rule 188 (intnumber -> SIGNED_INTNUMBER_DEC .)
    MOD             reduce using rule 188 (intnumber -> SIGNED_INTNUMBER_DEC .)
    PLUS            reduce using rule 188 (intnumber -> SIGNED_INTNUMBER_DEC .)
    MINUS           reduce using rule 188 (intnumber -> SIGNED_INTNUMBER_DEC .)
    LSHIFT          reduce using rule 188 (intnumber -> SIGNED_INTNUMBER_DEC .)
    RSHIFT          reduce using rule 188 (intnumber -> SIGNED_INTNUMBER_DEC .)
    LSHIFTA         reduce using rule 188 (intnumber -> SIGNED_INTNUMBER_DEC .)
    RSHIFTA         reduce using rule 188 (intnumber -> SIGNED_INTNUMBER_DEC .)
    LT              reduce using rule 188 (intnumber -> SIGNED_INTNUMBER_DEC .)
    GT              reduce using rule 188 (intnumber -> SIGNED_INTNUMBER_DEC .)
    LE              reduce using rule 188 (intnumber -> SIGNED_INTNUMBER_DEC .)
    GE              reduce using rule 188 (intnumber -> SIGNED_INTNUMBER_DEC .)
    EQ              reduce using rule 188 (intnumber -> SIGNED_INTNUMBER_DEC .)
    NE              reduce using rule 188 (intnumber -> SIGNED_INTNUMBER_DEC .)
    EQL             reduce using rule 188 (intnumber -> SIGNED_INTNUMBER_DEC .)
    NEL             reduce using rule 188 (intnumber -> SIGNED_INTNUMBER_DEC .)
    AND             reduce using rule 188 (intnumber -> SIGNED_INTNUMBER_DEC .)
    XOR             reduce using rule 188 (intnumber -> SIGNED_INTNUMBER_DEC .)
    XNOR            reduce using rule 188 (intnumber -> SIGNED_INTNUMBER_DEC .)
    OR              reduce using rule 188 (intnumber -> SIGNED_INTNUMBER_DEC .)
    LAND            reduce using rule 188 (intnumber -> SIGNED_INTNUMBER_DEC .)
    LOR             reduce using rule 188 (intnumber -> SIGNED_INTNUMBER_DEC .)
    COND            reduce using rule 188 (intnumber -> SIGNED_INTNUMBER_DEC .)
    RPAREN          reduce using rule 188 (intnumber -> SIGNED_INTNUMBER_DEC .)
    LBRACE          reduce using rule 188 (intnumber -> SIGNED_INTNUMBER_DEC .)
    RBRACE          reduce using rule 188 (intnumber -> SIGNED_INTNUMBER_DEC .)
    COMMA           reduce using rule 188 (intnumber -> SIGNED_INTNUMBER_DEC .)
    COLON           reduce using rule 188 (intnumber -> SIGNED_INTNUMBER_DEC .)
    PLUSCOLON       reduce using rule 188 (intnumber -> SIGNED_INTNUMBER_DEC .)
    MINUSCOLON      reduce using rule 188 (intnumber -> SIGNED_INTNUMBER_DEC .)
    RBRACKET        reduce using rule 188 (intnumber -> SIGNED_INTNUMBER_DEC .)
    SEMICOLON       reduce using rule 188 (intnumber -> SIGNED_INTNUMBER_DEC .)
    ID              reduce using rule 188 (intnumber -> SIGNED_INTNUMBER_DEC .)
    LNOT            reduce using rule 188 (intnumber -> SIGNED_INTNUMBER_DEC .)
    NOT             reduce using rule 188 (intnumber -> SIGNED_INTNUMBER_DEC .)
    NAND            reduce using rule 188 (intnumber -> SIGNED_INTNUMBER_DEC .)
    NOR             reduce using rule 188 (intnumber -> SIGNED_INTNUMBER_DEC .)
    LPAREN          reduce using rule 188 (intnumber -> SIGNED_INTNUMBER_DEC .)
    DOLLER          reduce using rule 188 (intnumber -> SIGNED_INTNUMBER_DEC .)
    INTNUMBER_DEC   reduce using rule 188 (intnumber -> SIGNED_INTNUMBER_DEC .)
    SIGNED_INTNUMBER_DEC reduce using rule 188 (intnumber -> SIGNED_INTNUMBER_DEC .)
    INTNUMBER_BIN   reduce using rule 188 (intnumber -> SIGNED_INTNUMBER_DEC .)
    SIGNED_INTNUMBER_BIN reduce using rule 188 (intnumber -> SIGNED_INTNUMBER_DEC .)
    INTNUMBER_OCT   reduce using rule 188 (intnumber -> SIGNED_INTNUMBER_DEC .)
    SIGNED_INTNUMBER_OCT reduce using rule 188 (intnumber -> SIGNED_INTNUMBER_DEC .)
    INTNUMBER_HEX   reduce using rule 188 (intnumber -> SIGNED_INTNUMBER_DEC .)
    SIGNED_INTNUMBER_HEX reduce using rule 188 (intnumber -> SIGNED_INTNUMBER_DEC .)
    FLOATNUMBER     reduce using rule 188 (intnumber -> SIGNED_INTNUMBER_DEC .)
    STRING_LITERAL  reduce using rule 188 (intnumber -> SIGNED_INTNUMBER_DEC .)
    IF              reduce using rule 188 (intnumber -> SIGNED_INTNUMBER_DEC .)


state 43

    (162) expression -> LPAREN . expression RPAREN
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 125
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 44

    (386) identifier -> scope . ID

    ID              shift and go to state 126


state 45

    (189) intnumber -> INTNUMBER_BIN .

    POWER           reduce using rule 189 (intnumber -> INTNUMBER_BIN .)
    TIMES           reduce using rule 189 (intnumber -> INTNUMBER_BIN .)
    DIVIDE          reduce using rule 189 (intnumber -> INTNUMBER_BIN .)
    MOD             reduce using rule 189 (intnumber -> INTNUMBER_BIN .)
    PLUS            reduce using rule 189 (intnumber -> INTNUMBER_BIN .)
    MINUS           reduce using rule 189 (intnumber -> INTNUMBER_BIN .)
    LSHIFT          reduce using rule 189 (intnumber -> INTNUMBER_BIN .)
    RSHIFT          reduce using rule 189 (intnumber -> INTNUMBER_BIN .)
    LSHIFTA         reduce using rule 189 (intnumber -> INTNUMBER_BIN .)
    RSHIFTA         reduce using rule 189 (intnumber -> INTNUMBER_BIN .)
    LT              reduce using rule 189 (intnumber -> INTNUMBER_BIN .)
    GT              reduce using rule 189 (intnumber -> INTNUMBER_BIN .)
    LE              reduce using rule 189 (intnumber -> INTNUMBER_BIN .)
    GE              reduce using rule 189 (intnumber -> INTNUMBER_BIN .)
    EQ              reduce using rule 189 (intnumber -> INTNUMBER_BIN .)
    NE              reduce using rule 189 (intnumber -> INTNUMBER_BIN .)
    EQL             reduce using rule 189 (intnumber -> INTNUMBER_BIN .)
    NEL             reduce using rule 189 (intnumber -> INTNUMBER_BIN .)
    AND             reduce using rule 189 (intnumber -> INTNUMBER_BIN .)
    XOR             reduce using rule 189 (intnumber -> INTNUMBER_BIN .)
    XNOR            reduce using rule 189 (intnumber -> INTNUMBER_BIN .)
    OR              reduce using rule 189 (intnumber -> INTNUMBER_BIN .)
    LAND            reduce using rule 189 (intnumber -> INTNUMBER_BIN .)
    LOR             reduce using rule 189 (intnumber -> INTNUMBER_BIN .)
    COND            reduce using rule 189 (intnumber -> INTNUMBER_BIN .)
    RPAREN          reduce using rule 189 (intnumber -> INTNUMBER_BIN .)
    LBRACE          reduce using rule 189 (intnumber -> INTNUMBER_BIN .)
    RBRACE          reduce using rule 189 (intnumber -> INTNUMBER_BIN .)
    COMMA           reduce using rule 189 (intnumber -> INTNUMBER_BIN .)
    COLON           reduce using rule 189 (intnumber -> INTNUMBER_BIN .)
    PLUSCOLON       reduce using rule 189 (intnumber -> INTNUMBER_BIN .)
    MINUSCOLON      reduce using rule 189 (intnumber -> INTNUMBER_BIN .)
    RBRACKET        reduce using rule 189 (intnumber -> INTNUMBER_BIN .)
    SEMICOLON       reduce using rule 189 (intnumber -> INTNUMBER_BIN .)
    ID              reduce using rule 189 (intnumber -> INTNUMBER_BIN .)
    LNOT            reduce using rule 189 (intnumber -> INTNUMBER_BIN .)
    NOT             reduce using rule 189 (intnumber -> INTNUMBER_BIN .)
    NAND            reduce using rule 189 (intnumber -> INTNUMBER_BIN .)
    NOR             reduce using rule 189 (intnumber -> INTNUMBER_BIN .)
    LPAREN          reduce using rule 189 (intnumber -> INTNUMBER_BIN .)
    DOLLER          reduce using rule 189 (intnumber -> INTNUMBER_BIN .)
    INTNUMBER_DEC   reduce using rule 189 (intnumber -> INTNUMBER_BIN .)
    SIGNED_INTNUMBER_DEC reduce using rule 189 (intnumber -> INTNUMBER_BIN .)
    INTNUMBER_BIN   reduce using rule 189 (intnumber -> INTNUMBER_BIN .)
    SIGNED_INTNUMBER_BIN reduce using rule 189 (intnumber -> INTNUMBER_BIN .)
    INTNUMBER_OCT   reduce using rule 189 (intnumber -> INTNUMBER_BIN .)
    SIGNED_INTNUMBER_OCT reduce using rule 189 (intnumber -> INTNUMBER_BIN .)
    INTNUMBER_HEX   reduce using rule 189 (intnumber -> INTNUMBER_BIN .)
    SIGNED_INTNUMBER_HEX reduce using rule 189 (intnumber -> INTNUMBER_BIN .)
    FLOATNUMBER     reduce using rule 189 (intnumber -> INTNUMBER_BIN .)
    STRING_LITERAL  reduce using rule 189 (intnumber -> INTNUMBER_BIN .)
    IF              reduce using rule 189 (intnumber -> INTNUMBER_BIN .)


state 46

    (385) identifier -> ID .

    LBRACKET        reduce using rule 385 (identifier -> ID .)
    LPAREN          reduce using rule 385 (identifier -> ID .)
    DOT             reduce using rule 385 (identifier -> ID .)
    COLON           reduce using rule 385 (identifier -> ID .)
    POWER           reduce using rule 385 (identifier -> ID .)
    TIMES           reduce using rule 385 (identifier -> ID .)
    DIVIDE          reduce using rule 385 (identifier -> ID .)
    MOD             reduce using rule 385 (identifier -> ID .)
    PLUS            reduce using rule 385 (identifier -> ID .)
    MINUS           reduce using rule 385 (identifier -> ID .)
    LSHIFT          reduce using rule 385 (identifier -> ID .)
    RSHIFT          reduce using rule 385 (identifier -> ID .)
    LSHIFTA         reduce using rule 385 (identifier -> ID .)
    RSHIFTA         reduce using rule 385 (identifier -> ID .)
    LT              reduce using rule 385 (identifier -> ID .)
    GT              reduce using rule 385 (identifier -> ID .)
    LE              reduce using rule 385 (identifier -> ID .)
    GE              reduce using rule 385 (identifier -> ID .)
    EQ              reduce using rule 385 (identifier -> ID .)
    NE              reduce using rule 385 (identifier -> ID .)
    EQL             reduce using rule 385 (identifier -> ID .)
    NEL             reduce using rule 385 (identifier -> ID .)
    AND             reduce using rule 385 (identifier -> ID .)
    XOR             reduce using rule 385 (identifier -> ID .)
    XNOR            reduce using rule 385 (identifier -> ID .)
    OR              reduce using rule 385 (identifier -> ID .)
    LAND            reduce using rule 385 (identifier -> ID .)
    LOR             reduce using rule 385 (identifier -> ID .)
    COND            reduce using rule 385 (identifier -> ID .)
    RPAREN          reduce using rule 385 (identifier -> ID .)
    LBRACE          reduce using rule 385 (identifier -> ID .)
    RBRACE          reduce using rule 385 (identifier -> ID .)
    COMMA           reduce using rule 385 (identifier -> ID .)
    PLUSCOLON       reduce using rule 385 (identifier -> ID .)
    MINUSCOLON      reduce using rule 385 (identifier -> ID .)
    RBRACKET        reduce using rule 385 (identifier -> ID .)
    SEMICOLON       reduce using rule 385 (identifier -> ID .)
    IF              reduce using rule 385 (identifier -> ID .)
    ID              reduce using rule 385 (identifier -> ID .)
    SENS_OR         reduce using rule 385 (identifier -> ID .)
    EQUALS          reduce using rule 385 (identifier -> ID .)
    CASE            reduce using rule 385 (identifier -> ID .)
    CASEX           reduce using rule 385 (identifier -> ID .)
    FOR             reduce using rule 385 (identifier -> ID .)
    WHILE           reduce using rule 385 (identifier -> ID .)
    WAIT            reduce using rule 385 (identifier -> ID .)
    FOREVER         reduce using rule 385 (identifier -> ID .)
    BEGIN           reduce using rule 385 (identifier -> ID .)
    FORK            reduce using rule 385 (identifier -> ID .)
    DELAY           reduce using rule 385 (identifier -> ID .)
    AT              reduce using rule 385 (identifier -> ID .)
    DOLLER          reduce using rule 385 (identifier -> ID .)
    DISABLE         reduce using rule 385 (identifier -> ID .)
    LNOT            reduce using rule 385 (identifier -> ID .)
    NOT             reduce using rule 385 (identifier -> ID .)
    NAND            reduce using rule 385 (identifier -> ID .)
    NOR             reduce using rule 385 (identifier -> ID .)
    INTNUMBER_DEC   reduce using rule 385 (identifier -> ID .)
    SIGNED_INTNUMBER_DEC reduce using rule 385 (identifier -> ID .)
    INTNUMBER_BIN   reduce using rule 385 (identifier -> ID .)
    SIGNED_INTNUMBER_BIN reduce using rule 385 (identifier -> ID .)
    INTNUMBER_OCT   reduce using rule 385 (identifier -> ID .)
    SIGNED_INTNUMBER_OCT reduce using rule 385 (identifier -> ID .)
    INTNUMBER_HEX   reduce using rule 385 (identifier -> ID .)
    SIGNED_INTNUMBER_HEX reduce using rule 385 (identifier -> ID .)
    FLOATNUMBER     reduce using rule 385 (identifier -> ID .)
    STRING_LITERAL  reduce using rule 385 (identifier -> ID .)


state 47

    (163) expression -> concat .

    RBRACKET        reduce using rule 163 (expression -> concat .)
    POWER           reduce using rule 163 (expression -> concat .)
    TIMES           reduce using rule 163 (expression -> concat .)
    DIVIDE          reduce using rule 163 (expression -> concat .)
    MOD             reduce using rule 163 (expression -> concat .)
    PLUS            reduce using rule 163 (expression -> concat .)
    MINUS           reduce using rule 163 (expression -> concat .)
    LSHIFT          reduce using rule 163 (expression -> concat .)
    RSHIFT          reduce using rule 163 (expression -> concat .)
    LSHIFTA         reduce using rule 163 (expression -> concat .)
    RSHIFTA         reduce using rule 163 (expression -> concat .)
    LT              reduce using rule 163 (expression -> concat .)
    GT              reduce using rule 163 (expression -> concat .)
    LE              reduce using rule 163 (expression -> concat .)
    GE              reduce using rule 163 (expression -> concat .)
    EQ              reduce using rule 163 (expression -> concat .)
    NE              reduce using rule 163 (expression -> concat .)
    EQL             reduce using rule 163 (expression -> concat .)
    NEL             reduce using rule 163 (expression -> concat .)
    AND             reduce using rule 163 (expression -> concat .)
    XOR             reduce using rule 163 (expression -> concat .)
    XNOR            reduce using rule 163 (expression -> concat .)
    OR              reduce using rule 163 (expression -> concat .)
    LAND            reduce using rule 163 (expression -> concat .)
    LOR             reduce using rule 163 (expression -> concat .)
    COND            reduce using rule 163 (expression -> concat .)
    RPAREN          reduce using rule 163 (expression -> concat .)
    COLON           reduce using rule 163 (expression -> concat .)
    PLUSCOLON       reduce using rule 163 (expression -> concat .)
    MINUSCOLON      reduce using rule 163 (expression -> concat .)
    SEMICOLON       reduce using rule 163 (expression -> concat .)
    LBRACE          reduce using rule 163 (expression -> concat .)
    RBRACE          reduce using rule 163 (expression -> concat .)
    COMMA           reduce using rule 163 (expression -> concat .)


state 48

    (195) stringliteral -> STRING_LITERAL .

    POWER           reduce using rule 195 (stringliteral -> STRING_LITERAL .)
    TIMES           reduce using rule 195 (stringliteral -> STRING_LITERAL .)
    DIVIDE          reduce using rule 195 (stringliteral -> STRING_LITERAL .)
    MOD             reduce using rule 195 (stringliteral -> STRING_LITERAL .)
    PLUS            reduce using rule 195 (stringliteral -> STRING_LITERAL .)
    MINUS           reduce using rule 195 (stringliteral -> STRING_LITERAL .)
    LSHIFT          reduce using rule 195 (stringliteral -> STRING_LITERAL .)
    RSHIFT          reduce using rule 195 (stringliteral -> STRING_LITERAL .)
    LSHIFTA         reduce using rule 195 (stringliteral -> STRING_LITERAL .)
    RSHIFTA         reduce using rule 195 (stringliteral -> STRING_LITERAL .)
    LT              reduce using rule 195 (stringliteral -> STRING_LITERAL .)
    GT              reduce using rule 195 (stringliteral -> STRING_LITERAL .)
    LE              reduce using rule 195 (stringliteral -> STRING_LITERAL .)
    GE              reduce using rule 195 (stringliteral -> STRING_LITERAL .)
    EQ              reduce using rule 195 (stringliteral -> STRING_LITERAL .)
    NE              reduce using rule 195 (stringliteral -> STRING_LITERAL .)
    EQL             reduce using rule 195 (stringliteral -> STRING_LITERAL .)
    NEL             reduce using rule 195 (stringliteral -> STRING_LITERAL .)
    AND             reduce using rule 195 (stringliteral -> STRING_LITERAL .)
    XOR             reduce using rule 195 (stringliteral -> STRING_LITERAL .)
    XNOR            reduce using rule 195 (stringliteral -> STRING_LITERAL .)
    OR              reduce using rule 195 (stringliteral -> STRING_LITERAL .)
    LAND            reduce using rule 195 (stringliteral -> STRING_LITERAL .)
    LOR             reduce using rule 195 (stringliteral -> STRING_LITERAL .)
    COND            reduce using rule 195 (stringliteral -> STRING_LITERAL .)
    RPAREN          reduce using rule 195 (stringliteral -> STRING_LITERAL .)
    LBRACE          reduce using rule 195 (stringliteral -> STRING_LITERAL .)
    RBRACE          reduce using rule 195 (stringliteral -> STRING_LITERAL .)
    COMMA           reduce using rule 195 (stringliteral -> STRING_LITERAL .)
    COLON           reduce using rule 195 (stringliteral -> STRING_LITERAL .)
    PLUSCOLON       reduce using rule 195 (stringliteral -> STRING_LITERAL .)
    MINUSCOLON      reduce using rule 195 (stringliteral -> STRING_LITERAL .)
    RBRACKET        reduce using rule 195 (stringliteral -> STRING_LITERAL .)
    SEMICOLON       reduce using rule 195 (stringliteral -> STRING_LITERAL .)


state 49

    (131) expression -> AND . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 127
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 50

    (171) concat -> LBRACE . concatlist RBRACE
    (174) repeat -> LBRACE . expression concat RBRACE
    (172) concatlist -> . concatlist COMMA expression
    (173) concatlist -> . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 129
    concatlist                     shift and go to state 128
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 51

    (184) const_expression -> floatnumber .

    RBRACKET        reduce using rule 184 (const_expression -> floatnumber .)
    POWER           reduce using rule 184 (const_expression -> floatnumber .)
    TIMES           reduce using rule 184 (const_expression -> floatnumber .)
    DIVIDE          reduce using rule 184 (const_expression -> floatnumber .)
    MOD             reduce using rule 184 (const_expression -> floatnumber .)
    PLUS            reduce using rule 184 (const_expression -> floatnumber .)
    MINUS           reduce using rule 184 (const_expression -> floatnumber .)
    LSHIFT          reduce using rule 184 (const_expression -> floatnumber .)
    RSHIFT          reduce using rule 184 (const_expression -> floatnumber .)
    LSHIFTA         reduce using rule 184 (const_expression -> floatnumber .)
    RSHIFTA         reduce using rule 184 (const_expression -> floatnumber .)
    LT              reduce using rule 184 (const_expression -> floatnumber .)
    GT              reduce using rule 184 (const_expression -> floatnumber .)
    LE              reduce using rule 184 (const_expression -> floatnumber .)
    GE              reduce using rule 184 (const_expression -> floatnumber .)
    EQ              reduce using rule 184 (const_expression -> floatnumber .)
    NE              reduce using rule 184 (const_expression -> floatnumber .)
    EQL             reduce using rule 184 (const_expression -> floatnumber .)
    NEL             reduce using rule 184 (const_expression -> floatnumber .)
    AND             reduce using rule 184 (const_expression -> floatnumber .)
    XOR             reduce using rule 184 (const_expression -> floatnumber .)
    XNOR            reduce using rule 184 (const_expression -> floatnumber .)
    OR              reduce using rule 184 (const_expression -> floatnumber .)
    LAND            reduce using rule 184 (const_expression -> floatnumber .)
    LOR             reduce using rule 184 (const_expression -> floatnumber .)
    COND            reduce using rule 184 (const_expression -> floatnumber .)
    COLON           reduce using rule 184 (const_expression -> floatnumber .)
    COMMA           reduce using rule 184 (const_expression -> floatnumber .)
    SEMICOLON       reduce using rule 184 (const_expression -> floatnumber .)
    RPAREN          reduce using rule 184 (const_expression -> floatnumber .)
    LBRACE          reduce using rule 184 (const_expression -> floatnumber .)
    RBRACE          reduce using rule 184 (const_expression -> floatnumber .)
    PLUSCOLON       reduce using rule 184 (const_expression -> floatnumber .)
    MINUSCOLON      reduce using rule 184 (const_expression -> floatnumber .)


state 52

    (193) intnumber -> INTNUMBER_HEX .

    POWER           reduce using rule 193 (intnumber -> INTNUMBER_HEX .)
    TIMES           reduce using rule 193 (intnumber -> INTNUMBER_HEX .)
    DIVIDE          reduce using rule 193 (intnumber -> INTNUMBER_HEX .)
    MOD             reduce using rule 193 (intnumber -> INTNUMBER_HEX .)
    PLUS            reduce using rule 193 (intnumber -> INTNUMBER_HEX .)
    MINUS           reduce using rule 193 (intnumber -> INTNUMBER_HEX .)
    LSHIFT          reduce using rule 193 (intnumber -> INTNUMBER_HEX .)
    RSHIFT          reduce using rule 193 (intnumber -> INTNUMBER_HEX .)
    LSHIFTA         reduce using rule 193 (intnumber -> INTNUMBER_HEX .)
    RSHIFTA         reduce using rule 193 (intnumber -> INTNUMBER_HEX .)
    LT              reduce using rule 193 (intnumber -> INTNUMBER_HEX .)
    GT              reduce using rule 193 (intnumber -> INTNUMBER_HEX .)
    LE              reduce using rule 193 (intnumber -> INTNUMBER_HEX .)
    GE              reduce using rule 193 (intnumber -> INTNUMBER_HEX .)
    EQ              reduce using rule 193 (intnumber -> INTNUMBER_HEX .)
    NE              reduce using rule 193 (intnumber -> INTNUMBER_HEX .)
    EQL             reduce using rule 193 (intnumber -> INTNUMBER_HEX .)
    NEL             reduce using rule 193 (intnumber -> INTNUMBER_HEX .)
    AND             reduce using rule 193 (intnumber -> INTNUMBER_HEX .)
    XOR             reduce using rule 193 (intnumber -> INTNUMBER_HEX .)
    XNOR            reduce using rule 193 (intnumber -> INTNUMBER_HEX .)
    OR              reduce using rule 193 (intnumber -> INTNUMBER_HEX .)
    LAND            reduce using rule 193 (intnumber -> INTNUMBER_HEX .)
    LOR             reduce using rule 193 (intnumber -> INTNUMBER_HEX .)
    COND            reduce using rule 193 (intnumber -> INTNUMBER_HEX .)
    RPAREN          reduce using rule 193 (intnumber -> INTNUMBER_HEX .)
    LBRACE          reduce using rule 193 (intnumber -> INTNUMBER_HEX .)
    RBRACE          reduce using rule 193 (intnumber -> INTNUMBER_HEX .)
    COMMA           reduce using rule 193 (intnumber -> INTNUMBER_HEX .)
    COLON           reduce using rule 193 (intnumber -> INTNUMBER_HEX .)
    PLUSCOLON       reduce using rule 193 (intnumber -> INTNUMBER_HEX .)
    MINUSCOLON      reduce using rule 193 (intnumber -> INTNUMBER_HEX .)
    RBRACKET        reduce using rule 193 (intnumber -> INTNUMBER_HEX .)
    SEMICOLON       reduce using rule 193 (intnumber -> INTNUMBER_HEX .)
    ID              reduce using rule 193 (intnumber -> INTNUMBER_HEX .)
    LNOT            reduce using rule 193 (intnumber -> INTNUMBER_HEX .)
    NOT             reduce using rule 193 (intnumber -> INTNUMBER_HEX .)
    NAND            reduce using rule 193 (intnumber -> INTNUMBER_HEX .)
    NOR             reduce using rule 193 (intnumber -> INTNUMBER_HEX .)
    LPAREN          reduce using rule 193 (intnumber -> INTNUMBER_HEX .)
    DOLLER          reduce using rule 193 (intnumber -> INTNUMBER_HEX .)
    INTNUMBER_DEC   reduce using rule 193 (intnumber -> INTNUMBER_HEX .)
    SIGNED_INTNUMBER_DEC reduce using rule 193 (intnumber -> INTNUMBER_HEX .)
    INTNUMBER_BIN   reduce using rule 193 (intnumber -> INTNUMBER_HEX .)
    SIGNED_INTNUMBER_BIN reduce using rule 193 (intnumber -> INTNUMBER_HEX .)
    INTNUMBER_OCT   reduce using rule 193 (intnumber -> INTNUMBER_HEX .)
    SIGNED_INTNUMBER_OCT reduce using rule 193 (intnumber -> INTNUMBER_HEX .)
    INTNUMBER_HEX   reduce using rule 193 (intnumber -> INTNUMBER_HEX .)
    SIGNED_INTNUMBER_HEX reduce using rule 193 (intnumber -> INTNUMBER_HEX .)
    FLOATNUMBER     reduce using rule 193 (intnumber -> INTNUMBER_HEX .)
    STRING_LITERAL  reduce using rule 193 (intnumber -> INTNUMBER_HEX .)
    IF              reduce using rule 193 (intnumber -> INTNUMBER_HEX .)


state 53

    (185) const_expression -> stringliteral .

    RBRACKET        reduce using rule 185 (const_expression -> stringliteral .)
    POWER           reduce using rule 185 (const_expression -> stringliteral .)
    TIMES           reduce using rule 185 (const_expression -> stringliteral .)
    DIVIDE          reduce using rule 185 (const_expression -> stringliteral .)
    MOD             reduce using rule 185 (const_expression -> stringliteral .)
    PLUS            reduce using rule 185 (const_expression -> stringliteral .)
    MINUS           reduce using rule 185 (const_expression -> stringliteral .)
    LSHIFT          reduce using rule 185 (const_expression -> stringliteral .)
    RSHIFT          reduce using rule 185 (const_expression -> stringliteral .)
    LSHIFTA         reduce using rule 185 (const_expression -> stringliteral .)
    RSHIFTA         reduce using rule 185 (const_expression -> stringliteral .)
    LT              reduce using rule 185 (const_expression -> stringliteral .)
    GT              reduce using rule 185 (const_expression -> stringliteral .)
    LE              reduce using rule 185 (const_expression -> stringliteral .)
    GE              reduce using rule 185 (const_expression -> stringliteral .)
    EQ              reduce using rule 185 (const_expression -> stringliteral .)
    NE              reduce using rule 185 (const_expression -> stringliteral .)
    EQL             reduce using rule 185 (const_expression -> stringliteral .)
    NEL             reduce using rule 185 (const_expression -> stringliteral .)
    AND             reduce using rule 185 (const_expression -> stringliteral .)
    XOR             reduce using rule 185 (const_expression -> stringliteral .)
    XNOR            reduce using rule 185 (const_expression -> stringliteral .)
    OR              reduce using rule 185 (const_expression -> stringliteral .)
    LAND            reduce using rule 185 (const_expression -> stringliteral .)
    LOR             reduce using rule 185 (const_expression -> stringliteral .)
    COND            reduce using rule 185 (const_expression -> stringliteral .)
    COLON           reduce using rule 185 (const_expression -> stringliteral .)
    COMMA           reduce using rule 185 (const_expression -> stringliteral .)
    SEMICOLON       reduce using rule 185 (const_expression -> stringliteral .)
    RPAREN          reduce using rule 185 (const_expression -> stringliteral .)
    LBRACE          reduce using rule 185 (const_expression -> stringliteral .)
    RBRACE          reduce using rule 185 (const_expression -> stringliteral .)
    PLUSCOLON       reduce using rule 185 (const_expression -> stringliteral .)
    MINUSCOLON      reduce using rule 185 (const_expression -> stringliteral .)


state 54

    (344) systemcall -> DOLLER . ID
    (345) systemcall -> DOLLER . ID LPAREN sysargs RPAREN
    (346) systemcall -> DOLLER . SIGNED LPAREN sysargs RPAREN

    ID              shift and go to state 131
    SIGNED          shift and go to state 130


state 55

    (167) expression -> functioncall .

    RBRACKET        reduce using rule 167 (expression -> functioncall .)
    POWER           reduce using rule 167 (expression -> functioncall .)
    TIMES           reduce using rule 167 (expression -> functioncall .)
    DIVIDE          reduce using rule 167 (expression -> functioncall .)
    MOD             reduce using rule 167 (expression -> functioncall .)
    PLUS            reduce using rule 167 (expression -> functioncall .)
    MINUS           reduce using rule 167 (expression -> functioncall .)
    LSHIFT          reduce using rule 167 (expression -> functioncall .)
    RSHIFT          reduce using rule 167 (expression -> functioncall .)
    LSHIFTA         reduce using rule 167 (expression -> functioncall .)
    RSHIFTA         reduce using rule 167 (expression -> functioncall .)
    LT              reduce using rule 167 (expression -> functioncall .)
    GT              reduce using rule 167 (expression -> functioncall .)
    LE              reduce using rule 167 (expression -> functioncall .)
    GE              reduce using rule 167 (expression -> functioncall .)
    EQ              reduce using rule 167 (expression -> functioncall .)
    NE              reduce using rule 167 (expression -> functioncall .)
    EQL             reduce using rule 167 (expression -> functioncall .)
    NEL             reduce using rule 167 (expression -> functioncall .)
    AND             reduce using rule 167 (expression -> functioncall .)
    XOR             reduce using rule 167 (expression -> functioncall .)
    XNOR            reduce using rule 167 (expression -> functioncall .)
    OR              reduce using rule 167 (expression -> functioncall .)
    LAND            reduce using rule 167 (expression -> functioncall .)
    LOR             reduce using rule 167 (expression -> functioncall .)
    COND            reduce using rule 167 (expression -> functioncall .)
    RPAREN          reduce using rule 167 (expression -> functioncall .)
    COLON           reduce using rule 167 (expression -> functioncall .)
    PLUSCOLON       reduce using rule 167 (expression -> functioncall .)
    MINUSCOLON      reduce using rule 167 (expression -> functioncall .)
    SEMICOLON       reduce using rule 167 (expression -> functioncall .)
    LBRACE          reduce using rule 167 (expression -> functioncall .)
    RBRACE          reduce using rule 167 (expression -> functioncall .)
    COMMA           reduce using rule 167 (expression -> functioncall .)


state 56

    (130) expression -> NOT . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 132
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 57

    (169) expression -> identifier .
    (175) partselect -> identifier . LBRACKET expression COLON expression RBRACKET
    (176) partselect -> identifier . LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> identifier . LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> identifier . LBRACKET expression RBRACKET
    (366) functioncall -> identifier . LPAREN func_args RPAREN
    (387) scope -> identifier . DOT

    RBRACKET        reduce using rule 169 (expression -> identifier .)
    POWER           reduce using rule 169 (expression -> identifier .)
    TIMES           reduce using rule 169 (expression -> identifier .)
    DIVIDE          reduce using rule 169 (expression -> identifier .)
    MOD             reduce using rule 169 (expression -> identifier .)
    PLUS            reduce using rule 169 (expression -> identifier .)
    MINUS           reduce using rule 169 (expression -> identifier .)
    LSHIFT          reduce using rule 169 (expression -> identifier .)
    RSHIFT          reduce using rule 169 (expression -> identifier .)
    LSHIFTA         reduce using rule 169 (expression -> identifier .)
    RSHIFTA         reduce using rule 169 (expression -> identifier .)
    LT              reduce using rule 169 (expression -> identifier .)
    GT              reduce using rule 169 (expression -> identifier .)
    LE              reduce using rule 169 (expression -> identifier .)
    GE              reduce using rule 169 (expression -> identifier .)
    EQ              reduce using rule 169 (expression -> identifier .)
    NE              reduce using rule 169 (expression -> identifier .)
    EQL             reduce using rule 169 (expression -> identifier .)
    NEL             reduce using rule 169 (expression -> identifier .)
    AND             reduce using rule 169 (expression -> identifier .)
    XOR             reduce using rule 169 (expression -> identifier .)
    XNOR            reduce using rule 169 (expression -> identifier .)
    OR              reduce using rule 169 (expression -> identifier .)
    LAND            reduce using rule 169 (expression -> identifier .)
    LOR             reduce using rule 169 (expression -> identifier .)
    COND            reduce using rule 169 (expression -> identifier .)
    RPAREN          reduce using rule 169 (expression -> identifier .)
    COLON           reduce using rule 169 (expression -> identifier .)
    PLUSCOLON       reduce using rule 169 (expression -> identifier .)
    MINUSCOLON      reduce using rule 169 (expression -> identifier .)
    SEMICOLON       reduce using rule 169 (expression -> identifier .)
    LBRACE          reduce using rule 169 (expression -> identifier .)
    RBRACE          reduce using rule 169 (expression -> identifier .)
    COMMA           reduce using rule 169 (expression -> identifier .)
    LBRACKET        shift and go to state 133
    LPAREN          shift and go to state 134
    DOT             shift and go to state 135


state 58

    (7) pragma -> LPAREN TIMES ID EQUALS expression . TIMES RPAREN
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    TIMES           shift and go to state 152
    POWER           shift and go to state 143
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147
    LT              shift and go to state 145
    GT              shift and go to state 149
    LE              shift and go to state 142
    GE              shift and go to state 153
    EQ              shift and go to state 156
    NE              shift and go to state 144
    EQL             shift and go to state 155
    NEL             shift and go to state 136
    AND             shift and go to state 157
    XOR             shift and go to state 150
    XNOR            shift and go to state 148
    OR              shift and go to state 159
    LAND            shift and go to state 154
    LOR             shift and go to state 138
    COND            shift and go to state 139


state 59

    (134) expression -> OR . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 161
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 60

    (133) expression -> NOR . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 162
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 61

    (8) pragma -> LPAREN TIMES ID TIMES RPAREN .

    END             reduce using rule 8 (pragma -> LPAREN TIMES ID TIMES RPAREN .)
    IF              reduce using rule 8 (pragma -> LPAREN TIMES ID TIMES RPAREN .)
    FOR             reduce using rule 8 (pragma -> LPAREN TIMES ID TIMES RPAREN .)
    INTEGER         reduce using rule 8 (pragma -> LPAREN TIMES ID TIMES RPAREN .)
    REAL            reduce using rule 8 (pragma -> LPAREN TIMES ID TIMES RPAREN .)
    PARAMETER       reduce using rule 8 (pragma -> LPAREN TIMES ID TIMES RPAREN .)
    LOCALPARAM      reduce using rule 8 (pragma -> LPAREN TIMES ID TIMES RPAREN .)
    GENVAR          reduce using rule 8 (pragma -> LPAREN TIMES ID TIMES RPAREN .)
    ASSIGN          reduce using rule 8 (pragma -> LPAREN TIMES ID TIMES RPAREN .)
    ALWAYS          reduce using rule 8 (pragma -> LPAREN TIMES ID TIMES RPAREN .)
    INITIAL         reduce using rule 8 (pragma -> LPAREN TIMES ID TIMES RPAREN .)
    ID              reduce using rule 8 (pragma -> LPAREN TIMES ID TIMES RPAREN .)
    SENS_OR         reduce using rule 8 (pragma -> LPAREN TIMES ID TIMES RPAREN .)
    FUNCTION        reduce using rule 8 (pragma -> LPAREN TIMES ID TIMES RPAREN .)
    TASK            reduce using rule 8 (pragma -> LPAREN TIMES ID TIMES RPAREN .)
    LPAREN          reduce using rule 8 (pragma -> LPAREN TIMES ID TIMES RPAREN .)
    INPUT           reduce using rule 8 (pragma -> LPAREN TIMES ID TIMES RPAREN .)
    OUTPUT          reduce using rule 8 (pragma -> LPAREN TIMES ID TIMES RPAREN .)
    INOUT           reduce using rule 8 (pragma -> LPAREN TIMES ID TIMES RPAREN .)
    TRI             reduce using rule 8 (pragma -> LPAREN TIMES ID TIMES RPAREN .)
    REG             reduce using rule 8 (pragma -> LPAREN TIMES ID TIMES RPAREN .)
    WIRE            reduce using rule 8 (pragma -> LPAREN TIMES ID TIMES RPAREN .)
    SIGNED          reduce using rule 8 (pragma -> LPAREN TIMES ID TIMES RPAREN .)
    SUPPLY0         reduce using rule 8 (pragma -> LPAREN TIMES ID TIMES RPAREN .)
    SUPPLY1         reduce using rule 8 (pragma -> LPAREN TIMES ID TIMES RPAREN .)
    ENDMODULE       reduce using rule 8 (pragma -> LPAREN TIMES ID TIMES RPAREN .)
    GENERATE        reduce using rule 8 (pragma -> LPAREN TIMES ID TIMES RPAREN .)
    MODULE          reduce using rule 8 (pragma -> LPAREN TIMES ID TIMES RPAREN .)
    $end            reduce using rule 8 (pragma -> LPAREN TIMES ID TIMES RPAREN .)
    ELSE            reduce using rule 8 (pragma -> LPAREN TIMES ID TIMES RPAREN .)
    ENDGENERATE     reduce using rule 8 (pragma -> LPAREN TIMES ID TIMES RPAREN .)


state 62

    (60) standard_item -> decl .

    ELSE            reduce using rule 60 (standard_item -> decl .)
    ENDGENERATE     reduce using rule 60 (standard_item -> decl .)
    IF              reduce using rule 60 (standard_item -> decl .)
    FOR             reduce using rule 60 (standard_item -> decl .)
    INTEGER         reduce using rule 60 (standard_item -> decl .)
    REAL            reduce using rule 60 (standard_item -> decl .)
    PARAMETER       reduce using rule 60 (standard_item -> decl .)
    LOCALPARAM      reduce using rule 60 (standard_item -> decl .)
    GENVAR          reduce using rule 60 (standard_item -> decl .)
    ASSIGN          reduce using rule 60 (standard_item -> decl .)
    ALWAYS          reduce using rule 60 (standard_item -> decl .)
    INITIAL         reduce using rule 60 (standard_item -> decl .)
    ID              reduce using rule 60 (standard_item -> decl .)
    SENS_OR         reduce using rule 60 (standard_item -> decl .)
    FUNCTION        reduce using rule 60 (standard_item -> decl .)
    TASK            reduce using rule 60 (standard_item -> decl .)
    LPAREN          reduce using rule 60 (standard_item -> decl .)
    INPUT           reduce using rule 60 (standard_item -> decl .)
    OUTPUT          reduce using rule 60 (standard_item -> decl .)
    INOUT           reduce using rule 60 (standard_item -> decl .)
    TRI             reduce using rule 60 (standard_item -> decl .)
    REG             reduce using rule 60 (standard_item -> decl .)
    WIRE            reduce using rule 60 (standard_item -> decl .)
    SIGNED          reduce using rule 60 (standard_item -> decl .)
    SUPPLY0         reduce using rule 60 (standard_item -> decl .)
    SUPPLY1         reduce using rule 60 (standard_item -> decl .)
    END             reduce using rule 60 (standard_item -> decl .)
    ENDMODULE       reduce using rule 60 (standard_item -> decl .)
    GENERATE        reduce using rule 60 (standard_item -> decl .)


state 63

    (89) realdecl -> REAL . realnamelist SEMICOLON
    (90) realnamelist -> . realnamelist COMMA realname
    (91) realnamelist -> . realname
    (92) realname -> . ID

    ID              shift and go to state 165

    realnamelist                   shift and go to state 164
    realname                       shift and go to state 163

state 64

    (65) standard_item -> localparamdecl .

    ELSE            reduce using rule 65 (standard_item -> localparamdecl .)
    ENDGENERATE     reduce using rule 65 (standard_item -> localparamdecl .)
    IF              reduce using rule 65 (standard_item -> localparamdecl .)
    FOR             reduce using rule 65 (standard_item -> localparamdecl .)
    INTEGER         reduce using rule 65 (standard_item -> localparamdecl .)
    REAL            reduce using rule 65 (standard_item -> localparamdecl .)
    PARAMETER       reduce using rule 65 (standard_item -> localparamdecl .)
    LOCALPARAM      reduce using rule 65 (standard_item -> localparamdecl .)
    GENVAR          reduce using rule 65 (standard_item -> localparamdecl .)
    ASSIGN          reduce using rule 65 (standard_item -> localparamdecl .)
    ALWAYS          reduce using rule 65 (standard_item -> localparamdecl .)
    INITIAL         reduce using rule 65 (standard_item -> localparamdecl .)
    ID              reduce using rule 65 (standard_item -> localparamdecl .)
    SENS_OR         reduce using rule 65 (standard_item -> localparamdecl .)
    FUNCTION        reduce using rule 65 (standard_item -> localparamdecl .)
    TASK            reduce using rule 65 (standard_item -> localparamdecl .)
    LPAREN          reduce using rule 65 (standard_item -> localparamdecl .)
    INPUT           reduce using rule 65 (standard_item -> localparamdecl .)
    OUTPUT          reduce using rule 65 (standard_item -> localparamdecl .)
    INOUT           reduce using rule 65 (standard_item -> localparamdecl .)
    TRI             reduce using rule 65 (standard_item -> localparamdecl .)
    REG             reduce using rule 65 (standard_item -> localparamdecl .)
    WIRE            reduce using rule 65 (standard_item -> localparamdecl .)
    SIGNED          reduce using rule 65 (standard_item -> localparamdecl .)
    SUPPLY0         reduce using rule 65 (standard_item -> localparamdecl .)
    SUPPLY1         reduce using rule 65 (standard_item -> localparamdecl .)
    END             reduce using rule 65 (standard_item -> localparamdecl .)
    ENDMODULE       reduce using rule 65 (standard_item -> localparamdecl .)
    GENERATE        reduce using rule 65 (standard_item -> localparamdecl .)


state 65

    (63) standard_item -> declassign .

    ELSE            reduce using rule 63 (standard_item -> declassign .)
    ENDGENERATE     reduce using rule 63 (standard_item -> declassign .)
    IF              reduce using rule 63 (standard_item -> declassign .)
    FOR             reduce using rule 63 (standard_item -> declassign .)
    INTEGER         reduce using rule 63 (standard_item -> declassign .)
    REAL            reduce using rule 63 (standard_item -> declassign .)
    PARAMETER       reduce using rule 63 (standard_item -> declassign .)
    LOCALPARAM      reduce using rule 63 (standard_item -> declassign .)
    GENVAR          reduce using rule 63 (standard_item -> declassign .)
    ASSIGN          reduce using rule 63 (standard_item -> declassign .)
    ALWAYS          reduce using rule 63 (standard_item -> declassign .)
    INITIAL         reduce using rule 63 (standard_item -> declassign .)
    ID              reduce using rule 63 (standard_item -> declassign .)
    SENS_OR         reduce using rule 63 (standard_item -> declassign .)
    FUNCTION        reduce using rule 63 (standard_item -> declassign .)
    TASK            reduce using rule 63 (standard_item -> declassign .)
    LPAREN          reduce using rule 63 (standard_item -> declassign .)
    INPUT           reduce using rule 63 (standard_item -> declassign .)
    OUTPUT          reduce using rule 63 (standard_item -> declassign .)
    INOUT           reduce using rule 63 (standard_item -> declassign .)
    TRI             reduce using rule 63 (standard_item -> declassign .)
    REG             reduce using rule 63 (standard_item -> declassign .)
    WIRE            reduce using rule 63 (standard_item -> declassign .)
    SIGNED          reduce using rule 63 (standard_item -> declassign .)
    SUPPLY0         reduce using rule 63 (standard_item -> declassign .)
    SUPPLY1         reduce using rule 63 (standard_item -> declassign .)
    END             reduce using rule 63 (standard_item -> declassign .)
    ENDMODULE       reduce using rule 63 (standard_item -> declassign .)
    GENERATE        reduce using rule 63 (standard_item -> declassign .)


state 66

    (283) initial -> INITIAL . initial_statement
    (284) initial_statement -> . basic_statement
    (216) basic_statement -> . if_statement
    (217) basic_statement -> . case_statement
    (218) basic_statement -> . casex_statement
    (219) basic_statement -> . for_statement
    (220) basic_statement -> . while_statement
    (221) basic_statement -> . event_statement
    (222) basic_statement -> . wait_statement
    (223) basic_statement -> . forever_statement
    (224) basic_statement -> . block
    (225) basic_statement -> . namedblock
    (226) basic_statement -> . parallelblock
    (227) basic_statement -> . blocking_substitution
    (228) basic_statement -> . nonblocking_substitution
    (229) basic_statement -> . single_statement
    (256) if_statement -> . IF LPAREN cond RPAREN true_statement ELSE else_statement
    (257) if_statement -> . IF LPAREN cond RPAREN true_statement
    (258) if_statement -> . delays IF LPAREN cond RPAREN true_statement ELSE else_statement
    (259) if_statement -> . delays IF LPAREN cond RPAREN true_statement
    (274) case_statement -> . CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (275) casex_statement -> . CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (264) for_statement -> . FOR LPAREN forpre forcond forpost RPAREN forcontent_statement
    (272) while_statement -> . WHILE LPAREN cond RPAREN whilecontent_statement
    (285) event_statement -> . senslist SEMICOLON
    (286) wait_statement -> . WAIT LPAREN cond RPAREN waitcontent_statement
    (289) forever_statement -> . FOREVER basic_statement
    (239) block -> . BEGIN block_statements END
    (240) block -> . BEGIN END
    (244) namedblock -> . BEGIN COLON ID namedblock_statements END
    (245) namedblock -> . BEGIN COLON ID END
    (254) parallelblock -> . FORK block_statements JOIN
    (255) parallelblock -> . FORK JOIN
    (231) blocking_substitution -> . delays lvalue EQUALS delays rvalue SEMICOLON
    (233) nonblocking_substitution -> . delays lvalue LE delays rvalue SEMICOLON
    (390) single_statement -> . DELAY expression SEMICOLON
    (391) single_statement -> . systemcall SEMICOLON
    (392) single_statement -> . disable SEMICOLON
    (234) delays -> . DELAY LPAREN expression RPAREN
    (235) delays -> . DELAY identifier
    (236) delays -> . DELAY intnumber
    (237) delays -> . DELAY floatnumber
    (238) delays -> . empty
    (197) senslist -> . AT LPAREN edgesigs RPAREN
    (204) senslist -> . empty
    (205) senslist -> . AT levelsig
    (206) senslist -> . AT LPAREN levelsigs RPAREN
    (214) senslist -> . AT TIMES
    (215) senslist -> . AT LPAREN TIMES RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (389) disable -> . DISABLE ID
    (393) empty -> .

  ! shift/reduce conflict for IF resolved as shift
    IF              shift and go to state 195
    CASE            shift and go to state 173
    CASEX           shift and go to state 178
    FOR             shift and go to state 187
    WHILE           shift and go to state 171
    WAIT            shift and go to state 168
    FOREVER         shift and go to state 167
    BEGIN           shift and go to state 175
    FORK            shift and go to state 166
    DELAY           shift and go to state 170
    AT              shift and go to state 193
    DOLLER          shift and go to state 54
    DISABLE         shift and go to state 180
    LBRACE          reduce using rule 393 (empty -> .)
    ID              reduce using rule 393 (empty -> .)
    SEMICOLON       reduce using rule 393 (empty -> .)

  ! IF              [ reduce using rule 393 (empty -> .) ]

    parallelblock                  shift and go to state 169
    forever_statement              shift and go to state 172
    casex_statement                shift and go to state 174
    delays                         shift and go to state 176
    blocking_substitution          shift and go to state 177
    while_statement                shift and go to state 179
    systemcall                     shift and go to state 181
    if_statement                   shift and go to state 182
    nonblocking_substitution       shift and go to state 183
    empty                          shift and go to state 184
    basic_statement                shift and go to state 185
    for_statement                  shift and go to state 186
    initial_statement              shift and go to state 188
    event_statement                shift and go to state 189
    wait_statement                 shift and go to state 190
    case_statement                 shift and go to state 191
    disable                        shift and go to state 192
    namedblock                     shift and go to state 194
    senslist                       shift and go to state 196
    block                          shift and go to state 198
    single_statement               shift and go to state 197

state 67

    (41) sigtype -> REG .

    LBRACKET        reduce using rule 41 (sigtype -> REG .)
    ID              reduce using rule 41 (sigtype -> REG .)
    INPUT           reduce using rule 41 (sigtype -> REG .)
    OUTPUT          reduce using rule 41 (sigtype -> REG .)
    INOUT           reduce using rule 41 (sigtype -> REG .)
    TRI             reduce using rule 41 (sigtype -> REG .)
    REG             reduce using rule 41 (sigtype -> REG .)
    WIRE            reduce using rule 41 (sigtype -> REG .)
    SIGNED          reduce using rule 41 (sigtype -> REG .)
    SUPPLY0         reduce using rule 41 (sigtype -> REG .)
    SUPPLY1         reduce using rule 41 (sigtype -> REG .)
    DELAY           reduce using rule 41 (sigtype -> REG .)


state 68

    (196) always -> ALWAYS . senslist always_statement
    (197) senslist -> . AT LPAREN edgesigs RPAREN
    (204) senslist -> . empty
    (205) senslist -> . AT levelsig
    (206) senslist -> . AT LPAREN levelsigs RPAREN
    (214) senslist -> . AT TIMES
    (215) senslist -> . AT LPAREN TIMES RPAREN
    (393) empty -> .

  ! shift/reduce conflict for AT resolved as shift
    AT              shift and go to state 193
    IF              reduce using rule 393 (empty -> .)
    CASE            reduce using rule 393 (empty -> .)
    CASEX           reduce using rule 393 (empty -> .)
    FOR             reduce using rule 393 (empty -> .)
    WHILE           reduce using rule 393 (empty -> .)
    WAIT            reduce using rule 393 (empty -> .)
    FOREVER         reduce using rule 393 (empty -> .)
    BEGIN           reduce using rule 393 (empty -> .)
    FORK            reduce using rule 393 (empty -> .)
    DELAY           reduce using rule 393 (empty -> .)
    DOLLER          reduce using rule 393 (empty -> .)
    DISABLE         reduce using rule 393 (empty -> .)
    LBRACE          reduce using rule 393 (empty -> .)
    ID              reduce using rule 393 (empty -> .)
    SEMICOLON       reduce using rule 393 (empty -> .)

  ! AT              [ reduce using rule 393 (empty -> .) ]

    senslist                       shift and go to state 199
    empty                          shift and go to state 200

state 69

    (322) genvardecl -> GENVAR . genvarlist SEMICOLON
    (323) genvarlist -> . genvarlist COMMA genvar
    (324) genvarlist -> . genvar
    (325) genvar -> . ID

    ID              shift and go to state 203

    genvar                         shift and go to state 202
    genvarlist                     shift and go to state 201

state 70

    (93) parameterdecl -> PARAMETER . param_substitution_list SEMICOLON
    (94) parameterdecl -> PARAMETER . SIGNED param_substitution_list SEMICOLON
    (95) parameterdecl -> PARAMETER . width param_substitution_list SEMICOLON
    (96) parameterdecl -> PARAMETER . SIGNED width param_substitution_list SEMICOLON
    (97) parameterdecl -> PARAMETER . INTEGER param_substitution_list SEMICOLON
    (103) param_substitution_list -> . param_substitution_list COMMA param_substitution
    (104) param_substitution_list -> . param_substitution
    (53) width -> . LBRACKET expression COLON expression RBRACKET
    (105) param_substitution -> . ID EQUALS rvalue

    SIGNED          shift and go to state 204
    INTEGER         shift and go to state 208
    LBRACKET        shift and go to state 205
    ID              shift and go to state 209

    width                          shift and go to state 206
    param_substitution             shift and go to state 210
    param_substitution_list        shift and go to state 207

state 71

    (61) standard_item -> integerdecl .

    ELSE            reduce using rule 61 (standard_item -> integerdecl .)
    ENDGENERATE     reduce using rule 61 (standard_item -> integerdecl .)
    IF              reduce using rule 61 (standard_item -> integerdecl .)
    FOR             reduce using rule 61 (standard_item -> integerdecl .)
    INTEGER         reduce using rule 61 (standard_item -> integerdecl .)
    REAL            reduce using rule 61 (standard_item -> integerdecl .)
    PARAMETER       reduce using rule 61 (standard_item -> integerdecl .)
    LOCALPARAM      reduce using rule 61 (standard_item -> integerdecl .)
    GENVAR          reduce using rule 61 (standard_item -> integerdecl .)
    ASSIGN          reduce using rule 61 (standard_item -> integerdecl .)
    ALWAYS          reduce using rule 61 (standard_item -> integerdecl .)
    INITIAL         reduce using rule 61 (standard_item -> integerdecl .)
    ID              reduce using rule 61 (standard_item -> integerdecl .)
    SENS_OR         reduce using rule 61 (standard_item -> integerdecl .)
    FUNCTION        reduce using rule 61 (standard_item -> integerdecl .)
    TASK            reduce using rule 61 (standard_item -> integerdecl .)
    LPAREN          reduce using rule 61 (standard_item -> integerdecl .)
    INPUT           reduce using rule 61 (standard_item -> integerdecl .)
    OUTPUT          reduce using rule 61 (standard_item -> integerdecl .)
    INOUT           reduce using rule 61 (standard_item -> integerdecl .)
    TRI             reduce using rule 61 (standard_item -> integerdecl .)
    REG             reduce using rule 61 (standard_item -> integerdecl .)
    WIRE            reduce using rule 61 (standard_item -> integerdecl .)
    SIGNED          reduce using rule 61 (standard_item -> integerdecl .)
    SUPPLY0         reduce using rule 61 (standard_item -> integerdecl .)
    SUPPLY1         reduce using rule 61 (standard_item -> integerdecl .)
    END             reduce using rule 61 (standard_item -> integerdecl .)
    ENDMODULE       reduce using rule 61 (standard_item -> integerdecl .)
    GENERATE        reduce using rule 61 (standard_item -> integerdecl .)


state 72

    (39) sigtype -> INOUT .

    LBRACKET        reduce using rule 39 (sigtype -> INOUT .)
    ID              reduce using rule 39 (sigtype -> INOUT .)
    INPUT           reduce using rule 39 (sigtype -> INOUT .)
    OUTPUT          reduce using rule 39 (sigtype -> INOUT .)
    INOUT           reduce using rule 39 (sigtype -> INOUT .)
    TRI             reduce using rule 39 (sigtype -> INOUT .)
    REG             reduce using rule 39 (sigtype -> INOUT .)
    WIRE            reduce using rule 39 (sigtype -> INOUT .)
    SIGNED          reduce using rule 39 (sigtype -> INOUT .)
    SUPPLY0         reduce using rule 39 (sigtype -> INOUT .)
    SUPPLY1         reduce using rule 39 (sigtype -> INOUT .)
    DELAY           reduce using rule 39 (sigtype -> INOUT .)


state 73

    (58) item -> standard_item .

    ENDMODULE       reduce using rule 58 (item -> standard_item .)
    GENERATE        reduce using rule 58 (item -> standard_item .)
    INTEGER         reduce using rule 58 (item -> standard_item .)
    REAL            reduce using rule 58 (item -> standard_item .)
    PARAMETER       reduce using rule 58 (item -> standard_item .)
    LOCALPARAM      reduce using rule 58 (item -> standard_item .)
    GENVAR          reduce using rule 58 (item -> standard_item .)
    ASSIGN          reduce using rule 58 (item -> standard_item .)
    ALWAYS          reduce using rule 58 (item -> standard_item .)
    INITIAL         reduce using rule 58 (item -> standard_item .)
    ID              reduce using rule 58 (item -> standard_item .)
    SENS_OR         reduce using rule 58 (item -> standard_item .)
    FUNCTION        reduce using rule 58 (item -> standard_item .)
    TASK            reduce using rule 58 (item -> standard_item .)
    LPAREN          reduce using rule 58 (item -> standard_item .)
    INPUT           reduce using rule 58 (item -> standard_item .)
    OUTPUT          reduce using rule 58 (item -> standard_item .)
    INOUT           reduce using rule 58 (item -> standard_item .)
    TRI             reduce using rule 58 (item -> standard_item .)
    REG             reduce using rule 58 (item -> standard_item .)
    WIRE            reduce using rule 58 (item -> standard_item .)
    SIGNED          reduce using rule 58 (item -> standard_item .)
    SUPPLY0         reduce using rule 58 (item -> standard_item .)
    SUPPLY1         reduce using rule 58 (item -> standard_item .)


state 74

    (66) standard_item -> genvardecl .

    ELSE            reduce using rule 66 (standard_item -> genvardecl .)
    ENDGENERATE     reduce using rule 66 (standard_item -> genvardecl .)
    IF              reduce using rule 66 (standard_item -> genvardecl .)
    FOR             reduce using rule 66 (standard_item -> genvardecl .)
    INTEGER         reduce using rule 66 (standard_item -> genvardecl .)
    REAL            reduce using rule 66 (standard_item -> genvardecl .)
    PARAMETER       reduce using rule 66 (standard_item -> genvardecl .)
    LOCALPARAM      reduce using rule 66 (standard_item -> genvardecl .)
    GENVAR          reduce using rule 66 (standard_item -> genvardecl .)
    ASSIGN          reduce using rule 66 (standard_item -> genvardecl .)
    ALWAYS          reduce using rule 66 (standard_item -> genvardecl .)
    INITIAL         reduce using rule 66 (standard_item -> genvardecl .)
    ID              reduce using rule 66 (standard_item -> genvardecl .)
    SENS_OR         reduce using rule 66 (standard_item -> genvardecl .)
    FUNCTION        reduce using rule 66 (standard_item -> genvardecl .)
    TASK            reduce using rule 66 (standard_item -> genvardecl .)
    LPAREN          reduce using rule 66 (standard_item -> genvardecl .)
    INPUT           reduce using rule 66 (standard_item -> genvardecl .)
    OUTPUT          reduce using rule 66 (standard_item -> genvardecl .)
    INOUT           reduce using rule 66 (standard_item -> genvardecl .)
    TRI             reduce using rule 66 (standard_item -> genvardecl .)
    REG             reduce using rule 66 (standard_item -> genvardecl .)
    WIRE            reduce using rule 66 (standard_item -> genvardecl .)
    SIGNED          reduce using rule 66 (standard_item -> genvardecl .)
    SUPPLY0         reduce using rule 66 (standard_item -> genvardecl .)
    SUPPLY1         reduce using rule 66 (standard_item -> genvardecl .)
    END             reduce using rule 66 (standard_item -> genvardecl .)
    ENDMODULE       reduce using rule 66 (standard_item -> genvardecl .)
    GENERATE        reduce using rule 66 (standard_item -> genvardecl .)


state 75

    (36) sigtypes -> sigtype .

    LBRACKET        reduce using rule 36 (sigtypes -> sigtype .)
    ID              reduce using rule 36 (sigtypes -> sigtype .)
    INPUT           reduce using rule 36 (sigtypes -> sigtype .)
    OUTPUT          reduce using rule 36 (sigtypes -> sigtype .)
    INOUT           reduce using rule 36 (sigtypes -> sigtype .)
    TRI             reduce using rule 36 (sigtypes -> sigtype .)
    REG             reduce using rule 36 (sigtypes -> sigtype .)
    WIRE            reduce using rule 36 (sigtypes -> sigtype .)
    SIGNED          reduce using rule 36 (sigtypes -> sigtype .)
    SUPPLY0         reduce using rule 36 (sigtypes -> sigtype .)
    SUPPLY1         reduce using rule 36 (sigtypes -> sigtype .)
    DELAY           reduce using rule 36 (sigtypes -> sigtype .)


state 76

    (69) standard_item -> initial .

    ELSE            reduce using rule 69 (standard_item -> initial .)
    ENDGENERATE     reduce using rule 69 (standard_item -> initial .)
    IF              reduce using rule 69 (standard_item -> initial .)
    FOR             reduce using rule 69 (standard_item -> initial .)
    INTEGER         reduce using rule 69 (standard_item -> initial .)
    REAL            reduce using rule 69 (standard_item -> initial .)
    PARAMETER       reduce using rule 69 (standard_item -> initial .)
    LOCALPARAM      reduce using rule 69 (standard_item -> initial .)
    GENVAR          reduce using rule 69 (standard_item -> initial .)
    ASSIGN          reduce using rule 69 (standard_item -> initial .)
    ALWAYS          reduce using rule 69 (standard_item -> initial .)
    INITIAL         reduce using rule 69 (standard_item -> initial .)
    ID              reduce using rule 69 (standard_item -> initial .)
    SENS_OR         reduce using rule 69 (standard_item -> initial .)
    FUNCTION        reduce using rule 69 (standard_item -> initial .)
    TASK            reduce using rule 69 (standard_item -> initial .)
    LPAREN          reduce using rule 69 (standard_item -> initial .)
    INPUT           reduce using rule 69 (standard_item -> initial .)
    OUTPUT          reduce using rule 69 (standard_item -> initial .)
    INOUT           reduce using rule 69 (standard_item -> initial .)
    TRI             reduce using rule 69 (standard_item -> initial .)
    REG             reduce using rule 69 (standard_item -> initial .)
    WIRE            reduce using rule 69 (standard_item -> initial .)
    SIGNED          reduce using rule 69 (standard_item -> initial .)
    SUPPLY0         reduce using rule 69 (standard_item -> initial .)
    SUPPLY1         reduce using rule 69 (standard_item -> initial .)
    END             reduce using rule 69 (standard_item -> initial .)
    ENDMODULE       reduce using rule 69 (standard_item -> initial .)
    GENERATE        reduce using rule 69 (standard_item -> initial .)


state 77

    (326) generate -> GENERATE . generate_items ENDGENERATE
    (327) generate_items -> . empty
    (328) generate_items -> . generate_items generate_item
    (329) generate_items -> . generate_item
    (393) empty -> .
    (330) generate_item -> . standard_item
    (331) generate_item -> . generate_if
    (332) generate_item -> . generate_for
    (60) standard_item -> . decl
    (61) standard_item -> . integerdecl
    (62) standard_item -> . realdecl
    (63) standard_item -> . declassign
    (64) standard_item -> . parameterdecl
    (65) standard_item -> . localparamdecl
    (66) standard_item -> . genvardecl
    (67) standard_item -> . assignment
    (68) standard_item -> . always
    (69) standard_item -> . initial
    (70) standard_item -> . instance
    (71) standard_item -> . function
    (72) standard_item -> . task
    (73) standard_item -> . pragma
    (335) generate_if -> . IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item
    (336) generate_if -> . IF LPAREN cond RPAREN gif_true_item
    (341) generate_for -> . FOR LPAREN forpre forcond forpost RPAREN generate_forcontent
    (74) decl -> . sigtypes declnamelist SEMICOLON
    (75) decl -> . sigtypes width declnamelist SEMICOLON
    (84) integerdecl -> . INTEGER integernamelist SEMICOLON
    (85) integerdecl -> . INTEGER SIGNED integernamelist SEMICOLON
    (89) realdecl -> . REAL realnamelist SEMICOLON
    (80) declassign -> . sigtypes declassign_element SEMICOLON
    (81) declassign -> . sigtypes width declassign_element SEMICOLON
    (93) parameterdecl -> . PARAMETER param_substitution_list SEMICOLON
    (94) parameterdecl -> . PARAMETER SIGNED param_substitution_list SEMICOLON
    (95) parameterdecl -> . PARAMETER width param_substitution_list SEMICOLON
    (96) parameterdecl -> . PARAMETER SIGNED width param_substitution_list SEMICOLON
    (97) parameterdecl -> . PARAMETER INTEGER param_substitution_list SEMICOLON
    (98) localparamdecl -> . LOCALPARAM param_substitution_list SEMICOLON
    (99) localparamdecl -> . LOCALPARAM SIGNED param_substitution_list SEMICOLON
    (100) localparamdecl -> . LOCALPARAM width param_substitution_list SEMICOLON
    (101) localparamdecl -> . LOCALPARAM SIGNED width param_substitution_list SEMICOLON
    (102) localparamdecl -> . LOCALPARAM INTEGER param_substitution_list SEMICOLON
    (322) genvardecl -> . GENVAR genvarlist SEMICOLON
    (106) assignment -> . ASSIGN lvalue EQUALS rvalue SEMICOLON
    (107) assignment -> . ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON
    (196) always -> . ALWAYS senslist always_statement
    (283) initial -> . INITIAL initial_statement
    (290) instance -> . ID parameterlist instance_bodylist SEMICOLON
    (291) instance -> . SENS_OR parameterlist instance_bodylist SEMICOLON
    (296) instance -> . ID instance_bodylist_noname SEMICOLON
    (297) instance -> . SENS_OR instance_bodylist_noname SEMICOLON
    (351) function -> . FUNCTION width ID SEMICOLON function_statement ENDFUNCTION
    (352) function -> . FUNCTION ID SEMICOLON function_statement ENDFUNCTION
    (370) task -> . TASK ID SEMICOLON task_statement ENDTASK
    (7) pragma -> . LPAREN TIMES ID EQUALS expression TIMES RPAREN
    (8) pragma -> . LPAREN TIMES ID TIMES RPAREN
    (35) sigtypes -> . sigtypes sigtype
    (36) sigtypes -> . sigtype
    (37) sigtype -> . INPUT
    (38) sigtype -> . OUTPUT
    (39) sigtype -> . INOUT
    (40) sigtype -> . TRI
    (41) sigtype -> . REG
    (42) sigtype -> . WIRE
    (43) sigtype -> . SIGNED
    (44) sigtype -> . SUPPLY0
    (45) sigtype -> . SUPPLY1

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for REAL resolved as shift
  ! shift/reduce conflict for PARAMETER resolved as shift
  ! shift/reduce conflict for LOCALPARAM resolved as shift
  ! shift/reduce conflict for GENVAR resolved as shift
  ! shift/reduce conflict for ASSIGN resolved as shift
  ! shift/reduce conflict for ALWAYS resolved as shift
  ! shift/reduce conflict for INITIAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SENS_OR resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for TASK resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for OUTPUT resolved as shift
  ! shift/reduce conflict for INOUT resolved as shift
  ! shift/reduce conflict for TRI resolved as shift
  ! shift/reduce conflict for REG resolved as shift
  ! shift/reduce conflict for WIRE resolved as shift
  ! shift/reduce conflict for SIGNED resolved as shift
  ! shift/reduce conflict for SUPPLY0 resolved as shift
  ! shift/reduce conflict for SUPPLY1 resolved as shift
    ENDGENERATE     reduce using rule 393 (empty -> .)
    IF              shift and go to state 217
    FOR             shift and go to state 215
    INTEGER         shift and go to state 83
    REAL            shift and go to state 63
    PARAMETER       shift and go to state 70
    LOCALPARAM      shift and go to state 101
    GENVAR          shift and go to state 69
    ASSIGN          shift and go to state 85
    ALWAYS          shift and go to state 68
    INITIAL         shift and go to state 66
    ID              shift and go to state 92
    SENS_OR         shift and go to state 99
    FUNCTION        shift and go to state 93
    TASK            shift and go to state 90
    LPAREN          shift and go to state 2
    INPUT           shift and go to state 91
    OUTPUT          shift and go to state 96
    INOUT           shift and go to state 72
    TRI             shift and go to state 89
    REG             shift and go to state 67
    WIRE            shift and go to state 104
    SIGNED          shift and go to state 98
    SUPPLY0         shift and go to state 79
    SUPPLY1         shift and go to state 80

  ! IF              [ reduce using rule 393 (empty -> .) ]
  ! FOR             [ reduce using rule 393 (empty -> .) ]
  ! INTEGER         [ reduce using rule 393 (empty -> .) ]
  ! REAL            [ reduce using rule 393 (empty -> .) ]
  ! PARAMETER       [ reduce using rule 393 (empty -> .) ]
  ! LOCALPARAM      [ reduce using rule 393 (empty -> .) ]
  ! GENVAR          [ reduce using rule 393 (empty -> .) ]
  ! ASSIGN          [ reduce using rule 393 (empty -> .) ]
  ! ALWAYS          [ reduce using rule 393 (empty -> .) ]
  ! INITIAL         [ reduce using rule 393 (empty -> .) ]
  ! ID              [ reduce using rule 393 (empty -> .) ]
  ! SENS_OR         [ reduce using rule 393 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 393 (empty -> .) ]
  ! TASK            [ reduce using rule 393 (empty -> .) ]
  ! LPAREN          [ reduce using rule 393 (empty -> .) ]
  ! INPUT           [ reduce using rule 393 (empty -> .) ]
  ! OUTPUT          [ reduce using rule 393 (empty -> .) ]
  ! INOUT           [ reduce using rule 393 (empty -> .) ]
  ! TRI             [ reduce using rule 393 (empty -> .) ]
  ! REG             [ reduce using rule 393 (empty -> .) ]
  ! WIRE            [ reduce using rule 393 (empty -> .) ]
  ! SIGNED          [ reduce using rule 393 (empty -> .) ]
  ! SUPPLY0         [ reduce using rule 393 (empty -> .) ]
  ! SUPPLY1         [ reduce using rule 393 (empty -> .) ]

    decl                           shift and go to state 62
    localparamdecl                 shift and go to state 64
    declassign                     shift and go to state 65
    generate_for                   shift and go to state 211
    integerdecl                    shift and go to state 71
    standard_item                  shift and go to state 212
    genvardecl                     shift and go to state 74
    sigtype                        shift and go to state 75
    initial                        shift and go to state 76
    instance                       shift and go to state 78
    sigtypes                       shift and go to state 88
    realdecl                       shift and go to state 82
    parameterdecl                  shift and go to state 84
    empty                          shift and go to state 213
    function                       shift and go to state 87
    generate_items                 shift and go to state 214
    assignment                     shift and go to state 81
    pragma                         shift and go to state 102
    generate_item                  shift and go to state 216
    task                           shift and go to state 95
    always                         shift and go to state 97
    generate_if                    shift and go to state 218

state 78

    (70) standard_item -> instance .

    ELSE            reduce using rule 70 (standard_item -> instance .)
    ENDGENERATE     reduce using rule 70 (standard_item -> instance .)
    IF              reduce using rule 70 (standard_item -> instance .)
    FOR             reduce using rule 70 (standard_item -> instance .)
    INTEGER         reduce using rule 70 (standard_item -> instance .)
    REAL            reduce using rule 70 (standard_item -> instance .)
    PARAMETER       reduce using rule 70 (standard_item -> instance .)
    LOCALPARAM      reduce using rule 70 (standard_item -> instance .)
    GENVAR          reduce using rule 70 (standard_item -> instance .)
    ASSIGN          reduce using rule 70 (standard_item -> instance .)
    ALWAYS          reduce using rule 70 (standard_item -> instance .)
    INITIAL         reduce using rule 70 (standard_item -> instance .)
    ID              reduce using rule 70 (standard_item -> instance .)
    SENS_OR         reduce using rule 70 (standard_item -> instance .)
    FUNCTION        reduce using rule 70 (standard_item -> instance .)
    TASK            reduce using rule 70 (standard_item -> instance .)
    LPAREN          reduce using rule 70 (standard_item -> instance .)
    INPUT           reduce using rule 70 (standard_item -> instance .)
    OUTPUT          reduce using rule 70 (standard_item -> instance .)
    INOUT           reduce using rule 70 (standard_item -> instance .)
    TRI             reduce using rule 70 (standard_item -> instance .)
    REG             reduce using rule 70 (standard_item -> instance .)
    WIRE            reduce using rule 70 (standard_item -> instance .)
    SIGNED          reduce using rule 70 (standard_item -> instance .)
    SUPPLY0         reduce using rule 70 (standard_item -> instance .)
    SUPPLY1         reduce using rule 70 (standard_item -> instance .)
    END             reduce using rule 70 (standard_item -> instance .)
    ENDMODULE       reduce using rule 70 (standard_item -> instance .)
    GENERATE        reduce using rule 70 (standard_item -> instance .)


state 79

    (44) sigtype -> SUPPLY0 .

    LBRACKET        reduce using rule 44 (sigtype -> SUPPLY0 .)
    ID              reduce using rule 44 (sigtype -> SUPPLY0 .)
    INPUT           reduce using rule 44 (sigtype -> SUPPLY0 .)
    OUTPUT          reduce using rule 44 (sigtype -> SUPPLY0 .)
    INOUT           reduce using rule 44 (sigtype -> SUPPLY0 .)
    TRI             reduce using rule 44 (sigtype -> SUPPLY0 .)
    REG             reduce using rule 44 (sigtype -> SUPPLY0 .)
    WIRE            reduce using rule 44 (sigtype -> SUPPLY0 .)
    SIGNED          reduce using rule 44 (sigtype -> SUPPLY0 .)
    SUPPLY0         reduce using rule 44 (sigtype -> SUPPLY0 .)
    SUPPLY1         reduce using rule 44 (sigtype -> SUPPLY0 .)
    DELAY           reduce using rule 44 (sigtype -> SUPPLY0 .)


state 80

    (45) sigtype -> SUPPLY1 .

    LBRACKET        reduce using rule 45 (sigtype -> SUPPLY1 .)
    ID              reduce using rule 45 (sigtype -> SUPPLY1 .)
    INPUT           reduce using rule 45 (sigtype -> SUPPLY1 .)
    OUTPUT          reduce using rule 45 (sigtype -> SUPPLY1 .)
    INOUT           reduce using rule 45 (sigtype -> SUPPLY1 .)
    TRI             reduce using rule 45 (sigtype -> SUPPLY1 .)
    REG             reduce using rule 45 (sigtype -> SUPPLY1 .)
    WIRE            reduce using rule 45 (sigtype -> SUPPLY1 .)
    SIGNED          reduce using rule 45 (sigtype -> SUPPLY1 .)
    SUPPLY0         reduce using rule 45 (sigtype -> SUPPLY1 .)
    SUPPLY1         reduce using rule 45 (sigtype -> SUPPLY1 .)
    DELAY           reduce using rule 45 (sigtype -> SUPPLY1 .)


state 81

    (67) standard_item -> assignment .

    ELSE            reduce using rule 67 (standard_item -> assignment .)
    ENDGENERATE     reduce using rule 67 (standard_item -> assignment .)
    IF              reduce using rule 67 (standard_item -> assignment .)
    FOR             reduce using rule 67 (standard_item -> assignment .)
    INTEGER         reduce using rule 67 (standard_item -> assignment .)
    REAL            reduce using rule 67 (standard_item -> assignment .)
    PARAMETER       reduce using rule 67 (standard_item -> assignment .)
    LOCALPARAM      reduce using rule 67 (standard_item -> assignment .)
    GENVAR          reduce using rule 67 (standard_item -> assignment .)
    ASSIGN          reduce using rule 67 (standard_item -> assignment .)
    ALWAYS          reduce using rule 67 (standard_item -> assignment .)
    INITIAL         reduce using rule 67 (standard_item -> assignment .)
    ID              reduce using rule 67 (standard_item -> assignment .)
    SENS_OR         reduce using rule 67 (standard_item -> assignment .)
    FUNCTION        reduce using rule 67 (standard_item -> assignment .)
    TASK            reduce using rule 67 (standard_item -> assignment .)
    LPAREN          reduce using rule 67 (standard_item -> assignment .)
    INPUT           reduce using rule 67 (standard_item -> assignment .)
    OUTPUT          reduce using rule 67 (standard_item -> assignment .)
    INOUT           reduce using rule 67 (standard_item -> assignment .)
    TRI             reduce using rule 67 (standard_item -> assignment .)
    REG             reduce using rule 67 (standard_item -> assignment .)
    WIRE            reduce using rule 67 (standard_item -> assignment .)
    SIGNED          reduce using rule 67 (standard_item -> assignment .)
    SUPPLY0         reduce using rule 67 (standard_item -> assignment .)
    SUPPLY1         reduce using rule 67 (standard_item -> assignment .)
    END             reduce using rule 67 (standard_item -> assignment .)
    ENDMODULE       reduce using rule 67 (standard_item -> assignment .)
    GENERATE        reduce using rule 67 (standard_item -> assignment .)


state 82

    (62) standard_item -> realdecl .

    ELSE            reduce using rule 62 (standard_item -> realdecl .)
    ENDGENERATE     reduce using rule 62 (standard_item -> realdecl .)
    IF              reduce using rule 62 (standard_item -> realdecl .)
    FOR             reduce using rule 62 (standard_item -> realdecl .)
    INTEGER         reduce using rule 62 (standard_item -> realdecl .)
    REAL            reduce using rule 62 (standard_item -> realdecl .)
    PARAMETER       reduce using rule 62 (standard_item -> realdecl .)
    LOCALPARAM      reduce using rule 62 (standard_item -> realdecl .)
    GENVAR          reduce using rule 62 (standard_item -> realdecl .)
    ASSIGN          reduce using rule 62 (standard_item -> realdecl .)
    ALWAYS          reduce using rule 62 (standard_item -> realdecl .)
    INITIAL         reduce using rule 62 (standard_item -> realdecl .)
    ID              reduce using rule 62 (standard_item -> realdecl .)
    SENS_OR         reduce using rule 62 (standard_item -> realdecl .)
    FUNCTION        reduce using rule 62 (standard_item -> realdecl .)
    TASK            reduce using rule 62 (standard_item -> realdecl .)
    LPAREN          reduce using rule 62 (standard_item -> realdecl .)
    INPUT           reduce using rule 62 (standard_item -> realdecl .)
    OUTPUT          reduce using rule 62 (standard_item -> realdecl .)
    INOUT           reduce using rule 62 (standard_item -> realdecl .)
    TRI             reduce using rule 62 (standard_item -> realdecl .)
    REG             reduce using rule 62 (standard_item -> realdecl .)
    WIRE            reduce using rule 62 (standard_item -> realdecl .)
    SIGNED          reduce using rule 62 (standard_item -> realdecl .)
    SUPPLY0         reduce using rule 62 (standard_item -> realdecl .)
    SUPPLY1         reduce using rule 62 (standard_item -> realdecl .)
    END             reduce using rule 62 (standard_item -> realdecl .)
    ENDMODULE       reduce using rule 62 (standard_item -> realdecl .)
    GENERATE        reduce using rule 62 (standard_item -> realdecl .)


state 83

    (84) integerdecl -> INTEGER . integernamelist SEMICOLON
    (85) integerdecl -> INTEGER . SIGNED integernamelist SEMICOLON
    (86) integernamelist -> . integernamelist COMMA integername
    (87) integernamelist -> . integername
    (88) integername -> . ID

    SIGNED          shift and go to state 220
    ID              shift and go to state 222

    integernamelist                shift and go to state 221
    integername                    shift and go to state 219

state 84

    (64) standard_item -> parameterdecl .

    ELSE            reduce using rule 64 (standard_item -> parameterdecl .)
    ENDGENERATE     reduce using rule 64 (standard_item -> parameterdecl .)
    IF              reduce using rule 64 (standard_item -> parameterdecl .)
    FOR             reduce using rule 64 (standard_item -> parameterdecl .)
    INTEGER         reduce using rule 64 (standard_item -> parameterdecl .)
    REAL            reduce using rule 64 (standard_item -> parameterdecl .)
    PARAMETER       reduce using rule 64 (standard_item -> parameterdecl .)
    LOCALPARAM      reduce using rule 64 (standard_item -> parameterdecl .)
    GENVAR          reduce using rule 64 (standard_item -> parameterdecl .)
    ASSIGN          reduce using rule 64 (standard_item -> parameterdecl .)
    ALWAYS          reduce using rule 64 (standard_item -> parameterdecl .)
    INITIAL         reduce using rule 64 (standard_item -> parameterdecl .)
    ID              reduce using rule 64 (standard_item -> parameterdecl .)
    SENS_OR         reduce using rule 64 (standard_item -> parameterdecl .)
    FUNCTION        reduce using rule 64 (standard_item -> parameterdecl .)
    TASK            reduce using rule 64 (standard_item -> parameterdecl .)
    LPAREN          reduce using rule 64 (standard_item -> parameterdecl .)
    INPUT           reduce using rule 64 (standard_item -> parameterdecl .)
    OUTPUT          reduce using rule 64 (standard_item -> parameterdecl .)
    INOUT           reduce using rule 64 (standard_item -> parameterdecl .)
    TRI             reduce using rule 64 (standard_item -> parameterdecl .)
    REG             reduce using rule 64 (standard_item -> parameterdecl .)
    WIRE            reduce using rule 64 (standard_item -> parameterdecl .)
    SIGNED          reduce using rule 64 (standard_item -> parameterdecl .)
    SUPPLY0         reduce using rule 64 (standard_item -> parameterdecl .)
    SUPPLY1         reduce using rule 64 (standard_item -> parameterdecl .)
    END             reduce using rule 64 (standard_item -> parameterdecl .)
    ENDMODULE       reduce using rule 64 (standard_item -> parameterdecl .)
    GENERATE        reduce using rule 64 (standard_item -> parameterdecl .)


state 85

    (106) assignment -> ASSIGN . lvalue EQUALS rvalue SEMICOLON
    (107) assignment -> ASSIGN . delays lvalue EQUALS delays rvalue SEMICOLON
    (122) lvalue -> . lpartselect
    (123) lvalue -> . lpointer
    (124) lvalue -> . lconcat
    (125) lvalue -> . identifier
    (234) delays -> . DELAY LPAREN expression RPAREN
    (235) delays -> . DELAY identifier
    (236) delays -> . DELAY intnumber
    (237) delays -> . DELAY floatnumber
    (238) delays -> . empty
    (108) lpartselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (109) lpartselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (110) lpartselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (111) lpartselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (112) lpartselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (113) lpartselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (114) lpointer -> . pointer
    (115) lconcat -> . LBRACE lconcatlist RBRACE
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (393) empty -> .
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT

  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    DELAY           shift and go to state 230
    LBRACE          shift and go to state 231
    ID              shift and go to state 46

  ! LBRACE          [ reduce using rule 393 (empty -> .) ]
  ! ID              [ reduce using rule 393 (empty -> .) ]

    lconcat                        shift and go to state 229
    lpartselect                    shift and go to state 225
    lvalue                         shift and go to state 226
    delays                         shift and go to state 227
    pointer                        shift and go to state 224
    lpointer                       shift and go to state 223
    scope                          shift and go to state 44
    identifier                     shift and go to state 232
    empty                          shift and go to state 228

state 86

    (57) items -> empty .

    ENDMODULE       reduce using rule 57 (items -> empty .)
    GENERATE        reduce using rule 57 (items -> empty .)
    INTEGER         reduce using rule 57 (items -> empty .)
    REAL            reduce using rule 57 (items -> empty .)
    PARAMETER       reduce using rule 57 (items -> empty .)
    LOCALPARAM      reduce using rule 57 (items -> empty .)
    GENVAR          reduce using rule 57 (items -> empty .)
    ASSIGN          reduce using rule 57 (items -> empty .)
    ALWAYS          reduce using rule 57 (items -> empty .)
    INITIAL         reduce using rule 57 (items -> empty .)
    ID              reduce using rule 57 (items -> empty .)
    SENS_OR         reduce using rule 57 (items -> empty .)
    FUNCTION        reduce using rule 57 (items -> empty .)
    TASK            reduce using rule 57 (items -> empty .)
    LPAREN          reduce using rule 57 (items -> empty .)
    INPUT           reduce using rule 57 (items -> empty .)
    OUTPUT          reduce using rule 57 (items -> empty .)
    INOUT           reduce using rule 57 (items -> empty .)
    TRI             reduce using rule 57 (items -> empty .)
    REG             reduce using rule 57 (items -> empty .)
    WIRE            reduce using rule 57 (items -> empty .)
    SIGNED          reduce using rule 57 (items -> empty .)
    SUPPLY0         reduce using rule 57 (items -> empty .)
    SUPPLY1         reduce using rule 57 (items -> empty .)


state 87

    (71) standard_item -> function .

    ELSE            reduce using rule 71 (standard_item -> function .)
    ENDGENERATE     reduce using rule 71 (standard_item -> function .)
    IF              reduce using rule 71 (standard_item -> function .)
    FOR             reduce using rule 71 (standard_item -> function .)
    INTEGER         reduce using rule 71 (standard_item -> function .)
    REAL            reduce using rule 71 (standard_item -> function .)
    PARAMETER       reduce using rule 71 (standard_item -> function .)
    LOCALPARAM      reduce using rule 71 (standard_item -> function .)
    GENVAR          reduce using rule 71 (standard_item -> function .)
    ASSIGN          reduce using rule 71 (standard_item -> function .)
    ALWAYS          reduce using rule 71 (standard_item -> function .)
    INITIAL         reduce using rule 71 (standard_item -> function .)
    ID              reduce using rule 71 (standard_item -> function .)
    SENS_OR         reduce using rule 71 (standard_item -> function .)
    FUNCTION        reduce using rule 71 (standard_item -> function .)
    TASK            reduce using rule 71 (standard_item -> function .)
    LPAREN          reduce using rule 71 (standard_item -> function .)
    INPUT           reduce using rule 71 (standard_item -> function .)
    OUTPUT          reduce using rule 71 (standard_item -> function .)
    INOUT           reduce using rule 71 (standard_item -> function .)
    TRI             reduce using rule 71 (standard_item -> function .)
    REG             reduce using rule 71 (standard_item -> function .)
    WIRE            reduce using rule 71 (standard_item -> function .)
    SIGNED          reduce using rule 71 (standard_item -> function .)
    SUPPLY0         reduce using rule 71 (standard_item -> function .)
    SUPPLY1         reduce using rule 71 (standard_item -> function .)
    END             reduce using rule 71 (standard_item -> function .)
    ENDMODULE       reduce using rule 71 (standard_item -> function .)
    GENERATE        reduce using rule 71 (standard_item -> function .)


state 88

    (74) decl -> sigtypes . declnamelist SEMICOLON
    (75) decl -> sigtypes . width declnamelist SEMICOLON
    (80) declassign -> sigtypes . declassign_element SEMICOLON
    (81) declassign -> sigtypes . width declassign_element SEMICOLON
    (35) sigtypes -> sigtypes . sigtype
    (76) declnamelist -> . declnamelist COMMA declname
    (77) declnamelist -> . declname
    (53) width -> . LBRACKET expression COLON expression RBRACKET
    (82) declassign_element -> . ID EQUALS rvalue
    (83) declassign_element -> . delays ID EQUALS delays rvalue
    (37) sigtype -> . INPUT
    (38) sigtype -> . OUTPUT
    (39) sigtype -> . INOUT
    (40) sigtype -> . TRI
    (41) sigtype -> . REG
    (42) sigtype -> . WIRE
    (43) sigtype -> . SIGNED
    (44) sigtype -> . SUPPLY0
    (45) sigtype -> . SUPPLY1
    (78) declname -> . ID
    (79) declname -> . ID length
    (234) delays -> . DELAY LPAREN expression RPAREN
    (235) delays -> . DELAY identifier
    (236) delays -> . DELAY intnumber
    (237) delays -> . DELAY floatnumber
    (238) delays -> . empty
    (393) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    LBRACKET        shift and go to state 205
    ID              shift and go to state 239
    INPUT           shift and go to state 91
    OUTPUT          shift and go to state 96
    INOUT           shift and go to state 72
    TRI             shift and go to state 89
    REG             shift and go to state 67
    WIRE            shift and go to state 104
    SIGNED          shift and go to state 98
    SUPPLY0         shift and go to state 79
    SUPPLY1         shift and go to state 80
    DELAY           shift and go to state 230

  ! ID              [ reduce using rule 393 (empty -> .) ]

    declname                       shift and go to state 233
    sigtype                        shift and go to state 234
    delays                         shift and go to state 235
    width                          shift and go to state 236
    declassign_element             shift and go to state 238
    declnamelist                   shift and go to state 237
    empty                          shift and go to state 228

state 89

    (40) sigtype -> TRI .

    LBRACKET        reduce using rule 40 (sigtype -> TRI .)
    ID              reduce using rule 40 (sigtype -> TRI .)
    INPUT           reduce using rule 40 (sigtype -> TRI .)
    OUTPUT          reduce using rule 40 (sigtype -> TRI .)
    INOUT           reduce using rule 40 (sigtype -> TRI .)
    TRI             reduce using rule 40 (sigtype -> TRI .)
    REG             reduce using rule 40 (sigtype -> TRI .)
    WIRE            reduce using rule 40 (sigtype -> TRI .)
    SIGNED          reduce using rule 40 (sigtype -> TRI .)
    SUPPLY0         reduce using rule 40 (sigtype -> TRI .)
    SUPPLY1         reduce using rule 40 (sigtype -> TRI .)
    DELAY           reduce using rule 40 (sigtype -> TRI .)


state 90

    (370) task -> TASK . ID SEMICOLON task_statement ENDTASK

    ID              shift and go to state 240


state 91

    (37) sigtype -> INPUT .

    LBRACKET        reduce using rule 37 (sigtype -> INPUT .)
    ID              reduce using rule 37 (sigtype -> INPUT .)
    INPUT           reduce using rule 37 (sigtype -> INPUT .)
    OUTPUT          reduce using rule 37 (sigtype -> INPUT .)
    INOUT           reduce using rule 37 (sigtype -> INPUT .)
    TRI             reduce using rule 37 (sigtype -> INPUT .)
    REG             reduce using rule 37 (sigtype -> INPUT .)
    WIRE            reduce using rule 37 (sigtype -> INPUT .)
    SIGNED          reduce using rule 37 (sigtype -> INPUT .)
    SUPPLY0         reduce using rule 37 (sigtype -> INPUT .)
    SUPPLY1         reduce using rule 37 (sigtype -> INPUT .)
    DELAY           reduce using rule 37 (sigtype -> INPUT .)


state 92

    (290) instance -> ID . parameterlist instance_bodylist SEMICOLON
    (296) instance -> ID . instance_bodylist_noname SEMICOLON
    (301) parameterlist -> . DELAY LPAREN param_args RPAREN
    (302) parameterlist -> . DELAY LPAREN param_args_noname RPAREN
    (303) parameterlist -> . empty
    (298) instance_bodylist_noname -> . instance_bodylist_noname COMMA instance_body_noname
    (299) instance_bodylist_noname -> . instance_body_noname
    (393) empty -> .
    (300) instance_body_noname -> . LPAREN instance_ports RPAREN

    DELAY           shift and go to state 246
    ID              reduce using rule 393 (empty -> .)
    LPAREN          shift and go to state 243

    instance_bodylist_noname       shift and go to state 241
    parameterlist                  shift and go to state 242
    empty                          shift and go to state 245
    instance_body_noname           shift and go to state 244

state 93

    (351) function -> FUNCTION . width ID SEMICOLON function_statement ENDFUNCTION
    (352) function -> FUNCTION . ID SEMICOLON function_statement ENDFUNCTION
    (53) width -> . LBRACKET expression COLON expression RBRACKET

    ID              shift and go to state 248
    LBRACKET        shift and go to state 205

    width                          shift and go to state 247

state 94

    (59) item -> generate .

    ENDMODULE       reduce using rule 59 (item -> generate .)
    GENERATE        reduce using rule 59 (item -> generate .)
    INTEGER         reduce using rule 59 (item -> generate .)
    REAL            reduce using rule 59 (item -> generate .)
    PARAMETER       reduce using rule 59 (item -> generate .)
    LOCALPARAM      reduce using rule 59 (item -> generate .)
    GENVAR          reduce using rule 59 (item -> generate .)
    ASSIGN          reduce using rule 59 (item -> generate .)
    ALWAYS          reduce using rule 59 (item -> generate .)
    INITIAL         reduce using rule 59 (item -> generate .)
    ID              reduce using rule 59 (item -> generate .)
    SENS_OR         reduce using rule 59 (item -> generate .)
    FUNCTION        reduce using rule 59 (item -> generate .)
    TASK            reduce using rule 59 (item -> generate .)
    LPAREN          reduce using rule 59 (item -> generate .)
    INPUT           reduce using rule 59 (item -> generate .)
    OUTPUT          reduce using rule 59 (item -> generate .)
    INOUT           reduce using rule 59 (item -> generate .)
    TRI             reduce using rule 59 (item -> generate .)
    REG             reduce using rule 59 (item -> generate .)
    WIRE            reduce using rule 59 (item -> generate .)
    SIGNED          reduce using rule 59 (item -> generate .)
    SUPPLY0         reduce using rule 59 (item -> generate .)
    SUPPLY1         reduce using rule 59 (item -> generate .)


state 95

    (72) standard_item -> task .

    ELSE            reduce using rule 72 (standard_item -> task .)
    ENDGENERATE     reduce using rule 72 (standard_item -> task .)
    IF              reduce using rule 72 (standard_item -> task .)
    FOR             reduce using rule 72 (standard_item -> task .)
    INTEGER         reduce using rule 72 (standard_item -> task .)
    REAL            reduce using rule 72 (standard_item -> task .)
    PARAMETER       reduce using rule 72 (standard_item -> task .)
    LOCALPARAM      reduce using rule 72 (standard_item -> task .)
    GENVAR          reduce using rule 72 (standard_item -> task .)
    ASSIGN          reduce using rule 72 (standard_item -> task .)
    ALWAYS          reduce using rule 72 (standard_item -> task .)
    INITIAL         reduce using rule 72 (standard_item -> task .)
    ID              reduce using rule 72 (standard_item -> task .)
    SENS_OR         reduce using rule 72 (standard_item -> task .)
    FUNCTION        reduce using rule 72 (standard_item -> task .)
    TASK            reduce using rule 72 (standard_item -> task .)
    LPAREN          reduce using rule 72 (standard_item -> task .)
    INPUT           reduce using rule 72 (standard_item -> task .)
    OUTPUT          reduce using rule 72 (standard_item -> task .)
    INOUT           reduce using rule 72 (standard_item -> task .)
    TRI             reduce using rule 72 (standard_item -> task .)
    REG             reduce using rule 72 (standard_item -> task .)
    WIRE            reduce using rule 72 (standard_item -> task .)
    SIGNED          reduce using rule 72 (standard_item -> task .)
    SUPPLY0         reduce using rule 72 (standard_item -> task .)
    SUPPLY1         reduce using rule 72 (standard_item -> task .)
    END             reduce using rule 72 (standard_item -> task .)
    ENDMODULE       reduce using rule 72 (standard_item -> task .)
    GENERATE        reduce using rule 72 (standard_item -> task .)


state 96

    (38) sigtype -> OUTPUT .

    LBRACKET        reduce using rule 38 (sigtype -> OUTPUT .)
    ID              reduce using rule 38 (sigtype -> OUTPUT .)
    INPUT           reduce using rule 38 (sigtype -> OUTPUT .)
    OUTPUT          reduce using rule 38 (sigtype -> OUTPUT .)
    INOUT           reduce using rule 38 (sigtype -> OUTPUT .)
    TRI             reduce using rule 38 (sigtype -> OUTPUT .)
    REG             reduce using rule 38 (sigtype -> OUTPUT .)
    WIRE            reduce using rule 38 (sigtype -> OUTPUT .)
    SIGNED          reduce using rule 38 (sigtype -> OUTPUT .)
    SUPPLY0         reduce using rule 38 (sigtype -> OUTPUT .)
    SUPPLY1         reduce using rule 38 (sigtype -> OUTPUT .)
    DELAY           reduce using rule 38 (sigtype -> OUTPUT .)


state 97

    (68) standard_item -> always .

    ELSE            reduce using rule 68 (standard_item -> always .)
    ENDGENERATE     reduce using rule 68 (standard_item -> always .)
    IF              reduce using rule 68 (standard_item -> always .)
    FOR             reduce using rule 68 (standard_item -> always .)
    INTEGER         reduce using rule 68 (standard_item -> always .)
    REAL            reduce using rule 68 (standard_item -> always .)
    PARAMETER       reduce using rule 68 (standard_item -> always .)
    LOCALPARAM      reduce using rule 68 (standard_item -> always .)
    GENVAR          reduce using rule 68 (standard_item -> always .)
    ASSIGN          reduce using rule 68 (standard_item -> always .)
    ALWAYS          reduce using rule 68 (standard_item -> always .)
    INITIAL         reduce using rule 68 (standard_item -> always .)
    ID              reduce using rule 68 (standard_item -> always .)
    SENS_OR         reduce using rule 68 (standard_item -> always .)
    FUNCTION        reduce using rule 68 (standard_item -> always .)
    TASK            reduce using rule 68 (standard_item -> always .)
    LPAREN          reduce using rule 68 (standard_item -> always .)
    INPUT           reduce using rule 68 (standard_item -> always .)
    OUTPUT          reduce using rule 68 (standard_item -> always .)
    INOUT           reduce using rule 68 (standard_item -> always .)
    TRI             reduce using rule 68 (standard_item -> always .)
    REG             reduce using rule 68 (standard_item -> always .)
    WIRE            reduce using rule 68 (standard_item -> always .)
    SIGNED          reduce using rule 68 (standard_item -> always .)
    SUPPLY0         reduce using rule 68 (standard_item -> always .)
    SUPPLY1         reduce using rule 68 (standard_item -> always .)
    END             reduce using rule 68 (standard_item -> always .)
    ENDMODULE       reduce using rule 68 (standard_item -> always .)
    GENERATE        reduce using rule 68 (standard_item -> always .)


state 98

    (43) sigtype -> SIGNED .

    LBRACKET        reduce using rule 43 (sigtype -> SIGNED .)
    ID              reduce using rule 43 (sigtype -> SIGNED .)
    INPUT           reduce using rule 43 (sigtype -> SIGNED .)
    OUTPUT          reduce using rule 43 (sigtype -> SIGNED .)
    INOUT           reduce using rule 43 (sigtype -> SIGNED .)
    TRI             reduce using rule 43 (sigtype -> SIGNED .)
    REG             reduce using rule 43 (sigtype -> SIGNED .)
    WIRE            reduce using rule 43 (sigtype -> SIGNED .)
    SIGNED          reduce using rule 43 (sigtype -> SIGNED .)
    SUPPLY0         reduce using rule 43 (sigtype -> SIGNED .)
    SUPPLY1         reduce using rule 43 (sigtype -> SIGNED .)
    DELAY           reduce using rule 43 (sigtype -> SIGNED .)


state 99

    (291) instance -> SENS_OR . parameterlist instance_bodylist SEMICOLON
    (297) instance -> SENS_OR . instance_bodylist_noname SEMICOLON
    (301) parameterlist -> . DELAY LPAREN param_args RPAREN
    (302) parameterlist -> . DELAY LPAREN param_args_noname RPAREN
    (303) parameterlist -> . empty
    (298) instance_bodylist_noname -> . instance_bodylist_noname COMMA instance_body_noname
    (299) instance_bodylist_noname -> . instance_body_noname
    (393) empty -> .
    (300) instance_body_noname -> . LPAREN instance_ports RPAREN

    DELAY           shift and go to state 246
    ID              reduce using rule 393 (empty -> .)
    LPAREN          shift and go to state 243

    instance_bodylist_noname       shift and go to state 250
    parameterlist                  shift and go to state 249
    empty                          shift and go to state 245
    instance_body_noname           shift and go to state 244

state 100

    (56) items -> item .

    ENDMODULE       reduce using rule 56 (items -> item .)
    GENERATE        reduce using rule 56 (items -> item .)
    INTEGER         reduce using rule 56 (items -> item .)
    REAL            reduce using rule 56 (items -> item .)
    PARAMETER       reduce using rule 56 (items -> item .)
    LOCALPARAM      reduce using rule 56 (items -> item .)
    GENVAR          reduce using rule 56 (items -> item .)
    ASSIGN          reduce using rule 56 (items -> item .)
    ALWAYS          reduce using rule 56 (items -> item .)
    INITIAL         reduce using rule 56 (items -> item .)
    ID              reduce using rule 56 (items -> item .)
    SENS_OR         reduce using rule 56 (items -> item .)
    FUNCTION        reduce using rule 56 (items -> item .)
    TASK            reduce using rule 56 (items -> item .)
    LPAREN          reduce using rule 56 (items -> item .)
    INPUT           reduce using rule 56 (items -> item .)
    OUTPUT          reduce using rule 56 (items -> item .)
    INOUT           reduce using rule 56 (items -> item .)
    TRI             reduce using rule 56 (items -> item .)
    REG             reduce using rule 56 (items -> item .)
    WIRE            reduce using rule 56 (items -> item .)
    SIGNED          reduce using rule 56 (items -> item .)
    SUPPLY0         reduce using rule 56 (items -> item .)
    SUPPLY1         reduce using rule 56 (items -> item .)


state 101

    (98) localparamdecl -> LOCALPARAM . param_substitution_list SEMICOLON
    (99) localparamdecl -> LOCALPARAM . SIGNED param_substitution_list SEMICOLON
    (100) localparamdecl -> LOCALPARAM . width param_substitution_list SEMICOLON
    (101) localparamdecl -> LOCALPARAM . SIGNED width param_substitution_list SEMICOLON
    (102) localparamdecl -> LOCALPARAM . INTEGER param_substitution_list SEMICOLON
    (103) param_substitution_list -> . param_substitution_list COMMA param_substitution
    (104) param_substitution_list -> . param_substitution
    (53) width -> . LBRACKET expression COLON expression RBRACKET
    (105) param_substitution -> . ID EQUALS rvalue

    SIGNED          shift and go to state 251
    INTEGER         shift and go to state 254
    LBRACKET        shift and go to state 205
    ID              shift and go to state 209

    width                          shift and go to state 252
    param_substitution             shift and go to state 210
    param_substitution_list        shift and go to state 253

state 102

    (73) standard_item -> pragma .

    ELSE            reduce using rule 73 (standard_item -> pragma .)
    ENDGENERATE     reduce using rule 73 (standard_item -> pragma .)
    IF              reduce using rule 73 (standard_item -> pragma .)
    FOR             reduce using rule 73 (standard_item -> pragma .)
    INTEGER         reduce using rule 73 (standard_item -> pragma .)
    REAL            reduce using rule 73 (standard_item -> pragma .)
    PARAMETER       reduce using rule 73 (standard_item -> pragma .)
    LOCALPARAM      reduce using rule 73 (standard_item -> pragma .)
    GENVAR          reduce using rule 73 (standard_item -> pragma .)
    ASSIGN          reduce using rule 73 (standard_item -> pragma .)
    ALWAYS          reduce using rule 73 (standard_item -> pragma .)
    INITIAL         reduce using rule 73 (standard_item -> pragma .)
    ID              reduce using rule 73 (standard_item -> pragma .)
    SENS_OR         reduce using rule 73 (standard_item -> pragma .)
    FUNCTION        reduce using rule 73 (standard_item -> pragma .)
    TASK            reduce using rule 73 (standard_item -> pragma .)
    LPAREN          reduce using rule 73 (standard_item -> pragma .)
    INPUT           reduce using rule 73 (standard_item -> pragma .)
    OUTPUT          reduce using rule 73 (standard_item -> pragma .)
    INOUT           reduce using rule 73 (standard_item -> pragma .)
    TRI             reduce using rule 73 (standard_item -> pragma .)
    REG             reduce using rule 73 (standard_item -> pragma .)
    WIRE            reduce using rule 73 (standard_item -> pragma .)
    SIGNED          reduce using rule 73 (standard_item -> pragma .)
    SUPPLY0         reduce using rule 73 (standard_item -> pragma .)
    SUPPLY1         reduce using rule 73 (standard_item -> pragma .)
    END             reduce using rule 73 (standard_item -> pragma .)
    ENDMODULE       reduce using rule 73 (standard_item -> pragma .)
    GENERATE        reduce using rule 73 (standard_item -> pragma .)


state 103

    (9) moduledef -> MODULE modulename paramlist portlist items . ENDMODULE
    (55) items -> items . item
    (58) item -> . standard_item
    (59) item -> . generate
    (60) standard_item -> . decl
    (61) standard_item -> . integerdecl
    (62) standard_item -> . realdecl
    (63) standard_item -> . declassign
    (64) standard_item -> . parameterdecl
    (65) standard_item -> . localparamdecl
    (66) standard_item -> . genvardecl
    (67) standard_item -> . assignment
    (68) standard_item -> . always
    (69) standard_item -> . initial
    (70) standard_item -> . instance
    (71) standard_item -> . function
    (72) standard_item -> . task
    (73) standard_item -> . pragma
    (326) generate -> . GENERATE generate_items ENDGENERATE
    (74) decl -> . sigtypes declnamelist SEMICOLON
    (75) decl -> . sigtypes width declnamelist SEMICOLON
    (84) integerdecl -> . INTEGER integernamelist SEMICOLON
    (85) integerdecl -> . INTEGER SIGNED integernamelist SEMICOLON
    (89) realdecl -> . REAL realnamelist SEMICOLON
    (80) declassign -> . sigtypes declassign_element SEMICOLON
    (81) declassign -> . sigtypes width declassign_element SEMICOLON
    (93) parameterdecl -> . PARAMETER param_substitution_list SEMICOLON
    (94) parameterdecl -> . PARAMETER SIGNED param_substitution_list SEMICOLON
    (95) parameterdecl -> . PARAMETER width param_substitution_list SEMICOLON
    (96) parameterdecl -> . PARAMETER SIGNED width param_substitution_list SEMICOLON
    (97) parameterdecl -> . PARAMETER INTEGER param_substitution_list SEMICOLON
    (98) localparamdecl -> . LOCALPARAM param_substitution_list SEMICOLON
    (99) localparamdecl -> . LOCALPARAM SIGNED param_substitution_list SEMICOLON
    (100) localparamdecl -> . LOCALPARAM width param_substitution_list SEMICOLON
    (101) localparamdecl -> . LOCALPARAM SIGNED width param_substitution_list SEMICOLON
    (102) localparamdecl -> . LOCALPARAM INTEGER param_substitution_list SEMICOLON
    (322) genvardecl -> . GENVAR genvarlist SEMICOLON
    (106) assignment -> . ASSIGN lvalue EQUALS rvalue SEMICOLON
    (107) assignment -> . ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON
    (196) always -> . ALWAYS senslist always_statement
    (283) initial -> . INITIAL initial_statement
    (290) instance -> . ID parameterlist instance_bodylist SEMICOLON
    (291) instance -> . SENS_OR parameterlist instance_bodylist SEMICOLON
    (296) instance -> . ID instance_bodylist_noname SEMICOLON
    (297) instance -> . SENS_OR instance_bodylist_noname SEMICOLON
    (351) function -> . FUNCTION width ID SEMICOLON function_statement ENDFUNCTION
    (352) function -> . FUNCTION ID SEMICOLON function_statement ENDFUNCTION
    (370) task -> . TASK ID SEMICOLON task_statement ENDTASK
    (7) pragma -> . LPAREN TIMES ID EQUALS expression TIMES RPAREN
    (8) pragma -> . LPAREN TIMES ID TIMES RPAREN
    (35) sigtypes -> . sigtypes sigtype
    (36) sigtypes -> . sigtype
    (37) sigtype -> . INPUT
    (38) sigtype -> . OUTPUT
    (39) sigtype -> . INOUT
    (40) sigtype -> . TRI
    (41) sigtype -> . REG
    (42) sigtype -> . WIRE
    (43) sigtype -> . SIGNED
    (44) sigtype -> . SUPPLY0
    (45) sigtype -> . SUPPLY1

    ENDMODULE       shift and go to state 255
    GENERATE        shift and go to state 77
    INTEGER         shift and go to state 83
    REAL            shift and go to state 63
    PARAMETER       shift and go to state 70
    LOCALPARAM      shift and go to state 101
    GENVAR          shift and go to state 69
    ASSIGN          shift and go to state 85
    ALWAYS          shift and go to state 68
    INITIAL         shift and go to state 66
    ID              shift and go to state 92
    SENS_OR         shift and go to state 99
    FUNCTION        shift and go to state 93
    TASK            shift and go to state 90
    LPAREN          shift and go to state 2
    INPUT           shift and go to state 91
    OUTPUT          shift and go to state 96
    INOUT           shift and go to state 72
    TRI             shift and go to state 89
    REG             shift and go to state 67
    WIRE            shift and go to state 104
    SIGNED          shift and go to state 98
    SUPPLY0         shift and go to state 79
    SUPPLY1         shift and go to state 80

    decl                           shift and go to state 62
    localparamdecl                 shift and go to state 64
    declassign                     shift and go to state 65
    integerdecl                    shift and go to state 71
    standard_item                  shift and go to state 73
    genvardecl                     shift and go to state 74
    sigtype                        shift and go to state 75
    initial                        shift and go to state 76
    instance                       shift and go to state 78
    sigtypes                       shift and go to state 88
    assignment                     shift and go to state 81
    realdecl                       shift and go to state 82
    function                       shift and go to state 87
    parameterdecl                  shift and go to state 84
    pragma                         shift and go to state 102
    generate                       shift and go to state 94
    task                           shift and go to state 95
    always                         shift and go to state 97
    item                           shift and go to state 256

state 104

    (42) sigtype -> WIRE .

    LBRACKET        reduce using rule 42 (sigtype -> WIRE .)
    ID              reduce using rule 42 (sigtype -> WIRE .)
    INPUT           reduce using rule 42 (sigtype -> WIRE .)
    OUTPUT          reduce using rule 42 (sigtype -> WIRE .)
    INOUT           reduce using rule 42 (sigtype -> WIRE .)
    TRI             reduce using rule 42 (sigtype -> WIRE .)
    REG             reduce using rule 42 (sigtype -> WIRE .)
    WIRE            reduce using rule 42 (sigtype -> WIRE .)
    SIGNED          reduce using rule 42 (sigtype -> WIRE .)
    SUPPLY0         reduce using rule 42 (sigtype -> WIRE .)
    SUPPLY1         reduce using rule 42 (sigtype -> WIRE .)
    DELAY           reduce using rule 42 (sigtype -> WIRE .)


state 105

    (47) ioports -> ioport_head .

    RPAREN          reduce using rule 47 (ioports -> ioport_head .)
    COMMA           reduce using rule 47 (ioports -> ioport_head .)


state 106

    (29) portlist -> LPAREN ioports . RPAREN SEMICOLON
    (46) ioports -> ioports . COMMA ioport

    RPAREN          shift and go to state 257
    COMMA           shift and go to state 258


state 107

    (30) portlist -> LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 259


state 108

    (50) ioport_head -> sigtypes . portname
    (51) ioport_head -> sigtypes . width portname
    (35) sigtypes -> sigtypes . sigtype
    (34) portname -> . ID
    (53) width -> . LBRACKET expression COLON expression RBRACKET
    (37) sigtype -> . INPUT
    (38) sigtype -> . OUTPUT
    (39) sigtype -> . INOUT
    (40) sigtype -> . TRI
    (41) sigtype -> . REG
    (42) sigtype -> . WIRE
    (43) sigtype -> . SIGNED
    (44) sigtype -> . SUPPLY0
    (45) sigtype -> . SUPPLY1

    ID              shift and go to state 109
    LBRACKET        shift and go to state 205
    INPUT           shift and go to state 91
    OUTPUT          shift and go to state 96
    INOUT           shift and go to state 72
    TRI             shift and go to state 89
    REG             shift and go to state 67
    WIRE            shift and go to state 104
    SIGNED          shift and go to state 98
    SUPPLY0         shift and go to state 79
    SUPPLY1         shift and go to state 80

    portname                       shift and go to state 261
    width                          shift and go to state 260
    sigtype                        shift and go to state 234

state 109

    (34) portname -> ID .

    RPAREN          reduce using rule 34 (portname -> ID .)
    COMMA           reduce using rule 34 (portname -> ID .)


state 110

    (33) ports -> portname .

    RPAREN          reduce using rule 33 (ports -> portname .)
    COMMA           reduce using rule 33 (ports -> portname .)


state 111

    (28) portlist -> LPAREN ports . RPAREN SEMICOLON
    (32) ports -> ports . COMMA portname

    RPAREN          shift and go to state 262
    COMMA           shift and go to state 263


state 112

    (14) params -> params_begin . param_end
    (15) params_begin -> params_begin . param
    (23) param_end -> . PARAMETER param_substitution_list
    (24) param_end -> . PARAMETER SIGNED param_substitution_list
    (25) param_end -> . PARAMETER width param_substitution_list
    (26) param_end -> . PARAMETER SIGNED width param_substitution_list
    (27) param_end -> . PARAMETER INTEGER param_substitution_list
    (18) param -> . PARAMETER param_substitution_list COMMA
    (19) param -> . PARAMETER SIGNED param_substitution_list COMMA
    (20) param -> . PARAMETER width param_substitution_list COMMA
    (21) param -> . PARAMETER SIGNED width param_substitution_list COMMA
    (22) param -> . PARAMETER INTEGER param_substitution_list COMMA

    PARAMETER       shift and go to state 116

    param_end                      shift and go to state 264
    param                          shift and go to state 265

state 113

    (16) params_begin -> param .

    PARAMETER       reduce using rule 16 (params_begin -> param .)


state 114

    (17) params -> param_end .

    RPAREN          reduce using rule 17 (params -> param_end .)


state 115

    (12) paramlist -> DELAY LPAREN params . RPAREN

    RPAREN          shift and go to state 266


state 116

    (23) param_end -> PARAMETER . param_substitution_list
    (24) param_end -> PARAMETER . SIGNED param_substitution_list
    (25) param_end -> PARAMETER . width param_substitution_list
    (26) param_end -> PARAMETER . SIGNED width param_substitution_list
    (27) param_end -> PARAMETER . INTEGER param_substitution_list
    (18) param -> PARAMETER . param_substitution_list COMMA
    (19) param -> PARAMETER . SIGNED param_substitution_list COMMA
    (20) param -> PARAMETER . width param_substitution_list COMMA
    (21) param -> PARAMETER . SIGNED width param_substitution_list COMMA
    (22) param -> PARAMETER . INTEGER param_substitution_list COMMA
    (103) param_substitution_list -> . param_substitution_list COMMA param_substitution
    (104) param_substitution_list -> . param_substitution
    (53) width -> . LBRACKET expression COLON expression RBRACKET
    (105) param_substitution -> . ID EQUALS rvalue

    SIGNED          shift and go to state 267
    INTEGER         shift and go to state 270
    LBRACKET        shift and go to state 205
    ID              shift and go to state 209

    width                          shift and go to state 268
    param_substitution             shift and go to state 210
    param_substitution_list        shift and go to state 269

state 117

    (129) expression -> LNOT expression .
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RBRACKET        reduce using rule 129 (expression -> LNOT expression .)
    POWER           reduce using rule 129 (expression -> LNOT expression .)
    TIMES           reduce using rule 129 (expression -> LNOT expression .)
    DIVIDE          reduce using rule 129 (expression -> LNOT expression .)
    MOD             reduce using rule 129 (expression -> LNOT expression .)
    PLUS            reduce using rule 129 (expression -> LNOT expression .)
    MINUS           reduce using rule 129 (expression -> LNOT expression .)
    LSHIFT          reduce using rule 129 (expression -> LNOT expression .)
    RSHIFT          reduce using rule 129 (expression -> LNOT expression .)
    LSHIFTA         reduce using rule 129 (expression -> LNOT expression .)
    RSHIFTA         reduce using rule 129 (expression -> LNOT expression .)
    LT              reduce using rule 129 (expression -> LNOT expression .)
    GT              reduce using rule 129 (expression -> LNOT expression .)
    LE              reduce using rule 129 (expression -> LNOT expression .)
    GE              reduce using rule 129 (expression -> LNOT expression .)
    EQ              reduce using rule 129 (expression -> LNOT expression .)
    NE              reduce using rule 129 (expression -> LNOT expression .)
    EQL             reduce using rule 129 (expression -> LNOT expression .)
    NEL             reduce using rule 129 (expression -> LNOT expression .)
    AND             reduce using rule 129 (expression -> LNOT expression .)
    XOR             reduce using rule 129 (expression -> LNOT expression .)
    XNOR            reduce using rule 129 (expression -> LNOT expression .)
    OR              reduce using rule 129 (expression -> LNOT expression .)
    LAND            reduce using rule 129 (expression -> LNOT expression .)
    LOR             reduce using rule 129 (expression -> LNOT expression .)
    COND            reduce using rule 129 (expression -> LNOT expression .)
    RPAREN          reduce using rule 129 (expression -> LNOT expression .)
    COLON           reduce using rule 129 (expression -> LNOT expression .)
    PLUSCOLON       reduce using rule 129 (expression -> LNOT expression .)
    MINUSCOLON      reduce using rule 129 (expression -> LNOT expression .)
    SEMICOLON       reduce using rule 129 (expression -> LNOT expression .)
    LBRACE          reduce using rule 129 (expression -> LNOT expression .)
    RBRACE          reduce using rule 129 (expression -> LNOT expression .)
    COMMA           reduce using rule 129 (expression -> LNOT expression .)

  ! POWER           [ shift and go to state 143 ]
  ! TIMES           [ shift and go to state 271 ]
  ! DIVIDE          [ shift and go to state 151 ]
  ! MOD             [ shift and go to state 160 ]
  ! PLUS            [ shift and go to state 146 ]
  ! MINUS           [ shift and go to state 141 ]
  ! LSHIFT          [ shift and go to state 140 ]
  ! RSHIFT          [ shift and go to state 137 ]
  ! LSHIFTA         [ shift and go to state 158 ]
  ! RSHIFTA         [ shift and go to state 147 ]
  ! LT              [ shift and go to state 145 ]
  ! GT              [ shift and go to state 149 ]
  ! LE              [ shift and go to state 142 ]
  ! GE              [ shift and go to state 153 ]
  ! EQ              [ shift and go to state 156 ]
  ! NE              [ shift and go to state 144 ]
  ! EQL             [ shift and go to state 155 ]
  ! NEL             [ shift and go to state 136 ]
  ! AND             [ shift and go to state 157 ]
  ! XOR             [ shift and go to state 150 ]
  ! XNOR            [ shift and go to state 148 ]
  ! OR              [ shift and go to state 159 ]
  ! LAND            [ shift and go to state 154 ]
  ! LOR             [ shift and go to state 138 ]
  ! COND            [ shift and go to state 139 ]


state 118

    (178) partselect -> pointer LBRACKET . expression COLON expression RBRACKET
    (179) partselect -> pointer LBRACKET . expression PLUSCOLON expression RBRACKET
    (180) partselect -> pointer LBRACKET . expression MINUSCOLON expression RBRACKET
    (182) pointer -> pointer LBRACKET . expression RBRACKET
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    pointer                        shift and go to state 31
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    expression                     shift and go to state 272
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 119

    (388) scope -> pointer DOT .

    ID              reduce using rule 388 (scope -> pointer DOT .)


state 120

    (127) expression -> MINUS expression .
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RBRACKET        reduce using rule 127 (expression -> MINUS expression .)
    POWER           reduce using rule 127 (expression -> MINUS expression .)
    TIMES           reduce using rule 127 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 127 (expression -> MINUS expression .)
    MOD             reduce using rule 127 (expression -> MINUS expression .)
    PLUS            reduce using rule 127 (expression -> MINUS expression .)
    MINUS           reduce using rule 127 (expression -> MINUS expression .)
    LSHIFT          reduce using rule 127 (expression -> MINUS expression .)
    RSHIFT          reduce using rule 127 (expression -> MINUS expression .)
    LSHIFTA         reduce using rule 127 (expression -> MINUS expression .)
    RSHIFTA         reduce using rule 127 (expression -> MINUS expression .)
    LT              reduce using rule 127 (expression -> MINUS expression .)
    GT              reduce using rule 127 (expression -> MINUS expression .)
    LE              reduce using rule 127 (expression -> MINUS expression .)
    GE              reduce using rule 127 (expression -> MINUS expression .)
    EQ              reduce using rule 127 (expression -> MINUS expression .)
    NE              reduce using rule 127 (expression -> MINUS expression .)
    EQL             reduce using rule 127 (expression -> MINUS expression .)
    NEL             reduce using rule 127 (expression -> MINUS expression .)
    AND             reduce using rule 127 (expression -> MINUS expression .)
    XOR             reduce using rule 127 (expression -> MINUS expression .)
    XNOR            reduce using rule 127 (expression -> MINUS expression .)
    OR              reduce using rule 127 (expression -> MINUS expression .)
    LAND            reduce using rule 127 (expression -> MINUS expression .)
    LOR             reduce using rule 127 (expression -> MINUS expression .)
    COND            reduce using rule 127 (expression -> MINUS expression .)
    RPAREN          reduce using rule 127 (expression -> MINUS expression .)
    COLON           reduce using rule 127 (expression -> MINUS expression .)
    PLUSCOLON       reduce using rule 127 (expression -> MINUS expression .)
    MINUSCOLON      reduce using rule 127 (expression -> MINUS expression .)
    SEMICOLON       reduce using rule 127 (expression -> MINUS expression .)
    LBRACE          reduce using rule 127 (expression -> MINUS expression .)
    RBRACE          reduce using rule 127 (expression -> MINUS expression .)
    COMMA           reduce using rule 127 (expression -> MINUS expression .)

  ! POWER           [ shift and go to state 143 ]
  ! TIMES           [ shift and go to state 271 ]
  ! DIVIDE          [ shift and go to state 151 ]
  ! MOD             [ shift and go to state 160 ]
  ! PLUS            [ shift and go to state 146 ]
  ! MINUS           [ shift and go to state 141 ]
  ! LSHIFT          [ shift and go to state 140 ]
  ! RSHIFT          [ shift and go to state 137 ]
  ! LSHIFTA         [ shift and go to state 158 ]
  ! RSHIFTA         [ shift and go to state 147 ]
  ! LT              [ shift and go to state 145 ]
  ! GT              [ shift and go to state 149 ]
  ! LE              [ shift and go to state 142 ]
  ! GE              [ shift and go to state 153 ]
  ! EQ              [ shift and go to state 156 ]
  ! NE              [ shift and go to state 144 ]
  ! EQL             [ shift and go to state 155 ]
  ! NEL             [ shift and go to state 136 ]
  ! AND             [ shift and go to state 157 ]
  ! XOR             [ shift and go to state 150 ]
  ! XNOR            [ shift and go to state 148 ]
  ! OR              [ shift and go to state 159 ]
  ! LAND            [ shift and go to state 154 ]
  ! LOR             [ shift and go to state 138 ]
  ! COND            [ shift and go to state 139 ]


state 121

    (132) expression -> NAND expression .
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RBRACKET        reduce using rule 132 (expression -> NAND expression .)
    POWER           reduce using rule 132 (expression -> NAND expression .)
    TIMES           reduce using rule 132 (expression -> NAND expression .)
    DIVIDE          reduce using rule 132 (expression -> NAND expression .)
    MOD             reduce using rule 132 (expression -> NAND expression .)
    PLUS            reduce using rule 132 (expression -> NAND expression .)
    MINUS           reduce using rule 132 (expression -> NAND expression .)
    LSHIFT          reduce using rule 132 (expression -> NAND expression .)
    RSHIFT          reduce using rule 132 (expression -> NAND expression .)
    LSHIFTA         reduce using rule 132 (expression -> NAND expression .)
    RSHIFTA         reduce using rule 132 (expression -> NAND expression .)
    LT              reduce using rule 132 (expression -> NAND expression .)
    GT              reduce using rule 132 (expression -> NAND expression .)
    LE              reduce using rule 132 (expression -> NAND expression .)
    GE              reduce using rule 132 (expression -> NAND expression .)
    EQ              reduce using rule 132 (expression -> NAND expression .)
    NE              reduce using rule 132 (expression -> NAND expression .)
    EQL             reduce using rule 132 (expression -> NAND expression .)
    NEL             reduce using rule 132 (expression -> NAND expression .)
    AND             reduce using rule 132 (expression -> NAND expression .)
    XOR             reduce using rule 132 (expression -> NAND expression .)
    XNOR            reduce using rule 132 (expression -> NAND expression .)
    OR              reduce using rule 132 (expression -> NAND expression .)
    LAND            reduce using rule 132 (expression -> NAND expression .)
    LOR             reduce using rule 132 (expression -> NAND expression .)
    COND            reduce using rule 132 (expression -> NAND expression .)
    RPAREN          reduce using rule 132 (expression -> NAND expression .)
    COLON           reduce using rule 132 (expression -> NAND expression .)
    PLUSCOLON       reduce using rule 132 (expression -> NAND expression .)
    MINUSCOLON      reduce using rule 132 (expression -> NAND expression .)
    SEMICOLON       reduce using rule 132 (expression -> NAND expression .)
    LBRACE          reduce using rule 132 (expression -> NAND expression .)
    RBRACE          reduce using rule 132 (expression -> NAND expression .)
    COMMA           reduce using rule 132 (expression -> NAND expression .)

  ! POWER           [ shift and go to state 143 ]
  ! TIMES           [ shift and go to state 271 ]
  ! DIVIDE          [ shift and go to state 151 ]
  ! MOD             [ shift and go to state 160 ]
  ! PLUS            [ shift and go to state 146 ]
  ! MINUS           [ shift and go to state 141 ]
  ! LSHIFT          [ shift and go to state 140 ]
  ! RSHIFT          [ shift and go to state 137 ]
  ! LSHIFTA         [ shift and go to state 158 ]
  ! RSHIFTA         [ shift and go to state 147 ]
  ! LT              [ shift and go to state 145 ]
  ! GT              [ shift and go to state 149 ]
  ! LE              [ shift and go to state 142 ]
  ! GE              [ shift and go to state 153 ]
  ! EQ              [ shift and go to state 156 ]
  ! NE              [ shift and go to state 144 ]
  ! EQL             [ shift and go to state 155 ]
  ! NEL             [ shift and go to state 136 ]
  ! AND             [ shift and go to state 157 ]
  ! XOR             [ shift and go to state 150 ]
  ! XNOR            [ shift and go to state 148 ]
  ! OR              [ shift and go to state 159 ]
  ! LAND            [ shift and go to state 154 ]
  ! LOR             [ shift and go to state 138 ]
  ! COND            [ shift and go to state 139 ]


state 122

    (128) expression -> PLUS expression .
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RBRACKET        reduce using rule 128 (expression -> PLUS expression .)
    POWER           reduce using rule 128 (expression -> PLUS expression .)
    TIMES           reduce using rule 128 (expression -> PLUS expression .)
    DIVIDE          reduce using rule 128 (expression -> PLUS expression .)
    MOD             reduce using rule 128 (expression -> PLUS expression .)
    PLUS            reduce using rule 128 (expression -> PLUS expression .)
    MINUS           reduce using rule 128 (expression -> PLUS expression .)
    LSHIFT          reduce using rule 128 (expression -> PLUS expression .)
    RSHIFT          reduce using rule 128 (expression -> PLUS expression .)
    LSHIFTA         reduce using rule 128 (expression -> PLUS expression .)
    RSHIFTA         reduce using rule 128 (expression -> PLUS expression .)
    LT              reduce using rule 128 (expression -> PLUS expression .)
    GT              reduce using rule 128 (expression -> PLUS expression .)
    LE              reduce using rule 128 (expression -> PLUS expression .)
    GE              reduce using rule 128 (expression -> PLUS expression .)
    EQ              reduce using rule 128 (expression -> PLUS expression .)
    NE              reduce using rule 128 (expression -> PLUS expression .)
    EQL             reduce using rule 128 (expression -> PLUS expression .)
    NEL             reduce using rule 128 (expression -> PLUS expression .)
    AND             reduce using rule 128 (expression -> PLUS expression .)
    XOR             reduce using rule 128 (expression -> PLUS expression .)
    XNOR            reduce using rule 128 (expression -> PLUS expression .)
    OR              reduce using rule 128 (expression -> PLUS expression .)
    LAND            reduce using rule 128 (expression -> PLUS expression .)
    LOR             reduce using rule 128 (expression -> PLUS expression .)
    COND            reduce using rule 128 (expression -> PLUS expression .)
    RPAREN          reduce using rule 128 (expression -> PLUS expression .)
    COLON           reduce using rule 128 (expression -> PLUS expression .)
    PLUSCOLON       reduce using rule 128 (expression -> PLUS expression .)
    MINUSCOLON      reduce using rule 128 (expression -> PLUS expression .)
    SEMICOLON       reduce using rule 128 (expression -> PLUS expression .)
    LBRACE          reduce using rule 128 (expression -> PLUS expression .)
    RBRACE          reduce using rule 128 (expression -> PLUS expression .)
    COMMA           reduce using rule 128 (expression -> PLUS expression .)

  ! POWER           [ shift and go to state 143 ]
  ! TIMES           [ shift and go to state 271 ]
  ! DIVIDE          [ shift and go to state 151 ]
  ! MOD             [ shift and go to state 160 ]
  ! PLUS            [ shift and go to state 146 ]
  ! MINUS           [ shift and go to state 141 ]
  ! LSHIFT          [ shift and go to state 140 ]
  ! RSHIFT          [ shift and go to state 137 ]
  ! LSHIFTA         [ shift and go to state 158 ]
  ! RSHIFTA         [ shift and go to state 147 ]
  ! LT              [ shift and go to state 145 ]
  ! GT              [ shift and go to state 149 ]
  ! LE              [ shift and go to state 142 ]
  ! GE              [ shift and go to state 153 ]
  ! EQ              [ shift and go to state 156 ]
  ! NE              [ shift and go to state 144 ]
  ! EQL             [ shift and go to state 155 ]
  ! NEL             [ shift and go to state 136 ]
  ! AND             [ shift and go to state 157 ]
  ! XOR             [ shift and go to state 150 ]
  ! XNOR            [ shift and go to state 148 ]
  ! OR              [ shift and go to state 159 ]
  ! LAND            [ shift and go to state 154 ]
  ! LOR             [ shift and go to state 138 ]
  ! COND            [ shift and go to state 139 ]


state 123

    (136) expression -> XNOR expression .
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RBRACKET        reduce using rule 136 (expression -> XNOR expression .)
    POWER           reduce using rule 136 (expression -> XNOR expression .)
    TIMES           reduce using rule 136 (expression -> XNOR expression .)
    DIVIDE          reduce using rule 136 (expression -> XNOR expression .)
    MOD             reduce using rule 136 (expression -> XNOR expression .)
    PLUS            reduce using rule 136 (expression -> XNOR expression .)
    MINUS           reduce using rule 136 (expression -> XNOR expression .)
    LSHIFT          reduce using rule 136 (expression -> XNOR expression .)
    RSHIFT          reduce using rule 136 (expression -> XNOR expression .)
    LSHIFTA         reduce using rule 136 (expression -> XNOR expression .)
    RSHIFTA         reduce using rule 136 (expression -> XNOR expression .)
    LT              reduce using rule 136 (expression -> XNOR expression .)
    GT              reduce using rule 136 (expression -> XNOR expression .)
    LE              reduce using rule 136 (expression -> XNOR expression .)
    GE              reduce using rule 136 (expression -> XNOR expression .)
    EQ              reduce using rule 136 (expression -> XNOR expression .)
    NE              reduce using rule 136 (expression -> XNOR expression .)
    EQL             reduce using rule 136 (expression -> XNOR expression .)
    NEL             reduce using rule 136 (expression -> XNOR expression .)
    AND             reduce using rule 136 (expression -> XNOR expression .)
    XOR             reduce using rule 136 (expression -> XNOR expression .)
    XNOR            reduce using rule 136 (expression -> XNOR expression .)
    OR              reduce using rule 136 (expression -> XNOR expression .)
    LAND            reduce using rule 136 (expression -> XNOR expression .)
    LOR             reduce using rule 136 (expression -> XNOR expression .)
    COND            reduce using rule 136 (expression -> XNOR expression .)
    RPAREN          reduce using rule 136 (expression -> XNOR expression .)
    COLON           reduce using rule 136 (expression -> XNOR expression .)
    PLUSCOLON       reduce using rule 136 (expression -> XNOR expression .)
    MINUSCOLON      reduce using rule 136 (expression -> XNOR expression .)
    SEMICOLON       reduce using rule 136 (expression -> XNOR expression .)
    LBRACE          reduce using rule 136 (expression -> XNOR expression .)
    RBRACE          reduce using rule 136 (expression -> XNOR expression .)
    COMMA           reduce using rule 136 (expression -> XNOR expression .)

  ! POWER           [ shift and go to state 143 ]
  ! TIMES           [ shift and go to state 271 ]
  ! DIVIDE          [ shift and go to state 151 ]
  ! MOD             [ shift and go to state 160 ]
  ! PLUS            [ shift and go to state 146 ]
  ! MINUS           [ shift and go to state 141 ]
  ! LSHIFT          [ shift and go to state 140 ]
  ! RSHIFT          [ shift and go to state 137 ]
  ! LSHIFTA         [ shift and go to state 158 ]
  ! RSHIFTA         [ shift and go to state 147 ]
  ! LT              [ shift and go to state 145 ]
  ! GT              [ shift and go to state 149 ]
  ! LE              [ shift and go to state 142 ]
  ! GE              [ shift and go to state 153 ]
  ! EQ              [ shift and go to state 156 ]
  ! NE              [ shift and go to state 144 ]
  ! EQL             [ shift and go to state 155 ]
  ! NEL             [ shift and go to state 136 ]
  ! AND             [ shift and go to state 157 ]
  ! XOR             [ shift and go to state 150 ]
  ! XNOR            [ shift and go to state 148 ]
  ! OR              [ shift and go to state 159 ]
  ! LAND            [ shift and go to state 154 ]
  ! LOR             [ shift and go to state 138 ]
  ! COND            [ shift and go to state 139 ]


state 124

    (135) expression -> XOR expression .
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RBRACKET        reduce using rule 135 (expression -> XOR expression .)
    POWER           reduce using rule 135 (expression -> XOR expression .)
    TIMES           reduce using rule 135 (expression -> XOR expression .)
    DIVIDE          reduce using rule 135 (expression -> XOR expression .)
    MOD             reduce using rule 135 (expression -> XOR expression .)
    PLUS            reduce using rule 135 (expression -> XOR expression .)
    MINUS           reduce using rule 135 (expression -> XOR expression .)
    LSHIFT          reduce using rule 135 (expression -> XOR expression .)
    RSHIFT          reduce using rule 135 (expression -> XOR expression .)
    LSHIFTA         reduce using rule 135 (expression -> XOR expression .)
    RSHIFTA         reduce using rule 135 (expression -> XOR expression .)
    LT              reduce using rule 135 (expression -> XOR expression .)
    GT              reduce using rule 135 (expression -> XOR expression .)
    LE              reduce using rule 135 (expression -> XOR expression .)
    GE              reduce using rule 135 (expression -> XOR expression .)
    EQ              reduce using rule 135 (expression -> XOR expression .)
    NE              reduce using rule 135 (expression -> XOR expression .)
    EQL             reduce using rule 135 (expression -> XOR expression .)
    NEL             reduce using rule 135 (expression -> XOR expression .)
    AND             reduce using rule 135 (expression -> XOR expression .)
    XOR             reduce using rule 135 (expression -> XOR expression .)
    XNOR            reduce using rule 135 (expression -> XOR expression .)
    OR              reduce using rule 135 (expression -> XOR expression .)
    LAND            reduce using rule 135 (expression -> XOR expression .)
    LOR             reduce using rule 135 (expression -> XOR expression .)
    COND            reduce using rule 135 (expression -> XOR expression .)
    RPAREN          reduce using rule 135 (expression -> XOR expression .)
    COLON           reduce using rule 135 (expression -> XOR expression .)
    PLUSCOLON       reduce using rule 135 (expression -> XOR expression .)
    MINUSCOLON      reduce using rule 135 (expression -> XOR expression .)
    SEMICOLON       reduce using rule 135 (expression -> XOR expression .)
    LBRACE          reduce using rule 135 (expression -> XOR expression .)
    RBRACE          reduce using rule 135 (expression -> XOR expression .)
    COMMA           reduce using rule 135 (expression -> XOR expression .)

  ! POWER           [ shift and go to state 143 ]
  ! TIMES           [ shift and go to state 271 ]
  ! DIVIDE          [ shift and go to state 151 ]
  ! MOD             [ shift and go to state 160 ]
  ! PLUS            [ shift and go to state 146 ]
  ! MINUS           [ shift and go to state 141 ]
  ! LSHIFT          [ shift and go to state 140 ]
  ! RSHIFT          [ shift and go to state 137 ]
  ! LSHIFTA         [ shift and go to state 158 ]
  ! RSHIFTA         [ shift and go to state 147 ]
  ! LT              [ shift and go to state 145 ]
  ! GT              [ shift and go to state 149 ]
  ! LE              [ shift and go to state 142 ]
  ! GE              [ shift and go to state 153 ]
  ! EQ              [ shift and go to state 156 ]
  ! NE              [ shift and go to state 144 ]
  ! EQL             [ shift and go to state 155 ]
  ! NEL             [ shift and go to state 136 ]
  ! AND             [ shift and go to state 157 ]
  ! XOR             [ shift and go to state 150 ]
  ! XNOR            [ shift and go to state 148 ]
  ! OR              [ shift and go to state 159 ]
  ! LAND            [ shift and go to state 154 ]
  ! LOR             [ shift and go to state 138 ]
  ! COND            [ shift and go to state 139 ]


state 125

    (162) expression -> LPAREN expression . RPAREN
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RPAREN          shift and go to state 273
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147
    LT              shift and go to state 145
    GT              shift and go to state 149
    LE              shift and go to state 142
    GE              shift and go to state 153
    EQ              shift and go to state 156
    NE              shift and go to state 144
    EQL             shift and go to state 155
    NEL             shift and go to state 136
    AND             shift and go to state 157
    XOR             shift and go to state 150
    XNOR            shift and go to state 148
    OR              shift and go to state 159
    LAND            shift and go to state 154
    LOR             shift and go to state 138
    COND            shift and go to state 139


state 126

    (386) identifier -> scope ID .

    LBRACKET        reduce using rule 386 (identifier -> scope ID .)
    LPAREN          reduce using rule 386 (identifier -> scope ID .)
    DOT             reduce using rule 386 (identifier -> scope ID .)
    COLON           reduce using rule 386 (identifier -> scope ID .)
    POWER           reduce using rule 386 (identifier -> scope ID .)
    TIMES           reduce using rule 386 (identifier -> scope ID .)
    DIVIDE          reduce using rule 386 (identifier -> scope ID .)
    MOD             reduce using rule 386 (identifier -> scope ID .)
    PLUS            reduce using rule 386 (identifier -> scope ID .)
    MINUS           reduce using rule 386 (identifier -> scope ID .)
    LSHIFT          reduce using rule 386 (identifier -> scope ID .)
    RSHIFT          reduce using rule 386 (identifier -> scope ID .)
    LSHIFTA         reduce using rule 386 (identifier -> scope ID .)
    RSHIFTA         reduce using rule 386 (identifier -> scope ID .)
    LT              reduce using rule 386 (identifier -> scope ID .)
    GT              reduce using rule 386 (identifier -> scope ID .)
    LE              reduce using rule 386 (identifier -> scope ID .)
    GE              reduce using rule 386 (identifier -> scope ID .)
    EQ              reduce using rule 386 (identifier -> scope ID .)
    NE              reduce using rule 386 (identifier -> scope ID .)
    EQL             reduce using rule 386 (identifier -> scope ID .)
    NEL             reduce using rule 386 (identifier -> scope ID .)
    AND             reduce using rule 386 (identifier -> scope ID .)
    XOR             reduce using rule 386 (identifier -> scope ID .)
    XNOR            reduce using rule 386 (identifier -> scope ID .)
    OR              reduce using rule 386 (identifier -> scope ID .)
    LAND            reduce using rule 386 (identifier -> scope ID .)
    LOR             reduce using rule 386 (identifier -> scope ID .)
    COND            reduce using rule 386 (identifier -> scope ID .)
    RPAREN          reduce using rule 386 (identifier -> scope ID .)
    LBRACE          reduce using rule 386 (identifier -> scope ID .)
    RBRACE          reduce using rule 386 (identifier -> scope ID .)
    COMMA           reduce using rule 386 (identifier -> scope ID .)
    PLUSCOLON       reduce using rule 386 (identifier -> scope ID .)
    MINUSCOLON      reduce using rule 386 (identifier -> scope ID .)
    RBRACKET        reduce using rule 386 (identifier -> scope ID .)
    SEMICOLON       reduce using rule 386 (identifier -> scope ID .)
    IF              reduce using rule 386 (identifier -> scope ID .)
    ID              reduce using rule 386 (identifier -> scope ID .)
    SENS_OR         reduce using rule 386 (identifier -> scope ID .)
    EQUALS          reduce using rule 386 (identifier -> scope ID .)
    CASE            reduce using rule 386 (identifier -> scope ID .)
    CASEX           reduce using rule 386 (identifier -> scope ID .)
    FOR             reduce using rule 386 (identifier -> scope ID .)
    WHILE           reduce using rule 386 (identifier -> scope ID .)
    WAIT            reduce using rule 386 (identifier -> scope ID .)
    FOREVER         reduce using rule 386 (identifier -> scope ID .)
    BEGIN           reduce using rule 386 (identifier -> scope ID .)
    FORK            reduce using rule 386 (identifier -> scope ID .)
    DELAY           reduce using rule 386 (identifier -> scope ID .)
    AT              reduce using rule 386 (identifier -> scope ID .)
    DOLLER          reduce using rule 386 (identifier -> scope ID .)
    DISABLE         reduce using rule 386 (identifier -> scope ID .)
    LNOT            reduce using rule 386 (identifier -> scope ID .)
    NOT             reduce using rule 386 (identifier -> scope ID .)
    NAND            reduce using rule 386 (identifier -> scope ID .)
    NOR             reduce using rule 386 (identifier -> scope ID .)
    INTNUMBER_DEC   reduce using rule 386 (identifier -> scope ID .)
    SIGNED_INTNUMBER_DEC reduce using rule 386 (identifier -> scope ID .)
    INTNUMBER_BIN   reduce using rule 386 (identifier -> scope ID .)
    SIGNED_INTNUMBER_BIN reduce using rule 386 (identifier -> scope ID .)
    INTNUMBER_OCT   reduce using rule 386 (identifier -> scope ID .)
    SIGNED_INTNUMBER_OCT reduce using rule 386 (identifier -> scope ID .)
    INTNUMBER_HEX   reduce using rule 386 (identifier -> scope ID .)
    SIGNED_INTNUMBER_HEX reduce using rule 386 (identifier -> scope ID .)
    FLOATNUMBER     reduce using rule 386 (identifier -> scope ID .)
    STRING_LITERAL  reduce using rule 386 (identifier -> scope ID .)


state 127

    (131) expression -> AND expression .
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RBRACKET        reduce using rule 131 (expression -> AND expression .)
    POWER           reduce using rule 131 (expression -> AND expression .)
    TIMES           reduce using rule 131 (expression -> AND expression .)
    DIVIDE          reduce using rule 131 (expression -> AND expression .)
    MOD             reduce using rule 131 (expression -> AND expression .)
    PLUS            reduce using rule 131 (expression -> AND expression .)
    MINUS           reduce using rule 131 (expression -> AND expression .)
    LSHIFT          reduce using rule 131 (expression -> AND expression .)
    RSHIFT          reduce using rule 131 (expression -> AND expression .)
    LSHIFTA         reduce using rule 131 (expression -> AND expression .)
    RSHIFTA         reduce using rule 131 (expression -> AND expression .)
    LT              reduce using rule 131 (expression -> AND expression .)
    GT              reduce using rule 131 (expression -> AND expression .)
    LE              reduce using rule 131 (expression -> AND expression .)
    GE              reduce using rule 131 (expression -> AND expression .)
    EQ              reduce using rule 131 (expression -> AND expression .)
    NE              reduce using rule 131 (expression -> AND expression .)
    EQL             reduce using rule 131 (expression -> AND expression .)
    NEL             reduce using rule 131 (expression -> AND expression .)
    AND             reduce using rule 131 (expression -> AND expression .)
    XOR             reduce using rule 131 (expression -> AND expression .)
    XNOR            reduce using rule 131 (expression -> AND expression .)
    OR              reduce using rule 131 (expression -> AND expression .)
    LAND            reduce using rule 131 (expression -> AND expression .)
    LOR             reduce using rule 131 (expression -> AND expression .)
    COND            reduce using rule 131 (expression -> AND expression .)
    RPAREN          reduce using rule 131 (expression -> AND expression .)
    COLON           reduce using rule 131 (expression -> AND expression .)
    PLUSCOLON       reduce using rule 131 (expression -> AND expression .)
    MINUSCOLON      reduce using rule 131 (expression -> AND expression .)
    SEMICOLON       reduce using rule 131 (expression -> AND expression .)
    LBRACE          reduce using rule 131 (expression -> AND expression .)
    RBRACE          reduce using rule 131 (expression -> AND expression .)
    COMMA           reduce using rule 131 (expression -> AND expression .)

  ! POWER           [ shift and go to state 143 ]
  ! TIMES           [ shift and go to state 271 ]
  ! DIVIDE          [ shift and go to state 151 ]
  ! MOD             [ shift and go to state 160 ]
  ! PLUS            [ shift and go to state 146 ]
  ! MINUS           [ shift and go to state 141 ]
  ! LSHIFT          [ shift and go to state 140 ]
  ! RSHIFT          [ shift and go to state 137 ]
  ! LSHIFTA         [ shift and go to state 158 ]
  ! RSHIFTA         [ shift and go to state 147 ]
  ! LT              [ shift and go to state 145 ]
  ! GT              [ shift and go to state 149 ]
  ! LE              [ shift and go to state 142 ]
  ! GE              [ shift and go to state 153 ]
  ! EQ              [ shift and go to state 156 ]
  ! NE              [ shift and go to state 144 ]
  ! EQL             [ shift and go to state 155 ]
  ! NEL             [ shift and go to state 136 ]
  ! AND             [ shift and go to state 157 ]
  ! XOR             [ shift and go to state 150 ]
  ! XNOR            [ shift and go to state 148 ]
  ! OR              [ shift and go to state 159 ]
  ! LAND            [ shift and go to state 154 ]
  ! LOR             [ shift and go to state 138 ]
  ! COND            [ shift and go to state 139 ]


state 128

    (171) concat -> LBRACE concatlist . RBRACE
    (172) concatlist -> concatlist . COMMA expression

    RBRACE          shift and go to state 275
    COMMA           shift and go to state 274


state 129

    (174) repeat -> LBRACE expression . concat RBRACE
    (173) concatlist -> expression .
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression
    (171) concat -> . LBRACE concatlist RBRACE

    RBRACE          reduce using rule 173 (concatlist -> expression .)
    COMMA           reduce using rule 173 (concatlist -> expression .)
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147
    LT              shift and go to state 145
    GT              shift and go to state 149
    LE              shift and go to state 142
    GE              shift and go to state 153
    EQ              shift and go to state 156
    NE              shift and go to state 144
    EQL             shift and go to state 155
    NEL             shift and go to state 136
    AND             shift and go to state 157
    XOR             shift and go to state 150
    XNOR            shift and go to state 148
    OR              shift and go to state 159
    LAND            shift and go to state 154
    LOR             shift and go to state 138
    COND            shift and go to state 139
    LBRACE          shift and go to state 277

    concat                         shift and go to state 276

state 130

    (346) systemcall -> DOLLER SIGNED . LPAREN sysargs RPAREN

    LPAREN          shift and go to state 278


state 131

    (344) systemcall -> DOLLER ID .
    (345) systemcall -> DOLLER ID . LPAREN sysargs RPAREN

    POWER           reduce using rule 344 (systemcall -> DOLLER ID .)
    TIMES           reduce using rule 344 (systemcall -> DOLLER ID .)
    DIVIDE          reduce using rule 344 (systemcall -> DOLLER ID .)
    MOD             reduce using rule 344 (systemcall -> DOLLER ID .)
    PLUS            reduce using rule 344 (systemcall -> DOLLER ID .)
    MINUS           reduce using rule 344 (systemcall -> DOLLER ID .)
    LSHIFT          reduce using rule 344 (systemcall -> DOLLER ID .)
    RSHIFT          reduce using rule 344 (systemcall -> DOLLER ID .)
    LSHIFTA         reduce using rule 344 (systemcall -> DOLLER ID .)
    RSHIFTA         reduce using rule 344 (systemcall -> DOLLER ID .)
    LT              reduce using rule 344 (systemcall -> DOLLER ID .)
    GT              reduce using rule 344 (systemcall -> DOLLER ID .)
    LE              reduce using rule 344 (systemcall -> DOLLER ID .)
    GE              reduce using rule 344 (systemcall -> DOLLER ID .)
    EQ              reduce using rule 344 (systemcall -> DOLLER ID .)
    NE              reduce using rule 344 (systemcall -> DOLLER ID .)
    EQL             reduce using rule 344 (systemcall -> DOLLER ID .)
    NEL             reduce using rule 344 (systemcall -> DOLLER ID .)
    AND             reduce using rule 344 (systemcall -> DOLLER ID .)
    XOR             reduce using rule 344 (systemcall -> DOLLER ID .)
    XNOR            reduce using rule 344 (systemcall -> DOLLER ID .)
    OR              reduce using rule 344 (systemcall -> DOLLER ID .)
    LAND            reduce using rule 344 (systemcall -> DOLLER ID .)
    LOR             reduce using rule 344 (systemcall -> DOLLER ID .)
    COND            reduce using rule 344 (systemcall -> DOLLER ID .)
    RPAREN          reduce using rule 344 (systemcall -> DOLLER ID .)
    LBRACE          reduce using rule 344 (systemcall -> DOLLER ID .)
    RBRACE          reduce using rule 344 (systemcall -> DOLLER ID .)
    COMMA           reduce using rule 344 (systemcall -> DOLLER ID .)
    COLON           reduce using rule 344 (systemcall -> DOLLER ID .)
    PLUSCOLON       reduce using rule 344 (systemcall -> DOLLER ID .)
    MINUSCOLON      reduce using rule 344 (systemcall -> DOLLER ID .)
    RBRACKET        reduce using rule 344 (systemcall -> DOLLER ID .)
    SEMICOLON       reduce using rule 344 (systemcall -> DOLLER ID .)
    LPAREN          shift and go to state 279


state 132

    (130) expression -> NOT expression .
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RBRACKET        reduce using rule 130 (expression -> NOT expression .)
    POWER           reduce using rule 130 (expression -> NOT expression .)
    TIMES           reduce using rule 130 (expression -> NOT expression .)
    DIVIDE          reduce using rule 130 (expression -> NOT expression .)
    MOD             reduce using rule 130 (expression -> NOT expression .)
    PLUS            reduce using rule 130 (expression -> NOT expression .)
    MINUS           reduce using rule 130 (expression -> NOT expression .)
    LSHIFT          reduce using rule 130 (expression -> NOT expression .)
    RSHIFT          reduce using rule 130 (expression -> NOT expression .)
    LSHIFTA         reduce using rule 130 (expression -> NOT expression .)
    RSHIFTA         reduce using rule 130 (expression -> NOT expression .)
    LT              reduce using rule 130 (expression -> NOT expression .)
    GT              reduce using rule 130 (expression -> NOT expression .)
    LE              reduce using rule 130 (expression -> NOT expression .)
    GE              reduce using rule 130 (expression -> NOT expression .)
    EQ              reduce using rule 130 (expression -> NOT expression .)
    NE              reduce using rule 130 (expression -> NOT expression .)
    EQL             reduce using rule 130 (expression -> NOT expression .)
    NEL             reduce using rule 130 (expression -> NOT expression .)
    AND             reduce using rule 130 (expression -> NOT expression .)
    XOR             reduce using rule 130 (expression -> NOT expression .)
    XNOR            reduce using rule 130 (expression -> NOT expression .)
    OR              reduce using rule 130 (expression -> NOT expression .)
    LAND            reduce using rule 130 (expression -> NOT expression .)
    LOR             reduce using rule 130 (expression -> NOT expression .)
    COND            reduce using rule 130 (expression -> NOT expression .)
    RPAREN          reduce using rule 130 (expression -> NOT expression .)
    COLON           reduce using rule 130 (expression -> NOT expression .)
    PLUSCOLON       reduce using rule 130 (expression -> NOT expression .)
    MINUSCOLON      reduce using rule 130 (expression -> NOT expression .)
    SEMICOLON       reduce using rule 130 (expression -> NOT expression .)
    LBRACE          reduce using rule 130 (expression -> NOT expression .)
    RBRACE          reduce using rule 130 (expression -> NOT expression .)
    COMMA           reduce using rule 130 (expression -> NOT expression .)

  ! POWER           [ shift and go to state 143 ]
  ! TIMES           [ shift and go to state 271 ]
  ! DIVIDE          [ shift and go to state 151 ]
  ! MOD             [ shift and go to state 160 ]
  ! PLUS            [ shift and go to state 146 ]
  ! MINUS           [ shift and go to state 141 ]
  ! LSHIFT          [ shift and go to state 140 ]
  ! RSHIFT          [ shift and go to state 137 ]
  ! LSHIFTA         [ shift and go to state 158 ]
  ! RSHIFTA         [ shift and go to state 147 ]
  ! LT              [ shift and go to state 145 ]
  ! GT              [ shift and go to state 149 ]
  ! LE              [ shift and go to state 142 ]
  ! GE              [ shift and go to state 153 ]
  ! EQ              [ shift and go to state 156 ]
  ! NE              [ shift and go to state 144 ]
  ! EQL             [ shift and go to state 155 ]
  ! NEL             [ shift and go to state 136 ]
  ! AND             [ shift and go to state 157 ]
  ! XOR             [ shift and go to state 150 ]
  ! XNOR            [ shift and go to state 148 ]
  ! OR              [ shift and go to state 159 ]
  ! LAND            [ shift and go to state 154 ]
  ! LOR             [ shift and go to state 138 ]
  ! COND            [ shift and go to state 139 ]


state 133

    (175) partselect -> identifier LBRACKET . expression COLON expression RBRACKET
    (176) partselect -> identifier LBRACKET . expression PLUSCOLON expression RBRACKET
    (177) partselect -> identifier LBRACKET . expression MINUSCOLON expression RBRACKET
    (181) pointer -> identifier LBRACKET . expression RBRACKET
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 280
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 134

    (366) functioncall -> identifier LPAREN . func_args RPAREN
    (367) func_args -> . func_args COMMA expression
    (368) func_args -> . expression
    (369) func_args -> . empty
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (393) empty -> .
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    RPAREN          reduce using rule 393 (empty -> .)
    COMMA           reduce using rule 393 (empty -> .)
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    func_args                      shift and go to state 281
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    pointer                        shift and go to state 31
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    repeat                         shift and go to state 30
    functioncall                   shift and go to state 55
    empty                          shift and go to state 282
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    expression                     shift and go to state 283
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 135

    (387) scope -> identifier DOT .

    ID              reduce using rule 387 (scope -> identifier DOT .)


state 136

    (154) expression -> expression NEL . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 284
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 137

    (144) expression -> expression RSHIFT . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 285
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 138

    (160) expression -> expression LOR . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 286
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 139

    (161) expression -> expression COND . expression COLON expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 287
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 140

    (143) expression -> expression LSHIFT . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 288
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 141

    (142) expression -> expression MINUS . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 289
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 142

    (149) expression -> expression LE . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 290
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 143

    (137) expression -> expression POWER . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 291
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 144

    (152) expression -> expression NE . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 292
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 145

    (147) expression -> expression LT . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 293
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 146

    (141) expression -> expression PLUS . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 294
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 147

    (146) expression -> expression RSHIFTA . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 295
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 148

    (157) expression -> expression XNOR . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 296
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 149

    (148) expression -> expression GT . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 297
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 150

    (156) expression -> expression XOR . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 298
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 151

    (139) expression -> expression DIVIDE . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 299
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 152

    (7) pragma -> LPAREN TIMES ID EQUALS expression TIMES . RPAREN
    (138) expression -> expression TIMES . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    RPAREN          shift and go to state 300
    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 301
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 153

    (150) expression -> expression GE . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 302
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 154

    (159) expression -> expression LAND . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 303
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 155

    (153) expression -> expression EQL . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 304
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 156

    (151) expression -> expression EQ . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 305
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 157

    (155) expression -> expression AND . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 306
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 158

    (145) expression -> expression LSHIFTA . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 307
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 159

    (158) expression -> expression OR . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 308
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 160

    (140) expression -> expression MOD . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 309
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 161

    (134) expression -> OR expression .
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RBRACKET        reduce using rule 134 (expression -> OR expression .)
    POWER           reduce using rule 134 (expression -> OR expression .)
    TIMES           reduce using rule 134 (expression -> OR expression .)
    DIVIDE          reduce using rule 134 (expression -> OR expression .)
    MOD             reduce using rule 134 (expression -> OR expression .)
    PLUS            reduce using rule 134 (expression -> OR expression .)
    MINUS           reduce using rule 134 (expression -> OR expression .)
    LSHIFT          reduce using rule 134 (expression -> OR expression .)
    RSHIFT          reduce using rule 134 (expression -> OR expression .)
    LSHIFTA         reduce using rule 134 (expression -> OR expression .)
    RSHIFTA         reduce using rule 134 (expression -> OR expression .)
    LT              reduce using rule 134 (expression -> OR expression .)
    GT              reduce using rule 134 (expression -> OR expression .)
    LE              reduce using rule 134 (expression -> OR expression .)
    GE              reduce using rule 134 (expression -> OR expression .)
    EQ              reduce using rule 134 (expression -> OR expression .)
    NE              reduce using rule 134 (expression -> OR expression .)
    EQL             reduce using rule 134 (expression -> OR expression .)
    NEL             reduce using rule 134 (expression -> OR expression .)
    AND             reduce using rule 134 (expression -> OR expression .)
    XOR             reduce using rule 134 (expression -> OR expression .)
    XNOR            reduce using rule 134 (expression -> OR expression .)
    OR              reduce using rule 134 (expression -> OR expression .)
    LAND            reduce using rule 134 (expression -> OR expression .)
    LOR             reduce using rule 134 (expression -> OR expression .)
    COND            reduce using rule 134 (expression -> OR expression .)
    RPAREN          reduce using rule 134 (expression -> OR expression .)
    COLON           reduce using rule 134 (expression -> OR expression .)
    PLUSCOLON       reduce using rule 134 (expression -> OR expression .)
    MINUSCOLON      reduce using rule 134 (expression -> OR expression .)
    SEMICOLON       reduce using rule 134 (expression -> OR expression .)
    LBRACE          reduce using rule 134 (expression -> OR expression .)
    RBRACE          reduce using rule 134 (expression -> OR expression .)
    COMMA           reduce using rule 134 (expression -> OR expression .)

  ! POWER           [ shift and go to state 143 ]
  ! TIMES           [ shift and go to state 271 ]
  ! DIVIDE          [ shift and go to state 151 ]
  ! MOD             [ shift and go to state 160 ]
  ! PLUS            [ shift and go to state 146 ]
  ! MINUS           [ shift and go to state 141 ]
  ! LSHIFT          [ shift and go to state 140 ]
  ! RSHIFT          [ shift and go to state 137 ]
  ! LSHIFTA         [ shift and go to state 158 ]
  ! RSHIFTA         [ shift and go to state 147 ]
  ! LT              [ shift and go to state 145 ]
  ! GT              [ shift and go to state 149 ]
  ! LE              [ shift and go to state 142 ]
  ! GE              [ shift and go to state 153 ]
  ! EQ              [ shift and go to state 156 ]
  ! NE              [ shift and go to state 144 ]
  ! EQL             [ shift and go to state 155 ]
  ! NEL             [ shift and go to state 136 ]
  ! AND             [ shift and go to state 157 ]
  ! XOR             [ shift and go to state 150 ]
  ! XNOR            [ shift and go to state 148 ]
  ! OR              [ shift and go to state 159 ]
  ! LAND            [ shift and go to state 154 ]
  ! LOR             [ shift and go to state 138 ]
  ! COND            [ shift and go to state 139 ]


state 162

    (133) expression -> NOR expression .
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RBRACKET        reduce using rule 133 (expression -> NOR expression .)
    POWER           reduce using rule 133 (expression -> NOR expression .)
    TIMES           reduce using rule 133 (expression -> NOR expression .)
    DIVIDE          reduce using rule 133 (expression -> NOR expression .)
    MOD             reduce using rule 133 (expression -> NOR expression .)
    PLUS            reduce using rule 133 (expression -> NOR expression .)
    MINUS           reduce using rule 133 (expression -> NOR expression .)
    LSHIFT          reduce using rule 133 (expression -> NOR expression .)
    RSHIFT          reduce using rule 133 (expression -> NOR expression .)
    LSHIFTA         reduce using rule 133 (expression -> NOR expression .)
    RSHIFTA         reduce using rule 133 (expression -> NOR expression .)
    LT              reduce using rule 133 (expression -> NOR expression .)
    GT              reduce using rule 133 (expression -> NOR expression .)
    LE              reduce using rule 133 (expression -> NOR expression .)
    GE              reduce using rule 133 (expression -> NOR expression .)
    EQ              reduce using rule 133 (expression -> NOR expression .)
    NE              reduce using rule 133 (expression -> NOR expression .)
    EQL             reduce using rule 133 (expression -> NOR expression .)
    NEL             reduce using rule 133 (expression -> NOR expression .)
    AND             reduce using rule 133 (expression -> NOR expression .)
    XOR             reduce using rule 133 (expression -> NOR expression .)
    XNOR            reduce using rule 133 (expression -> NOR expression .)
    OR              reduce using rule 133 (expression -> NOR expression .)
    LAND            reduce using rule 133 (expression -> NOR expression .)
    LOR             reduce using rule 133 (expression -> NOR expression .)
    COND            reduce using rule 133 (expression -> NOR expression .)
    RPAREN          reduce using rule 133 (expression -> NOR expression .)
    COLON           reduce using rule 133 (expression -> NOR expression .)
    PLUSCOLON       reduce using rule 133 (expression -> NOR expression .)
    MINUSCOLON      reduce using rule 133 (expression -> NOR expression .)
    SEMICOLON       reduce using rule 133 (expression -> NOR expression .)
    LBRACE          reduce using rule 133 (expression -> NOR expression .)
    RBRACE          reduce using rule 133 (expression -> NOR expression .)
    COMMA           reduce using rule 133 (expression -> NOR expression .)

  ! POWER           [ shift and go to state 143 ]
  ! TIMES           [ shift and go to state 271 ]
  ! DIVIDE          [ shift and go to state 151 ]
  ! MOD             [ shift and go to state 160 ]
  ! PLUS            [ shift and go to state 146 ]
  ! MINUS           [ shift and go to state 141 ]
  ! LSHIFT          [ shift and go to state 140 ]
  ! RSHIFT          [ shift and go to state 137 ]
  ! LSHIFTA         [ shift and go to state 158 ]
  ! RSHIFTA         [ shift and go to state 147 ]
  ! LT              [ shift and go to state 145 ]
  ! GT              [ shift and go to state 149 ]
  ! LE              [ shift and go to state 142 ]
  ! GE              [ shift and go to state 153 ]
  ! EQ              [ shift and go to state 156 ]
  ! NE              [ shift and go to state 144 ]
  ! EQL             [ shift and go to state 155 ]
  ! NEL             [ shift and go to state 136 ]
  ! AND             [ shift and go to state 157 ]
  ! XOR             [ shift and go to state 150 ]
  ! XNOR            [ shift and go to state 148 ]
  ! OR              [ shift and go to state 159 ]
  ! LAND            [ shift and go to state 154 ]
  ! LOR             [ shift and go to state 138 ]
  ! COND            [ shift and go to state 139 ]


state 163

    (91) realnamelist -> realname .

    SEMICOLON       reduce using rule 91 (realnamelist -> realname .)
    COMMA           reduce using rule 91 (realnamelist -> realname .)


state 164

    (89) realdecl -> REAL realnamelist . SEMICOLON
    (90) realnamelist -> realnamelist . COMMA realname

    SEMICOLON       shift and go to state 311
    COMMA           shift and go to state 310


state 165

    (92) realname -> ID .

    SEMICOLON       reduce using rule 92 (realname -> ID .)
    COMMA           reduce using rule 92 (realname -> ID .)


state 166

    (254) parallelblock -> FORK . block_statements JOIN
    (255) parallelblock -> FORK . JOIN
    (241) block_statements -> . block_statements block_statement
    (242) block_statements -> . block_statement
    (243) block_statement -> . basic_statement
    (216) basic_statement -> . if_statement
    (217) basic_statement -> . case_statement
    (218) basic_statement -> . casex_statement
    (219) basic_statement -> . for_statement
    (220) basic_statement -> . while_statement
    (221) basic_statement -> . event_statement
    (222) basic_statement -> . wait_statement
    (223) basic_statement -> . forever_statement
    (224) basic_statement -> . block
    (225) basic_statement -> . namedblock
    (226) basic_statement -> . parallelblock
    (227) basic_statement -> . blocking_substitution
    (228) basic_statement -> . nonblocking_substitution
    (229) basic_statement -> . single_statement
    (256) if_statement -> . IF LPAREN cond RPAREN true_statement ELSE else_statement
    (257) if_statement -> . IF LPAREN cond RPAREN true_statement
    (258) if_statement -> . delays IF LPAREN cond RPAREN true_statement ELSE else_statement
    (259) if_statement -> . delays IF LPAREN cond RPAREN true_statement
    (274) case_statement -> . CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (275) casex_statement -> . CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (264) for_statement -> . FOR LPAREN forpre forcond forpost RPAREN forcontent_statement
    (272) while_statement -> . WHILE LPAREN cond RPAREN whilecontent_statement
    (285) event_statement -> . senslist SEMICOLON
    (286) wait_statement -> . WAIT LPAREN cond RPAREN waitcontent_statement
    (289) forever_statement -> . FOREVER basic_statement
    (239) block -> . BEGIN block_statements END
    (240) block -> . BEGIN END
    (244) namedblock -> . BEGIN COLON ID namedblock_statements END
    (245) namedblock -> . BEGIN COLON ID END
    (254) parallelblock -> . FORK block_statements JOIN
    (255) parallelblock -> . FORK JOIN
    (231) blocking_substitution -> . delays lvalue EQUALS delays rvalue SEMICOLON
    (233) nonblocking_substitution -> . delays lvalue LE delays rvalue SEMICOLON
    (390) single_statement -> . DELAY expression SEMICOLON
    (391) single_statement -> . systemcall SEMICOLON
    (392) single_statement -> . disable SEMICOLON
    (234) delays -> . DELAY LPAREN expression RPAREN
    (235) delays -> . DELAY identifier
    (236) delays -> . DELAY intnumber
    (237) delays -> . DELAY floatnumber
    (238) delays -> . empty
    (197) senslist -> . AT LPAREN edgesigs RPAREN
    (204) senslist -> . empty
    (205) senslist -> . AT levelsig
    (206) senslist -> . AT LPAREN levelsigs RPAREN
    (214) senslist -> . AT TIMES
    (215) senslist -> . AT LPAREN TIMES RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (389) disable -> . DISABLE ID
    (393) empty -> .

  ! shift/reduce conflict for IF resolved as shift
    JOIN            shift and go to state 315
    IF              shift and go to state 195
    CASE            shift and go to state 173
    CASEX           shift and go to state 178
    FOR             shift and go to state 187
    WHILE           shift and go to state 171
    WAIT            shift and go to state 168
    FOREVER         shift and go to state 167
    BEGIN           shift and go to state 175
    FORK            shift and go to state 166
    DELAY           shift and go to state 170
    AT              shift and go to state 193
    DOLLER          shift and go to state 54
    DISABLE         shift and go to state 180
    LBRACE          reduce using rule 393 (empty -> .)
    ID              reduce using rule 393 (empty -> .)
    SEMICOLON       reduce using rule 393 (empty -> .)

  ! IF              [ reduce using rule 393 (empty -> .) ]

    parallelblock                  shift and go to state 169
    blocking_substitution          shift and go to state 177
    forever_statement              shift and go to state 172
    casex_statement                shift and go to state 174
    delays                         shift and go to state 176
    block_statement                shift and go to state 313
    while_statement                shift and go to state 179
    systemcall                     shift and go to state 181
    if_statement                   shift and go to state 182
    nonblocking_substitution       shift and go to state 183
    empty                          shift and go to state 184
    basic_statement                shift and go to state 314
    block_statements               shift and go to state 312
    for_statement                  shift and go to state 186
    event_statement                shift and go to state 189
    wait_statement                 shift and go to state 190
    case_statement                 shift and go to state 191
    disable                        shift and go to state 192
    namedblock                     shift and go to state 194
    senslist                       shift and go to state 196
    single_statement               shift and go to state 197
    block                          shift and go to state 198

state 167

    (289) forever_statement -> FOREVER . basic_statement
    (216) basic_statement -> . if_statement
    (217) basic_statement -> . case_statement
    (218) basic_statement -> . casex_statement
    (219) basic_statement -> . for_statement
    (220) basic_statement -> . while_statement
    (221) basic_statement -> . event_statement
    (222) basic_statement -> . wait_statement
    (223) basic_statement -> . forever_statement
    (224) basic_statement -> . block
    (225) basic_statement -> . namedblock
    (226) basic_statement -> . parallelblock
    (227) basic_statement -> . blocking_substitution
    (228) basic_statement -> . nonblocking_substitution
    (229) basic_statement -> . single_statement
    (256) if_statement -> . IF LPAREN cond RPAREN true_statement ELSE else_statement
    (257) if_statement -> . IF LPAREN cond RPAREN true_statement
    (258) if_statement -> . delays IF LPAREN cond RPAREN true_statement ELSE else_statement
    (259) if_statement -> . delays IF LPAREN cond RPAREN true_statement
    (274) case_statement -> . CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (275) casex_statement -> . CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (264) for_statement -> . FOR LPAREN forpre forcond forpost RPAREN forcontent_statement
    (272) while_statement -> . WHILE LPAREN cond RPAREN whilecontent_statement
    (285) event_statement -> . senslist SEMICOLON
    (286) wait_statement -> . WAIT LPAREN cond RPAREN waitcontent_statement
    (289) forever_statement -> . FOREVER basic_statement
    (239) block -> . BEGIN block_statements END
    (240) block -> . BEGIN END
    (244) namedblock -> . BEGIN COLON ID namedblock_statements END
    (245) namedblock -> . BEGIN COLON ID END
    (254) parallelblock -> . FORK block_statements JOIN
    (255) parallelblock -> . FORK JOIN
    (231) blocking_substitution -> . delays lvalue EQUALS delays rvalue SEMICOLON
    (233) nonblocking_substitution -> . delays lvalue LE delays rvalue SEMICOLON
    (390) single_statement -> . DELAY expression SEMICOLON
    (391) single_statement -> . systemcall SEMICOLON
    (392) single_statement -> . disable SEMICOLON
    (234) delays -> . DELAY LPAREN expression RPAREN
    (235) delays -> . DELAY identifier
    (236) delays -> . DELAY intnumber
    (237) delays -> . DELAY floatnumber
    (238) delays -> . empty
    (197) senslist -> . AT LPAREN edgesigs RPAREN
    (204) senslist -> . empty
    (205) senslist -> . AT levelsig
    (206) senslist -> . AT LPAREN levelsigs RPAREN
    (214) senslist -> . AT TIMES
    (215) senslist -> . AT LPAREN TIMES RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (389) disable -> . DISABLE ID
    (393) empty -> .

  ! shift/reduce conflict for IF resolved as shift
    IF              shift and go to state 195
    CASE            shift and go to state 173
    CASEX           shift and go to state 178
    FOR             shift and go to state 187
    WHILE           shift and go to state 171
    WAIT            shift and go to state 168
    FOREVER         shift and go to state 167
    BEGIN           shift and go to state 175
    FORK            shift and go to state 166
    DELAY           shift and go to state 170
    AT              shift and go to state 193
    DOLLER          shift and go to state 54
    DISABLE         shift and go to state 180
    LBRACE          reduce using rule 393 (empty -> .)
    ID              reduce using rule 393 (empty -> .)
    SEMICOLON       reduce using rule 393 (empty -> .)

  ! IF              [ reduce using rule 393 (empty -> .) ]

    parallelblock                  shift and go to state 169
    blocking_substitution          shift and go to state 177
    forever_statement              shift and go to state 172
    casex_statement                shift and go to state 174
    delays                         shift and go to state 176
    while_statement                shift and go to state 179
    systemcall                     shift and go to state 181
    if_statement                   shift and go to state 182
    nonblocking_substitution       shift and go to state 183
    empty                          shift and go to state 184
    basic_statement                shift and go to state 316
    for_statement                  shift and go to state 186
    event_statement                shift and go to state 189
    wait_statement                 shift and go to state 190
    case_statement                 shift and go to state 191
    disable                        shift and go to state 192
    namedblock                     shift and go to state 194
    senslist                       shift and go to state 196
    block                          shift and go to state 198
    single_statement               shift and go to state 197

state 168

    (286) wait_statement -> WAIT . LPAREN cond RPAREN waitcontent_statement

    LPAREN          shift and go to state 317


state 169

    (226) basic_statement -> parallelblock .

    END             reduce using rule 226 (basic_statement -> parallelblock .)
    IF              reduce using rule 226 (basic_statement -> parallelblock .)
    CASE            reduce using rule 226 (basic_statement -> parallelblock .)
    CASEX           reduce using rule 226 (basic_statement -> parallelblock .)
    FOR             reduce using rule 226 (basic_statement -> parallelblock .)
    WHILE           reduce using rule 226 (basic_statement -> parallelblock .)
    WAIT            reduce using rule 226 (basic_statement -> parallelblock .)
    FOREVER         reduce using rule 226 (basic_statement -> parallelblock .)
    BEGIN           reduce using rule 226 (basic_statement -> parallelblock .)
    FORK            reduce using rule 226 (basic_statement -> parallelblock .)
    DELAY           reduce using rule 226 (basic_statement -> parallelblock .)
    AT              reduce using rule 226 (basic_statement -> parallelblock .)
    DOLLER          reduce using rule 226 (basic_statement -> parallelblock .)
    DISABLE         reduce using rule 226 (basic_statement -> parallelblock .)
    LBRACE          reduce using rule 226 (basic_statement -> parallelblock .)
    ID              reduce using rule 226 (basic_statement -> parallelblock .)
    SEMICOLON       reduce using rule 226 (basic_statement -> parallelblock .)
    ENDCASE         reduce using rule 226 (basic_statement -> parallelblock .)
    DEFAULT         reduce using rule 226 (basic_statement -> parallelblock .)
    MINUS           reduce using rule 226 (basic_statement -> parallelblock .)
    PLUS            reduce using rule 226 (basic_statement -> parallelblock .)
    LNOT            reduce using rule 226 (basic_statement -> parallelblock .)
    NOT             reduce using rule 226 (basic_statement -> parallelblock .)
    AND             reduce using rule 226 (basic_statement -> parallelblock .)
    NAND            reduce using rule 226 (basic_statement -> parallelblock .)
    NOR             reduce using rule 226 (basic_statement -> parallelblock .)
    OR              reduce using rule 226 (basic_statement -> parallelblock .)
    XOR             reduce using rule 226 (basic_statement -> parallelblock .)
    XNOR            reduce using rule 226 (basic_statement -> parallelblock .)
    LPAREN          reduce using rule 226 (basic_statement -> parallelblock .)
    INTNUMBER_DEC   reduce using rule 226 (basic_statement -> parallelblock .)
    SIGNED_INTNUMBER_DEC reduce using rule 226 (basic_statement -> parallelblock .)
    INTNUMBER_BIN   reduce using rule 226 (basic_statement -> parallelblock .)
    SIGNED_INTNUMBER_BIN reduce using rule 226 (basic_statement -> parallelblock .)
    INTNUMBER_OCT   reduce using rule 226 (basic_statement -> parallelblock .)
    SIGNED_INTNUMBER_OCT reduce using rule 226 (basic_statement -> parallelblock .)
    INTNUMBER_HEX   reduce using rule 226 (basic_statement -> parallelblock .)
    SIGNED_INTNUMBER_HEX reduce using rule 226 (basic_statement -> parallelblock .)
    FLOATNUMBER     reduce using rule 226 (basic_statement -> parallelblock .)
    STRING_LITERAL  reduce using rule 226 (basic_statement -> parallelblock .)
    ENDMODULE       reduce using rule 226 (basic_statement -> parallelblock .)
    GENERATE        reduce using rule 226 (basic_statement -> parallelblock .)
    INTEGER         reduce using rule 226 (basic_statement -> parallelblock .)
    REAL            reduce using rule 226 (basic_statement -> parallelblock .)
    PARAMETER       reduce using rule 226 (basic_statement -> parallelblock .)
    LOCALPARAM      reduce using rule 226 (basic_statement -> parallelblock .)
    GENVAR          reduce using rule 226 (basic_statement -> parallelblock .)
    ASSIGN          reduce using rule 226 (basic_statement -> parallelblock .)
    ALWAYS          reduce using rule 226 (basic_statement -> parallelblock .)
    INITIAL         reduce using rule 226 (basic_statement -> parallelblock .)
    SENS_OR         reduce using rule 226 (basic_statement -> parallelblock .)
    FUNCTION        reduce using rule 226 (basic_statement -> parallelblock .)
    TASK            reduce using rule 226 (basic_statement -> parallelblock .)
    INPUT           reduce using rule 226 (basic_statement -> parallelblock .)
    OUTPUT          reduce using rule 226 (basic_statement -> parallelblock .)
    INOUT           reduce using rule 226 (basic_statement -> parallelblock .)
    TRI             reduce using rule 226 (basic_statement -> parallelblock .)
    REG             reduce using rule 226 (basic_statement -> parallelblock .)
    WIRE            reduce using rule 226 (basic_statement -> parallelblock .)
    SIGNED          reduce using rule 226 (basic_statement -> parallelblock .)
    SUPPLY0         reduce using rule 226 (basic_statement -> parallelblock .)
    SUPPLY1         reduce using rule 226 (basic_statement -> parallelblock .)
    ENDGENERATE     reduce using rule 226 (basic_statement -> parallelblock .)
    ELSE            reduce using rule 226 (basic_statement -> parallelblock .)
    JOIN            reduce using rule 226 (basic_statement -> parallelblock .)
    ENDTASK         reduce using rule 226 (basic_statement -> parallelblock .)
    ENDFUNCTION     reduce using rule 226 (basic_statement -> parallelblock .)


state 170

    (390) single_statement -> DELAY . expression SEMICOLON
    (234) delays -> DELAY . LPAREN expression RPAREN
    (235) delays -> DELAY . identifier
    (236) delays -> DELAY . intnumber
    (237) delays -> DELAY . floatnumber
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (195) stringliteral -> . STRING_LITERAL

    LPAREN          shift and go to state 319
    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 320
    pointer                        shift and go to state 31
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 321
    expression                     shift and go to state 322
    intnumber                      shift and go to state 318
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 171

    (272) while_statement -> WHILE . LPAREN cond RPAREN whilecontent_statement

    LPAREN          shift and go to state 323


state 172

    (223) basic_statement -> forever_statement .

    END             reduce using rule 223 (basic_statement -> forever_statement .)
    IF              reduce using rule 223 (basic_statement -> forever_statement .)
    CASE            reduce using rule 223 (basic_statement -> forever_statement .)
    CASEX           reduce using rule 223 (basic_statement -> forever_statement .)
    FOR             reduce using rule 223 (basic_statement -> forever_statement .)
    WHILE           reduce using rule 223 (basic_statement -> forever_statement .)
    WAIT            reduce using rule 223 (basic_statement -> forever_statement .)
    FOREVER         reduce using rule 223 (basic_statement -> forever_statement .)
    BEGIN           reduce using rule 223 (basic_statement -> forever_statement .)
    FORK            reduce using rule 223 (basic_statement -> forever_statement .)
    DELAY           reduce using rule 223 (basic_statement -> forever_statement .)
    AT              reduce using rule 223 (basic_statement -> forever_statement .)
    DOLLER          reduce using rule 223 (basic_statement -> forever_statement .)
    DISABLE         reduce using rule 223 (basic_statement -> forever_statement .)
    LBRACE          reduce using rule 223 (basic_statement -> forever_statement .)
    ID              reduce using rule 223 (basic_statement -> forever_statement .)
    SEMICOLON       reduce using rule 223 (basic_statement -> forever_statement .)
    ENDCASE         reduce using rule 223 (basic_statement -> forever_statement .)
    DEFAULT         reduce using rule 223 (basic_statement -> forever_statement .)
    MINUS           reduce using rule 223 (basic_statement -> forever_statement .)
    PLUS            reduce using rule 223 (basic_statement -> forever_statement .)
    LNOT            reduce using rule 223 (basic_statement -> forever_statement .)
    NOT             reduce using rule 223 (basic_statement -> forever_statement .)
    AND             reduce using rule 223 (basic_statement -> forever_statement .)
    NAND            reduce using rule 223 (basic_statement -> forever_statement .)
    NOR             reduce using rule 223 (basic_statement -> forever_statement .)
    OR              reduce using rule 223 (basic_statement -> forever_statement .)
    XOR             reduce using rule 223 (basic_statement -> forever_statement .)
    XNOR            reduce using rule 223 (basic_statement -> forever_statement .)
    LPAREN          reduce using rule 223 (basic_statement -> forever_statement .)
    INTNUMBER_DEC   reduce using rule 223 (basic_statement -> forever_statement .)
    SIGNED_INTNUMBER_DEC reduce using rule 223 (basic_statement -> forever_statement .)
    INTNUMBER_BIN   reduce using rule 223 (basic_statement -> forever_statement .)
    SIGNED_INTNUMBER_BIN reduce using rule 223 (basic_statement -> forever_statement .)
    INTNUMBER_OCT   reduce using rule 223 (basic_statement -> forever_statement .)
    SIGNED_INTNUMBER_OCT reduce using rule 223 (basic_statement -> forever_statement .)
    INTNUMBER_HEX   reduce using rule 223 (basic_statement -> forever_statement .)
    SIGNED_INTNUMBER_HEX reduce using rule 223 (basic_statement -> forever_statement .)
    FLOATNUMBER     reduce using rule 223 (basic_statement -> forever_statement .)
    STRING_LITERAL  reduce using rule 223 (basic_statement -> forever_statement .)
    ENDMODULE       reduce using rule 223 (basic_statement -> forever_statement .)
    GENERATE        reduce using rule 223 (basic_statement -> forever_statement .)
    INTEGER         reduce using rule 223 (basic_statement -> forever_statement .)
    REAL            reduce using rule 223 (basic_statement -> forever_statement .)
    PARAMETER       reduce using rule 223 (basic_statement -> forever_statement .)
    LOCALPARAM      reduce using rule 223 (basic_statement -> forever_statement .)
    GENVAR          reduce using rule 223 (basic_statement -> forever_statement .)
    ASSIGN          reduce using rule 223 (basic_statement -> forever_statement .)
    ALWAYS          reduce using rule 223 (basic_statement -> forever_statement .)
    INITIAL         reduce using rule 223 (basic_statement -> forever_statement .)
    SENS_OR         reduce using rule 223 (basic_statement -> forever_statement .)
    FUNCTION        reduce using rule 223 (basic_statement -> forever_statement .)
    TASK            reduce using rule 223 (basic_statement -> forever_statement .)
    INPUT           reduce using rule 223 (basic_statement -> forever_statement .)
    OUTPUT          reduce using rule 223 (basic_statement -> forever_statement .)
    INOUT           reduce using rule 223 (basic_statement -> forever_statement .)
    TRI             reduce using rule 223 (basic_statement -> forever_statement .)
    REG             reduce using rule 223 (basic_statement -> forever_statement .)
    WIRE            reduce using rule 223 (basic_statement -> forever_statement .)
    SIGNED          reduce using rule 223 (basic_statement -> forever_statement .)
    SUPPLY0         reduce using rule 223 (basic_statement -> forever_statement .)
    SUPPLY1         reduce using rule 223 (basic_statement -> forever_statement .)
    ENDGENERATE     reduce using rule 223 (basic_statement -> forever_statement .)
    ELSE            reduce using rule 223 (basic_statement -> forever_statement .)
    JOIN            reduce using rule 223 (basic_statement -> forever_statement .)
    ENDTASK         reduce using rule 223 (basic_statement -> forever_statement .)
    ENDFUNCTION     reduce using rule 223 (basic_statement -> forever_statement .)


state 173

    (274) case_statement -> CASE . LPAREN case_comp RPAREN casecontent_statements ENDCASE

    LPAREN          shift and go to state 324


state 174

    (218) basic_statement -> casex_statement .

    END             reduce using rule 218 (basic_statement -> casex_statement .)
    IF              reduce using rule 218 (basic_statement -> casex_statement .)
    CASE            reduce using rule 218 (basic_statement -> casex_statement .)
    CASEX           reduce using rule 218 (basic_statement -> casex_statement .)
    FOR             reduce using rule 218 (basic_statement -> casex_statement .)
    WHILE           reduce using rule 218 (basic_statement -> casex_statement .)
    WAIT            reduce using rule 218 (basic_statement -> casex_statement .)
    FOREVER         reduce using rule 218 (basic_statement -> casex_statement .)
    BEGIN           reduce using rule 218 (basic_statement -> casex_statement .)
    FORK            reduce using rule 218 (basic_statement -> casex_statement .)
    DELAY           reduce using rule 218 (basic_statement -> casex_statement .)
    AT              reduce using rule 218 (basic_statement -> casex_statement .)
    DOLLER          reduce using rule 218 (basic_statement -> casex_statement .)
    DISABLE         reduce using rule 218 (basic_statement -> casex_statement .)
    LBRACE          reduce using rule 218 (basic_statement -> casex_statement .)
    ID              reduce using rule 218 (basic_statement -> casex_statement .)
    SEMICOLON       reduce using rule 218 (basic_statement -> casex_statement .)
    ENDCASE         reduce using rule 218 (basic_statement -> casex_statement .)
    DEFAULT         reduce using rule 218 (basic_statement -> casex_statement .)
    MINUS           reduce using rule 218 (basic_statement -> casex_statement .)
    PLUS            reduce using rule 218 (basic_statement -> casex_statement .)
    LNOT            reduce using rule 218 (basic_statement -> casex_statement .)
    NOT             reduce using rule 218 (basic_statement -> casex_statement .)
    AND             reduce using rule 218 (basic_statement -> casex_statement .)
    NAND            reduce using rule 218 (basic_statement -> casex_statement .)
    NOR             reduce using rule 218 (basic_statement -> casex_statement .)
    OR              reduce using rule 218 (basic_statement -> casex_statement .)
    XOR             reduce using rule 218 (basic_statement -> casex_statement .)
    XNOR            reduce using rule 218 (basic_statement -> casex_statement .)
    LPAREN          reduce using rule 218 (basic_statement -> casex_statement .)
    INTNUMBER_DEC   reduce using rule 218 (basic_statement -> casex_statement .)
    SIGNED_INTNUMBER_DEC reduce using rule 218 (basic_statement -> casex_statement .)
    INTNUMBER_BIN   reduce using rule 218 (basic_statement -> casex_statement .)
    SIGNED_INTNUMBER_BIN reduce using rule 218 (basic_statement -> casex_statement .)
    INTNUMBER_OCT   reduce using rule 218 (basic_statement -> casex_statement .)
    SIGNED_INTNUMBER_OCT reduce using rule 218 (basic_statement -> casex_statement .)
    INTNUMBER_HEX   reduce using rule 218 (basic_statement -> casex_statement .)
    SIGNED_INTNUMBER_HEX reduce using rule 218 (basic_statement -> casex_statement .)
    FLOATNUMBER     reduce using rule 218 (basic_statement -> casex_statement .)
    STRING_LITERAL  reduce using rule 218 (basic_statement -> casex_statement .)
    ENDMODULE       reduce using rule 218 (basic_statement -> casex_statement .)
    GENERATE        reduce using rule 218 (basic_statement -> casex_statement .)
    INTEGER         reduce using rule 218 (basic_statement -> casex_statement .)
    REAL            reduce using rule 218 (basic_statement -> casex_statement .)
    PARAMETER       reduce using rule 218 (basic_statement -> casex_statement .)
    LOCALPARAM      reduce using rule 218 (basic_statement -> casex_statement .)
    GENVAR          reduce using rule 218 (basic_statement -> casex_statement .)
    ASSIGN          reduce using rule 218 (basic_statement -> casex_statement .)
    ALWAYS          reduce using rule 218 (basic_statement -> casex_statement .)
    INITIAL         reduce using rule 218 (basic_statement -> casex_statement .)
    SENS_OR         reduce using rule 218 (basic_statement -> casex_statement .)
    FUNCTION        reduce using rule 218 (basic_statement -> casex_statement .)
    TASK            reduce using rule 218 (basic_statement -> casex_statement .)
    INPUT           reduce using rule 218 (basic_statement -> casex_statement .)
    OUTPUT          reduce using rule 218 (basic_statement -> casex_statement .)
    INOUT           reduce using rule 218 (basic_statement -> casex_statement .)
    TRI             reduce using rule 218 (basic_statement -> casex_statement .)
    REG             reduce using rule 218 (basic_statement -> casex_statement .)
    WIRE            reduce using rule 218 (basic_statement -> casex_statement .)
    SIGNED          reduce using rule 218 (basic_statement -> casex_statement .)
    SUPPLY0         reduce using rule 218 (basic_statement -> casex_statement .)
    SUPPLY1         reduce using rule 218 (basic_statement -> casex_statement .)
    ENDGENERATE     reduce using rule 218 (basic_statement -> casex_statement .)
    ELSE            reduce using rule 218 (basic_statement -> casex_statement .)
    JOIN            reduce using rule 218 (basic_statement -> casex_statement .)
    ENDTASK         reduce using rule 218 (basic_statement -> casex_statement .)
    ENDFUNCTION     reduce using rule 218 (basic_statement -> casex_statement .)


state 175

    (239) block -> BEGIN . block_statements END
    (240) block -> BEGIN . END
    (244) namedblock -> BEGIN . COLON ID namedblock_statements END
    (245) namedblock -> BEGIN . COLON ID END
    (241) block_statements -> . block_statements block_statement
    (242) block_statements -> . block_statement
    (243) block_statement -> . basic_statement
    (216) basic_statement -> . if_statement
    (217) basic_statement -> . case_statement
    (218) basic_statement -> . casex_statement
    (219) basic_statement -> . for_statement
    (220) basic_statement -> . while_statement
    (221) basic_statement -> . event_statement
    (222) basic_statement -> . wait_statement
    (223) basic_statement -> . forever_statement
    (224) basic_statement -> . block
    (225) basic_statement -> . namedblock
    (226) basic_statement -> . parallelblock
    (227) basic_statement -> . blocking_substitution
    (228) basic_statement -> . nonblocking_substitution
    (229) basic_statement -> . single_statement
    (256) if_statement -> . IF LPAREN cond RPAREN true_statement ELSE else_statement
    (257) if_statement -> . IF LPAREN cond RPAREN true_statement
    (258) if_statement -> . delays IF LPAREN cond RPAREN true_statement ELSE else_statement
    (259) if_statement -> . delays IF LPAREN cond RPAREN true_statement
    (274) case_statement -> . CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (275) casex_statement -> . CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (264) for_statement -> . FOR LPAREN forpre forcond forpost RPAREN forcontent_statement
    (272) while_statement -> . WHILE LPAREN cond RPAREN whilecontent_statement
    (285) event_statement -> . senslist SEMICOLON
    (286) wait_statement -> . WAIT LPAREN cond RPAREN waitcontent_statement
    (289) forever_statement -> . FOREVER basic_statement
    (239) block -> . BEGIN block_statements END
    (240) block -> . BEGIN END
    (244) namedblock -> . BEGIN COLON ID namedblock_statements END
    (245) namedblock -> . BEGIN COLON ID END
    (254) parallelblock -> . FORK block_statements JOIN
    (255) parallelblock -> . FORK JOIN
    (231) blocking_substitution -> . delays lvalue EQUALS delays rvalue SEMICOLON
    (233) nonblocking_substitution -> . delays lvalue LE delays rvalue SEMICOLON
    (390) single_statement -> . DELAY expression SEMICOLON
    (391) single_statement -> . systemcall SEMICOLON
    (392) single_statement -> . disable SEMICOLON
    (234) delays -> . DELAY LPAREN expression RPAREN
    (235) delays -> . DELAY identifier
    (236) delays -> . DELAY intnumber
    (237) delays -> . DELAY floatnumber
    (238) delays -> . empty
    (197) senslist -> . AT LPAREN edgesigs RPAREN
    (204) senslist -> . empty
    (205) senslist -> . AT levelsig
    (206) senslist -> . AT LPAREN levelsigs RPAREN
    (214) senslist -> . AT TIMES
    (215) senslist -> . AT LPAREN TIMES RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (389) disable -> . DISABLE ID
    (393) empty -> .

  ! shift/reduce conflict for IF resolved as shift
    END             shift and go to state 327
    COLON           shift and go to state 325
    IF              shift and go to state 195
    CASE            shift and go to state 173
    CASEX           shift and go to state 178
    FOR             shift and go to state 187
    WHILE           shift and go to state 171
    WAIT            shift and go to state 168
    FOREVER         shift and go to state 167
    BEGIN           shift and go to state 175
    FORK            shift and go to state 166
    DELAY           shift and go to state 170
    AT              shift and go to state 193
    DOLLER          shift and go to state 54
    DISABLE         shift and go to state 180
    LBRACE          reduce using rule 393 (empty -> .)
    ID              reduce using rule 393 (empty -> .)
    SEMICOLON       reduce using rule 393 (empty -> .)

  ! IF              [ reduce using rule 393 (empty -> .) ]

    parallelblock                  shift and go to state 169
    blocking_substitution          shift and go to state 177
    forever_statement              shift and go to state 172
    casex_statement                shift and go to state 174
    delays                         shift and go to state 176
    block_statement                shift and go to state 313
    while_statement                shift and go to state 179
    systemcall                     shift and go to state 181
    if_statement                   shift and go to state 182
    nonblocking_substitution       shift and go to state 183
    empty                          shift and go to state 184
    basic_statement                shift and go to state 314
    block_statements               shift and go to state 326
    for_statement                  shift and go to state 186
    event_statement                shift and go to state 189
    wait_statement                 shift and go to state 190
    case_statement                 shift and go to state 191
    disable                        shift and go to state 192
    namedblock                     shift and go to state 194
    senslist                       shift and go to state 196
    single_statement               shift and go to state 197
    block                          shift and go to state 198

state 176

    (258) if_statement -> delays . IF LPAREN cond RPAREN true_statement ELSE else_statement
    (259) if_statement -> delays . IF LPAREN cond RPAREN true_statement
    (231) blocking_substitution -> delays . lvalue EQUALS delays rvalue SEMICOLON
    (233) nonblocking_substitution -> delays . lvalue LE delays rvalue SEMICOLON
    (122) lvalue -> . lpartselect
    (123) lvalue -> . lpointer
    (124) lvalue -> . lconcat
    (125) lvalue -> . identifier
    (108) lpartselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (109) lpartselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (110) lpartselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (111) lpartselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (112) lpartselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (113) lpartselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (114) lpointer -> . pointer
    (115) lconcat -> . LBRACE lconcatlist RBRACE
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT

    IF              shift and go to state 329
    LBRACE          shift and go to state 231
    ID              shift and go to state 46

    lconcat                        shift and go to state 229
    lpartselect                    shift and go to state 225
    lvalue                         shift and go to state 328
    lpointer                       shift and go to state 223
    scope                          shift and go to state 44
    identifier                     shift and go to state 232
    pointer                        shift and go to state 224

state 177

    (227) basic_statement -> blocking_substitution .

    END             reduce using rule 227 (basic_statement -> blocking_substitution .)
    IF              reduce using rule 227 (basic_statement -> blocking_substitution .)
    CASE            reduce using rule 227 (basic_statement -> blocking_substitution .)
    CASEX           reduce using rule 227 (basic_statement -> blocking_substitution .)
    FOR             reduce using rule 227 (basic_statement -> blocking_substitution .)
    WHILE           reduce using rule 227 (basic_statement -> blocking_substitution .)
    WAIT            reduce using rule 227 (basic_statement -> blocking_substitution .)
    FOREVER         reduce using rule 227 (basic_statement -> blocking_substitution .)
    BEGIN           reduce using rule 227 (basic_statement -> blocking_substitution .)
    FORK            reduce using rule 227 (basic_statement -> blocking_substitution .)
    DELAY           reduce using rule 227 (basic_statement -> blocking_substitution .)
    AT              reduce using rule 227 (basic_statement -> blocking_substitution .)
    DOLLER          reduce using rule 227 (basic_statement -> blocking_substitution .)
    DISABLE         reduce using rule 227 (basic_statement -> blocking_substitution .)
    LBRACE          reduce using rule 227 (basic_statement -> blocking_substitution .)
    ID              reduce using rule 227 (basic_statement -> blocking_substitution .)
    SEMICOLON       reduce using rule 227 (basic_statement -> blocking_substitution .)
    ENDCASE         reduce using rule 227 (basic_statement -> blocking_substitution .)
    DEFAULT         reduce using rule 227 (basic_statement -> blocking_substitution .)
    MINUS           reduce using rule 227 (basic_statement -> blocking_substitution .)
    PLUS            reduce using rule 227 (basic_statement -> blocking_substitution .)
    LNOT            reduce using rule 227 (basic_statement -> blocking_substitution .)
    NOT             reduce using rule 227 (basic_statement -> blocking_substitution .)
    AND             reduce using rule 227 (basic_statement -> blocking_substitution .)
    NAND            reduce using rule 227 (basic_statement -> blocking_substitution .)
    NOR             reduce using rule 227 (basic_statement -> blocking_substitution .)
    OR              reduce using rule 227 (basic_statement -> blocking_substitution .)
    XOR             reduce using rule 227 (basic_statement -> blocking_substitution .)
    XNOR            reduce using rule 227 (basic_statement -> blocking_substitution .)
    LPAREN          reduce using rule 227 (basic_statement -> blocking_substitution .)
    INTNUMBER_DEC   reduce using rule 227 (basic_statement -> blocking_substitution .)
    SIGNED_INTNUMBER_DEC reduce using rule 227 (basic_statement -> blocking_substitution .)
    INTNUMBER_BIN   reduce using rule 227 (basic_statement -> blocking_substitution .)
    SIGNED_INTNUMBER_BIN reduce using rule 227 (basic_statement -> blocking_substitution .)
    INTNUMBER_OCT   reduce using rule 227 (basic_statement -> blocking_substitution .)
    SIGNED_INTNUMBER_OCT reduce using rule 227 (basic_statement -> blocking_substitution .)
    INTNUMBER_HEX   reduce using rule 227 (basic_statement -> blocking_substitution .)
    SIGNED_INTNUMBER_HEX reduce using rule 227 (basic_statement -> blocking_substitution .)
    FLOATNUMBER     reduce using rule 227 (basic_statement -> blocking_substitution .)
    STRING_LITERAL  reduce using rule 227 (basic_statement -> blocking_substitution .)
    ENDMODULE       reduce using rule 227 (basic_statement -> blocking_substitution .)
    GENERATE        reduce using rule 227 (basic_statement -> blocking_substitution .)
    INTEGER         reduce using rule 227 (basic_statement -> blocking_substitution .)
    REAL            reduce using rule 227 (basic_statement -> blocking_substitution .)
    PARAMETER       reduce using rule 227 (basic_statement -> blocking_substitution .)
    LOCALPARAM      reduce using rule 227 (basic_statement -> blocking_substitution .)
    GENVAR          reduce using rule 227 (basic_statement -> blocking_substitution .)
    ASSIGN          reduce using rule 227 (basic_statement -> blocking_substitution .)
    ALWAYS          reduce using rule 227 (basic_statement -> blocking_substitution .)
    INITIAL         reduce using rule 227 (basic_statement -> blocking_substitution .)
    SENS_OR         reduce using rule 227 (basic_statement -> blocking_substitution .)
    FUNCTION        reduce using rule 227 (basic_statement -> blocking_substitution .)
    TASK            reduce using rule 227 (basic_statement -> blocking_substitution .)
    INPUT           reduce using rule 227 (basic_statement -> blocking_substitution .)
    OUTPUT          reduce using rule 227 (basic_statement -> blocking_substitution .)
    INOUT           reduce using rule 227 (basic_statement -> blocking_substitution .)
    TRI             reduce using rule 227 (basic_statement -> blocking_substitution .)
    REG             reduce using rule 227 (basic_statement -> blocking_substitution .)
    WIRE            reduce using rule 227 (basic_statement -> blocking_substitution .)
    SIGNED          reduce using rule 227 (basic_statement -> blocking_substitution .)
    SUPPLY0         reduce using rule 227 (basic_statement -> blocking_substitution .)
    SUPPLY1         reduce using rule 227 (basic_statement -> blocking_substitution .)
    ENDGENERATE     reduce using rule 227 (basic_statement -> blocking_substitution .)
    ELSE            reduce using rule 227 (basic_statement -> blocking_substitution .)
    JOIN            reduce using rule 227 (basic_statement -> blocking_substitution .)
    ENDTASK         reduce using rule 227 (basic_statement -> blocking_substitution .)
    ENDFUNCTION     reduce using rule 227 (basic_statement -> blocking_substitution .)


state 178

    (275) casex_statement -> CASEX . LPAREN case_comp RPAREN casecontent_statements ENDCASE

    LPAREN          shift and go to state 330


state 179

    (220) basic_statement -> while_statement .

    END             reduce using rule 220 (basic_statement -> while_statement .)
    IF              reduce using rule 220 (basic_statement -> while_statement .)
    CASE            reduce using rule 220 (basic_statement -> while_statement .)
    CASEX           reduce using rule 220 (basic_statement -> while_statement .)
    FOR             reduce using rule 220 (basic_statement -> while_statement .)
    WHILE           reduce using rule 220 (basic_statement -> while_statement .)
    WAIT            reduce using rule 220 (basic_statement -> while_statement .)
    FOREVER         reduce using rule 220 (basic_statement -> while_statement .)
    BEGIN           reduce using rule 220 (basic_statement -> while_statement .)
    FORK            reduce using rule 220 (basic_statement -> while_statement .)
    DELAY           reduce using rule 220 (basic_statement -> while_statement .)
    AT              reduce using rule 220 (basic_statement -> while_statement .)
    DOLLER          reduce using rule 220 (basic_statement -> while_statement .)
    DISABLE         reduce using rule 220 (basic_statement -> while_statement .)
    LBRACE          reduce using rule 220 (basic_statement -> while_statement .)
    ID              reduce using rule 220 (basic_statement -> while_statement .)
    SEMICOLON       reduce using rule 220 (basic_statement -> while_statement .)
    ENDCASE         reduce using rule 220 (basic_statement -> while_statement .)
    DEFAULT         reduce using rule 220 (basic_statement -> while_statement .)
    MINUS           reduce using rule 220 (basic_statement -> while_statement .)
    PLUS            reduce using rule 220 (basic_statement -> while_statement .)
    LNOT            reduce using rule 220 (basic_statement -> while_statement .)
    NOT             reduce using rule 220 (basic_statement -> while_statement .)
    AND             reduce using rule 220 (basic_statement -> while_statement .)
    NAND            reduce using rule 220 (basic_statement -> while_statement .)
    NOR             reduce using rule 220 (basic_statement -> while_statement .)
    OR              reduce using rule 220 (basic_statement -> while_statement .)
    XOR             reduce using rule 220 (basic_statement -> while_statement .)
    XNOR            reduce using rule 220 (basic_statement -> while_statement .)
    LPAREN          reduce using rule 220 (basic_statement -> while_statement .)
    INTNUMBER_DEC   reduce using rule 220 (basic_statement -> while_statement .)
    SIGNED_INTNUMBER_DEC reduce using rule 220 (basic_statement -> while_statement .)
    INTNUMBER_BIN   reduce using rule 220 (basic_statement -> while_statement .)
    SIGNED_INTNUMBER_BIN reduce using rule 220 (basic_statement -> while_statement .)
    INTNUMBER_OCT   reduce using rule 220 (basic_statement -> while_statement .)
    SIGNED_INTNUMBER_OCT reduce using rule 220 (basic_statement -> while_statement .)
    INTNUMBER_HEX   reduce using rule 220 (basic_statement -> while_statement .)
    SIGNED_INTNUMBER_HEX reduce using rule 220 (basic_statement -> while_statement .)
    FLOATNUMBER     reduce using rule 220 (basic_statement -> while_statement .)
    STRING_LITERAL  reduce using rule 220 (basic_statement -> while_statement .)
    ENDMODULE       reduce using rule 220 (basic_statement -> while_statement .)
    GENERATE        reduce using rule 220 (basic_statement -> while_statement .)
    INTEGER         reduce using rule 220 (basic_statement -> while_statement .)
    REAL            reduce using rule 220 (basic_statement -> while_statement .)
    PARAMETER       reduce using rule 220 (basic_statement -> while_statement .)
    LOCALPARAM      reduce using rule 220 (basic_statement -> while_statement .)
    GENVAR          reduce using rule 220 (basic_statement -> while_statement .)
    ASSIGN          reduce using rule 220 (basic_statement -> while_statement .)
    ALWAYS          reduce using rule 220 (basic_statement -> while_statement .)
    INITIAL         reduce using rule 220 (basic_statement -> while_statement .)
    SENS_OR         reduce using rule 220 (basic_statement -> while_statement .)
    FUNCTION        reduce using rule 220 (basic_statement -> while_statement .)
    TASK            reduce using rule 220 (basic_statement -> while_statement .)
    INPUT           reduce using rule 220 (basic_statement -> while_statement .)
    OUTPUT          reduce using rule 220 (basic_statement -> while_statement .)
    INOUT           reduce using rule 220 (basic_statement -> while_statement .)
    TRI             reduce using rule 220 (basic_statement -> while_statement .)
    REG             reduce using rule 220 (basic_statement -> while_statement .)
    WIRE            reduce using rule 220 (basic_statement -> while_statement .)
    SIGNED          reduce using rule 220 (basic_statement -> while_statement .)
    SUPPLY0         reduce using rule 220 (basic_statement -> while_statement .)
    SUPPLY1         reduce using rule 220 (basic_statement -> while_statement .)
    ENDGENERATE     reduce using rule 220 (basic_statement -> while_statement .)
    ELSE            reduce using rule 220 (basic_statement -> while_statement .)
    JOIN            reduce using rule 220 (basic_statement -> while_statement .)
    ENDTASK         reduce using rule 220 (basic_statement -> while_statement .)
    ENDFUNCTION     reduce using rule 220 (basic_statement -> while_statement .)


state 180

    (389) disable -> DISABLE . ID

    ID              shift and go to state 331


state 181

    (391) single_statement -> systemcall . SEMICOLON

    SEMICOLON       shift and go to state 332


state 182

    (216) basic_statement -> if_statement .

    END             reduce using rule 216 (basic_statement -> if_statement .)
    IF              reduce using rule 216 (basic_statement -> if_statement .)
    CASE            reduce using rule 216 (basic_statement -> if_statement .)
    CASEX           reduce using rule 216 (basic_statement -> if_statement .)
    FOR             reduce using rule 216 (basic_statement -> if_statement .)
    WHILE           reduce using rule 216 (basic_statement -> if_statement .)
    WAIT            reduce using rule 216 (basic_statement -> if_statement .)
    FOREVER         reduce using rule 216 (basic_statement -> if_statement .)
    BEGIN           reduce using rule 216 (basic_statement -> if_statement .)
    FORK            reduce using rule 216 (basic_statement -> if_statement .)
    DELAY           reduce using rule 216 (basic_statement -> if_statement .)
    AT              reduce using rule 216 (basic_statement -> if_statement .)
    DOLLER          reduce using rule 216 (basic_statement -> if_statement .)
    DISABLE         reduce using rule 216 (basic_statement -> if_statement .)
    LBRACE          reduce using rule 216 (basic_statement -> if_statement .)
    ID              reduce using rule 216 (basic_statement -> if_statement .)
    SEMICOLON       reduce using rule 216 (basic_statement -> if_statement .)
    ENDCASE         reduce using rule 216 (basic_statement -> if_statement .)
    DEFAULT         reduce using rule 216 (basic_statement -> if_statement .)
    MINUS           reduce using rule 216 (basic_statement -> if_statement .)
    PLUS            reduce using rule 216 (basic_statement -> if_statement .)
    LNOT            reduce using rule 216 (basic_statement -> if_statement .)
    NOT             reduce using rule 216 (basic_statement -> if_statement .)
    AND             reduce using rule 216 (basic_statement -> if_statement .)
    NAND            reduce using rule 216 (basic_statement -> if_statement .)
    NOR             reduce using rule 216 (basic_statement -> if_statement .)
    OR              reduce using rule 216 (basic_statement -> if_statement .)
    XOR             reduce using rule 216 (basic_statement -> if_statement .)
    XNOR            reduce using rule 216 (basic_statement -> if_statement .)
    LPAREN          reduce using rule 216 (basic_statement -> if_statement .)
    INTNUMBER_DEC   reduce using rule 216 (basic_statement -> if_statement .)
    SIGNED_INTNUMBER_DEC reduce using rule 216 (basic_statement -> if_statement .)
    INTNUMBER_BIN   reduce using rule 216 (basic_statement -> if_statement .)
    SIGNED_INTNUMBER_BIN reduce using rule 216 (basic_statement -> if_statement .)
    INTNUMBER_OCT   reduce using rule 216 (basic_statement -> if_statement .)
    SIGNED_INTNUMBER_OCT reduce using rule 216 (basic_statement -> if_statement .)
    INTNUMBER_HEX   reduce using rule 216 (basic_statement -> if_statement .)
    SIGNED_INTNUMBER_HEX reduce using rule 216 (basic_statement -> if_statement .)
    FLOATNUMBER     reduce using rule 216 (basic_statement -> if_statement .)
    STRING_LITERAL  reduce using rule 216 (basic_statement -> if_statement .)
    ENDMODULE       reduce using rule 216 (basic_statement -> if_statement .)
    GENERATE        reduce using rule 216 (basic_statement -> if_statement .)
    INTEGER         reduce using rule 216 (basic_statement -> if_statement .)
    REAL            reduce using rule 216 (basic_statement -> if_statement .)
    PARAMETER       reduce using rule 216 (basic_statement -> if_statement .)
    LOCALPARAM      reduce using rule 216 (basic_statement -> if_statement .)
    GENVAR          reduce using rule 216 (basic_statement -> if_statement .)
    ASSIGN          reduce using rule 216 (basic_statement -> if_statement .)
    ALWAYS          reduce using rule 216 (basic_statement -> if_statement .)
    INITIAL         reduce using rule 216 (basic_statement -> if_statement .)
    SENS_OR         reduce using rule 216 (basic_statement -> if_statement .)
    FUNCTION        reduce using rule 216 (basic_statement -> if_statement .)
    TASK            reduce using rule 216 (basic_statement -> if_statement .)
    INPUT           reduce using rule 216 (basic_statement -> if_statement .)
    OUTPUT          reduce using rule 216 (basic_statement -> if_statement .)
    INOUT           reduce using rule 216 (basic_statement -> if_statement .)
    TRI             reduce using rule 216 (basic_statement -> if_statement .)
    REG             reduce using rule 216 (basic_statement -> if_statement .)
    WIRE            reduce using rule 216 (basic_statement -> if_statement .)
    SIGNED          reduce using rule 216 (basic_statement -> if_statement .)
    SUPPLY0         reduce using rule 216 (basic_statement -> if_statement .)
    SUPPLY1         reduce using rule 216 (basic_statement -> if_statement .)
    ENDGENERATE     reduce using rule 216 (basic_statement -> if_statement .)
    ELSE            reduce using rule 216 (basic_statement -> if_statement .)
    JOIN            reduce using rule 216 (basic_statement -> if_statement .)
    ENDTASK         reduce using rule 216 (basic_statement -> if_statement .)
    ENDFUNCTION     reduce using rule 216 (basic_statement -> if_statement .)


state 183

    (228) basic_statement -> nonblocking_substitution .

    END             reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    IF              reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    CASE            reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    CASEX           reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    FOR             reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    WHILE           reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    WAIT            reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    FOREVER         reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    BEGIN           reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    FORK            reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    DELAY           reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    AT              reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    DOLLER          reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    DISABLE         reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    LBRACE          reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    ID              reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    SEMICOLON       reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    ENDCASE         reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    DEFAULT         reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    MINUS           reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    PLUS            reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    LNOT            reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    NOT             reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    AND             reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    NAND            reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    NOR             reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    OR              reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    XOR             reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    XNOR            reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    LPAREN          reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    INTNUMBER_DEC   reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    SIGNED_INTNUMBER_DEC reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    INTNUMBER_BIN   reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    SIGNED_INTNUMBER_BIN reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    INTNUMBER_OCT   reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    SIGNED_INTNUMBER_OCT reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    INTNUMBER_HEX   reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    SIGNED_INTNUMBER_HEX reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    FLOATNUMBER     reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    STRING_LITERAL  reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    ENDMODULE       reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    GENERATE        reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    INTEGER         reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    REAL            reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    PARAMETER       reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    LOCALPARAM      reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    GENVAR          reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    ASSIGN          reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    ALWAYS          reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    INITIAL         reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    SENS_OR         reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    FUNCTION        reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    TASK            reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    INPUT           reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    OUTPUT          reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    INOUT           reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    TRI             reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    REG             reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    WIRE            reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    SIGNED          reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    SUPPLY0         reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    SUPPLY1         reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    ENDGENERATE     reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    ELSE            reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    JOIN            reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    ENDTASK         reduce using rule 228 (basic_statement -> nonblocking_substitution .)
    ENDFUNCTION     reduce using rule 228 (basic_statement -> nonblocking_substitution .)


state 184

    (238) delays -> empty .
    (204) senslist -> empty .

    IF              reduce using rule 238 (delays -> empty .)
    LBRACE          reduce using rule 238 (delays -> empty .)
    ID              reduce using rule 238 (delays -> empty .)
    SEMICOLON       reduce using rule 204 (senslist -> empty .)


state 185

    (284) initial_statement -> basic_statement .

    ENDMODULE       reduce using rule 284 (initial_statement -> basic_statement .)
    GENERATE        reduce using rule 284 (initial_statement -> basic_statement .)
    INTEGER         reduce using rule 284 (initial_statement -> basic_statement .)
    REAL            reduce using rule 284 (initial_statement -> basic_statement .)
    PARAMETER       reduce using rule 284 (initial_statement -> basic_statement .)
    LOCALPARAM      reduce using rule 284 (initial_statement -> basic_statement .)
    GENVAR          reduce using rule 284 (initial_statement -> basic_statement .)
    ASSIGN          reduce using rule 284 (initial_statement -> basic_statement .)
    ALWAYS          reduce using rule 284 (initial_statement -> basic_statement .)
    INITIAL         reduce using rule 284 (initial_statement -> basic_statement .)
    ID              reduce using rule 284 (initial_statement -> basic_statement .)
    SENS_OR         reduce using rule 284 (initial_statement -> basic_statement .)
    FUNCTION        reduce using rule 284 (initial_statement -> basic_statement .)
    TASK            reduce using rule 284 (initial_statement -> basic_statement .)
    LPAREN          reduce using rule 284 (initial_statement -> basic_statement .)
    INPUT           reduce using rule 284 (initial_statement -> basic_statement .)
    OUTPUT          reduce using rule 284 (initial_statement -> basic_statement .)
    INOUT           reduce using rule 284 (initial_statement -> basic_statement .)
    TRI             reduce using rule 284 (initial_statement -> basic_statement .)
    REG             reduce using rule 284 (initial_statement -> basic_statement .)
    WIRE            reduce using rule 284 (initial_statement -> basic_statement .)
    SIGNED          reduce using rule 284 (initial_statement -> basic_statement .)
    SUPPLY0         reduce using rule 284 (initial_statement -> basic_statement .)
    SUPPLY1         reduce using rule 284 (initial_statement -> basic_statement .)
    ENDGENERATE     reduce using rule 284 (initial_statement -> basic_statement .)
    IF              reduce using rule 284 (initial_statement -> basic_statement .)
    FOR             reduce using rule 284 (initial_statement -> basic_statement .)
    ELSE            reduce using rule 284 (initial_statement -> basic_statement .)
    END             reduce using rule 284 (initial_statement -> basic_statement .)


state 186

    (219) basic_statement -> for_statement .

    END             reduce using rule 219 (basic_statement -> for_statement .)
    IF              reduce using rule 219 (basic_statement -> for_statement .)
    CASE            reduce using rule 219 (basic_statement -> for_statement .)
    CASEX           reduce using rule 219 (basic_statement -> for_statement .)
    FOR             reduce using rule 219 (basic_statement -> for_statement .)
    WHILE           reduce using rule 219 (basic_statement -> for_statement .)
    WAIT            reduce using rule 219 (basic_statement -> for_statement .)
    FOREVER         reduce using rule 219 (basic_statement -> for_statement .)
    BEGIN           reduce using rule 219 (basic_statement -> for_statement .)
    FORK            reduce using rule 219 (basic_statement -> for_statement .)
    DELAY           reduce using rule 219 (basic_statement -> for_statement .)
    AT              reduce using rule 219 (basic_statement -> for_statement .)
    DOLLER          reduce using rule 219 (basic_statement -> for_statement .)
    DISABLE         reduce using rule 219 (basic_statement -> for_statement .)
    LBRACE          reduce using rule 219 (basic_statement -> for_statement .)
    ID              reduce using rule 219 (basic_statement -> for_statement .)
    SEMICOLON       reduce using rule 219 (basic_statement -> for_statement .)
    ENDCASE         reduce using rule 219 (basic_statement -> for_statement .)
    DEFAULT         reduce using rule 219 (basic_statement -> for_statement .)
    MINUS           reduce using rule 219 (basic_statement -> for_statement .)
    PLUS            reduce using rule 219 (basic_statement -> for_statement .)
    LNOT            reduce using rule 219 (basic_statement -> for_statement .)
    NOT             reduce using rule 219 (basic_statement -> for_statement .)
    AND             reduce using rule 219 (basic_statement -> for_statement .)
    NAND            reduce using rule 219 (basic_statement -> for_statement .)
    NOR             reduce using rule 219 (basic_statement -> for_statement .)
    OR              reduce using rule 219 (basic_statement -> for_statement .)
    XOR             reduce using rule 219 (basic_statement -> for_statement .)
    XNOR            reduce using rule 219 (basic_statement -> for_statement .)
    LPAREN          reduce using rule 219 (basic_statement -> for_statement .)
    INTNUMBER_DEC   reduce using rule 219 (basic_statement -> for_statement .)
    SIGNED_INTNUMBER_DEC reduce using rule 219 (basic_statement -> for_statement .)
    INTNUMBER_BIN   reduce using rule 219 (basic_statement -> for_statement .)
    SIGNED_INTNUMBER_BIN reduce using rule 219 (basic_statement -> for_statement .)
    INTNUMBER_OCT   reduce using rule 219 (basic_statement -> for_statement .)
    SIGNED_INTNUMBER_OCT reduce using rule 219 (basic_statement -> for_statement .)
    INTNUMBER_HEX   reduce using rule 219 (basic_statement -> for_statement .)
    SIGNED_INTNUMBER_HEX reduce using rule 219 (basic_statement -> for_statement .)
    FLOATNUMBER     reduce using rule 219 (basic_statement -> for_statement .)
    STRING_LITERAL  reduce using rule 219 (basic_statement -> for_statement .)
    ENDMODULE       reduce using rule 219 (basic_statement -> for_statement .)
    GENERATE        reduce using rule 219 (basic_statement -> for_statement .)
    INTEGER         reduce using rule 219 (basic_statement -> for_statement .)
    REAL            reduce using rule 219 (basic_statement -> for_statement .)
    PARAMETER       reduce using rule 219 (basic_statement -> for_statement .)
    LOCALPARAM      reduce using rule 219 (basic_statement -> for_statement .)
    GENVAR          reduce using rule 219 (basic_statement -> for_statement .)
    ASSIGN          reduce using rule 219 (basic_statement -> for_statement .)
    ALWAYS          reduce using rule 219 (basic_statement -> for_statement .)
    INITIAL         reduce using rule 219 (basic_statement -> for_statement .)
    SENS_OR         reduce using rule 219 (basic_statement -> for_statement .)
    FUNCTION        reduce using rule 219 (basic_statement -> for_statement .)
    TASK            reduce using rule 219 (basic_statement -> for_statement .)
    INPUT           reduce using rule 219 (basic_statement -> for_statement .)
    OUTPUT          reduce using rule 219 (basic_statement -> for_statement .)
    INOUT           reduce using rule 219 (basic_statement -> for_statement .)
    TRI             reduce using rule 219 (basic_statement -> for_statement .)
    REG             reduce using rule 219 (basic_statement -> for_statement .)
    WIRE            reduce using rule 219 (basic_statement -> for_statement .)
    SIGNED          reduce using rule 219 (basic_statement -> for_statement .)
    SUPPLY0         reduce using rule 219 (basic_statement -> for_statement .)
    SUPPLY1         reduce using rule 219 (basic_statement -> for_statement .)
    ENDGENERATE     reduce using rule 219 (basic_statement -> for_statement .)
    ELSE            reduce using rule 219 (basic_statement -> for_statement .)
    JOIN            reduce using rule 219 (basic_statement -> for_statement .)
    ENDTASK         reduce using rule 219 (basic_statement -> for_statement .)
    ENDFUNCTION     reduce using rule 219 (basic_statement -> for_statement .)


state 187

    (264) for_statement -> FOR . LPAREN forpre forcond forpost RPAREN forcontent_statement

    LPAREN          shift and go to state 333


state 188

    (283) initial -> INITIAL initial_statement .

    END             reduce using rule 283 (initial -> INITIAL initial_statement .)
    IF              reduce using rule 283 (initial -> INITIAL initial_statement .)
    FOR             reduce using rule 283 (initial -> INITIAL initial_statement .)
    INTEGER         reduce using rule 283 (initial -> INITIAL initial_statement .)
    REAL            reduce using rule 283 (initial -> INITIAL initial_statement .)
    PARAMETER       reduce using rule 283 (initial -> INITIAL initial_statement .)
    LOCALPARAM      reduce using rule 283 (initial -> INITIAL initial_statement .)
    GENVAR          reduce using rule 283 (initial -> INITIAL initial_statement .)
    ASSIGN          reduce using rule 283 (initial -> INITIAL initial_statement .)
    ALWAYS          reduce using rule 283 (initial -> INITIAL initial_statement .)
    INITIAL         reduce using rule 283 (initial -> INITIAL initial_statement .)
    ID              reduce using rule 283 (initial -> INITIAL initial_statement .)
    SENS_OR         reduce using rule 283 (initial -> INITIAL initial_statement .)
    FUNCTION        reduce using rule 283 (initial -> INITIAL initial_statement .)
    TASK            reduce using rule 283 (initial -> INITIAL initial_statement .)
    LPAREN          reduce using rule 283 (initial -> INITIAL initial_statement .)
    INPUT           reduce using rule 283 (initial -> INITIAL initial_statement .)
    OUTPUT          reduce using rule 283 (initial -> INITIAL initial_statement .)
    INOUT           reduce using rule 283 (initial -> INITIAL initial_statement .)
    TRI             reduce using rule 283 (initial -> INITIAL initial_statement .)
    REG             reduce using rule 283 (initial -> INITIAL initial_statement .)
    WIRE            reduce using rule 283 (initial -> INITIAL initial_statement .)
    SIGNED          reduce using rule 283 (initial -> INITIAL initial_statement .)
    SUPPLY0         reduce using rule 283 (initial -> INITIAL initial_statement .)
    SUPPLY1         reduce using rule 283 (initial -> INITIAL initial_statement .)
    ENDGENERATE     reduce using rule 283 (initial -> INITIAL initial_statement .)
    ENDMODULE       reduce using rule 283 (initial -> INITIAL initial_statement .)
    GENERATE        reduce using rule 283 (initial -> INITIAL initial_statement .)
    ELSE            reduce using rule 283 (initial -> INITIAL initial_statement .)


state 189

    (221) basic_statement -> event_statement .

    END             reduce using rule 221 (basic_statement -> event_statement .)
    IF              reduce using rule 221 (basic_statement -> event_statement .)
    CASE            reduce using rule 221 (basic_statement -> event_statement .)
    CASEX           reduce using rule 221 (basic_statement -> event_statement .)
    FOR             reduce using rule 221 (basic_statement -> event_statement .)
    WHILE           reduce using rule 221 (basic_statement -> event_statement .)
    WAIT            reduce using rule 221 (basic_statement -> event_statement .)
    FOREVER         reduce using rule 221 (basic_statement -> event_statement .)
    BEGIN           reduce using rule 221 (basic_statement -> event_statement .)
    FORK            reduce using rule 221 (basic_statement -> event_statement .)
    DELAY           reduce using rule 221 (basic_statement -> event_statement .)
    AT              reduce using rule 221 (basic_statement -> event_statement .)
    DOLLER          reduce using rule 221 (basic_statement -> event_statement .)
    DISABLE         reduce using rule 221 (basic_statement -> event_statement .)
    LBRACE          reduce using rule 221 (basic_statement -> event_statement .)
    ID              reduce using rule 221 (basic_statement -> event_statement .)
    SEMICOLON       reduce using rule 221 (basic_statement -> event_statement .)
    ENDCASE         reduce using rule 221 (basic_statement -> event_statement .)
    DEFAULT         reduce using rule 221 (basic_statement -> event_statement .)
    MINUS           reduce using rule 221 (basic_statement -> event_statement .)
    PLUS            reduce using rule 221 (basic_statement -> event_statement .)
    LNOT            reduce using rule 221 (basic_statement -> event_statement .)
    NOT             reduce using rule 221 (basic_statement -> event_statement .)
    AND             reduce using rule 221 (basic_statement -> event_statement .)
    NAND            reduce using rule 221 (basic_statement -> event_statement .)
    NOR             reduce using rule 221 (basic_statement -> event_statement .)
    OR              reduce using rule 221 (basic_statement -> event_statement .)
    XOR             reduce using rule 221 (basic_statement -> event_statement .)
    XNOR            reduce using rule 221 (basic_statement -> event_statement .)
    LPAREN          reduce using rule 221 (basic_statement -> event_statement .)
    INTNUMBER_DEC   reduce using rule 221 (basic_statement -> event_statement .)
    SIGNED_INTNUMBER_DEC reduce using rule 221 (basic_statement -> event_statement .)
    INTNUMBER_BIN   reduce using rule 221 (basic_statement -> event_statement .)
    SIGNED_INTNUMBER_BIN reduce using rule 221 (basic_statement -> event_statement .)
    INTNUMBER_OCT   reduce using rule 221 (basic_statement -> event_statement .)
    SIGNED_INTNUMBER_OCT reduce using rule 221 (basic_statement -> event_statement .)
    INTNUMBER_HEX   reduce using rule 221 (basic_statement -> event_statement .)
    SIGNED_INTNUMBER_HEX reduce using rule 221 (basic_statement -> event_statement .)
    FLOATNUMBER     reduce using rule 221 (basic_statement -> event_statement .)
    STRING_LITERAL  reduce using rule 221 (basic_statement -> event_statement .)
    ENDMODULE       reduce using rule 221 (basic_statement -> event_statement .)
    GENERATE        reduce using rule 221 (basic_statement -> event_statement .)
    INTEGER         reduce using rule 221 (basic_statement -> event_statement .)
    REAL            reduce using rule 221 (basic_statement -> event_statement .)
    PARAMETER       reduce using rule 221 (basic_statement -> event_statement .)
    LOCALPARAM      reduce using rule 221 (basic_statement -> event_statement .)
    GENVAR          reduce using rule 221 (basic_statement -> event_statement .)
    ASSIGN          reduce using rule 221 (basic_statement -> event_statement .)
    ALWAYS          reduce using rule 221 (basic_statement -> event_statement .)
    INITIAL         reduce using rule 221 (basic_statement -> event_statement .)
    SENS_OR         reduce using rule 221 (basic_statement -> event_statement .)
    FUNCTION        reduce using rule 221 (basic_statement -> event_statement .)
    TASK            reduce using rule 221 (basic_statement -> event_statement .)
    INPUT           reduce using rule 221 (basic_statement -> event_statement .)
    OUTPUT          reduce using rule 221 (basic_statement -> event_statement .)
    INOUT           reduce using rule 221 (basic_statement -> event_statement .)
    TRI             reduce using rule 221 (basic_statement -> event_statement .)
    REG             reduce using rule 221 (basic_statement -> event_statement .)
    WIRE            reduce using rule 221 (basic_statement -> event_statement .)
    SIGNED          reduce using rule 221 (basic_statement -> event_statement .)
    SUPPLY0         reduce using rule 221 (basic_statement -> event_statement .)
    SUPPLY1         reduce using rule 221 (basic_statement -> event_statement .)
    ENDGENERATE     reduce using rule 221 (basic_statement -> event_statement .)
    ELSE            reduce using rule 221 (basic_statement -> event_statement .)
    JOIN            reduce using rule 221 (basic_statement -> event_statement .)
    ENDTASK         reduce using rule 221 (basic_statement -> event_statement .)
    ENDFUNCTION     reduce using rule 221 (basic_statement -> event_statement .)


state 190

    (222) basic_statement -> wait_statement .

    END             reduce using rule 222 (basic_statement -> wait_statement .)
    IF              reduce using rule 222 (basic_statement -> wait_statement .)
    CASE            reduce using rule 222 (basic_statement -> wait_statement .)
    CASEX           reduce using rule 222 (basic_statement -> wait_statement .)
    FOR             reduce using rule 222 (basic_statement -> wait_statement .)
    WHILE           reduce using rule 222 (basic_statement -> wait_statement .)
    WAIT            reduce using rule 222 (basic_statement -> wait_statement .)
    FOREVER         reduce using rule 222 (basic_statement -> wait_statement .)
    BEGIN           reduce using rule 222 (basic_statement -> wait_statement .)
    FORK            reduce using rule 222 (basic_statement -> wait_statement .)
    DELAY           reduce using rule 222 (basic_statement -> wait_statement .)
    AT              reduce using rule 222 (basic_statement -> wait_statement .)
    DOLLER          reduce using rule 222 (basic_statement -> wait_statement .)
    DISABLE         reduce using rule 222 (basic_statement -> wait_statement .)
    LBRACE          reduce using rule 222 (basic_statement -> wait_statement .)
    ID              reduce using rule 222 (basic_statement -> wait_statement .)
    SEMICOLON       reduce using rule 222 (basic_statement -> wait_statement .)
    ENDCASE         reduce using rule 222 (basic_statement -> wait_statement .)
    DEFAULT         reduce using rule 222 (basic_statement -> wait_statement .)
    MINUS           reduce using rule 222 (basic_statement -> wait_statement .)
    PLUS            reduce using rule 222 (basic_statement -> wait_statement .)
    LNOT            reduce using rule 222 (basic_statement -> wait_statement .)
    NOT             reduce using rule 222 (basic_statement -> wait_statement .)
    AND             reduce using rule 222 (basic_statement -> wait_statement .)
    NAND            reduce using rule 222 (basic_statement -> wait_statement .)
    NOR             reduce using rule 222 (basic_statement -> wait_statement .)
    OR              reduce using rule 222 (basic_statement -> wait_statement .)
    XOR             reduce using rule 222 (basic_statement -> wait_statement .)
    XNOR            reduce using rule 222 (basic_statement -> wait_statement .)
    LPAREN          reduce using rule 222 (basic_statement -> wait_statement .)
    INTNUMBER_DEC   reduce using rule 222 (basic_statement -> wait_statement .)
    SIGNED_INTNUMBER_DEC reduce using rule 222 (basic_statement -> wait_statement .)
    INTNUMBER_BIN   reduce using rule 222 (basic_statement -> wait_statement .)
    SIGNED_INTNUMBER_BIN reduce using rule 222 (basic_statement -> wait_statement .)
    INTNUMBER_OCT   reduce using rule 222 (basic_statement -> wait_statement .)
    SIGNED_INTNUMBER_OCT reduce using rule 222 (basic_statement -> wait_statement .)
    INTNUMBER_HEX   reduce using rule 222 (basic_statement -> wait_statement .)
    SIGNED_INTNUMBER_HEX reduce using rule 222 (basic_statement -> wait_statement .)
    FLOATNUMBER     reduce using rule 222 (basic_statement -> wait_statement .)
    STRING_LITERAL  reduce using rule 222 (basic_statement -> wait_statement .)
    ENDMODULE       reduce using rule 222 (basic_statement -> wait_statement .)
    GENERATE        reduce using rule 222 (basic_statement -> wait_statement .)
    INTEGER         reduce using rule 222 (basic_statement -> wait_statement .)
    REAL            reduce using rule 222 (basic_statement -> wait_statement .)
    PARAMETER       reduce using rule 222 (basic_statement -> wait_statement .)
    LOCALPARAM      reduce using rule 222 (basic_statement -> wait_statement .)
    GENVAR          reduce using rule 222 (basic_statement -> wait_statement .)
    ASSIGN          reduce using rule 222 (basic_statement -> wait_statement .)
    ALWAYS          reduce using rule 222 (basic_statement -> wait_statement .)
    INITIAL         reduce using rule 222 (basic_statement -> wait_statement .)
    SENS_OR         reduce using rule 222 (basic_statement -> wait_statement .)
    FUNCTION        reduce using rule 222 (basic_statement -> wait_statement .)
    TASK            reduce using rule 222 (basic_statement -> wait_statement .)
    INPUT           reduce using rule 222 (basic_statement -> wait_statement .)
    OUTPUT          reduce using rule 222 (basic_statement -> wait_statement .)
    INOUT           reduce using rule 222 (basic_statement -> wait_statement .)
    TRI             reduce using rule 222 (basic_statement -> wait_statement .)
    REG             reduce using rule 222 (basic_statement -> wait_statement .)
    WIRE            reduce using rule 222 (basic_statement -> wait_statement .)
    SIGNED          reduce using rule 222 (basic_statement -> wait_statement .)
    SUPPLY0         reduce using rule 222 (basic_statement -> wait_statement .)
    SUPPLY1         reduce using rule 222 (basic_statement -> wait_statement .)
    ENDGENERATE     reduce using rule 222 (basic_statement -> wait_statement .)
    ELSE            reduce using rule 222 (basic_statement -> wait_statement .)
    JOIN            reduce using rule 222 (basic_statement -> wait_statement .)
    ENDTASK         reduce using rule 222 (basic_statement -> wait_statement .)
    ENDFUNCTION     reduce using rule 222 (basic_statement -> wait_statement .)


state 191

    (217) basic_statement -> case_statement .

    END             reduce using rule 217 (basic_statement -> case_statement .)
    IF              reduce using rule 217 (basic_statement -> case_statement .)
    CASE            reduce using rule 217 (basic_statement -> case_statement .)
    CASEX           reduce using rule 217 (basic_statement -> case_statement .)
    FOR             reduce using rule 217 (basic_statement -> case_statement .)
    WHILE           reduce using rule 217 (basic_statement -> case_statement .)
    WAIT            reduce using rule 217 (basic_statement -> case_statement .)
    FOREVER         reduce using rule 217 (basic_statement -> case_statement .)
    BEGIN           reduce using rule 217 (basic_statement -> case_statement .)
    FORK            reduce using rule 217 (basic_statement -> case_statement .)
    DELAY           reduce using rule 217 (basic_statement -> case_statement .)
    AT              reduce using rule 217 (basic_statement -> case_statement .)
    DOLLER          reduce using rule 217 (basic_statement -> case_statement .)
    DISABLE         reduce using rule 217 (basic_statement -> case_statement .)
    LBRACE          reduce using rule 217 (basic_statement -> case_statement .)
    ID              reduce using rule 217 (basic_statement -> case_statement .)
    SEMICOLON       reduce using rule 217 (basic_statement -> case_statement .)
    ENDCASE         reduce using rule 217 (basic_statement -> case_statement .)
    DEFAULT         reduce using rule 217 (basic_statement -> case_statement .)
    MINUS           reduce using rule 217 (basic_statement -> case_statement .)
    PLUS            reduce using rule 217 (basic_statement -> case_statement .)
    LNOT            reduce using rule 217 (basic_statement -> case_statement .)
    NOT             reduce using rule 217 (basic_statement -> case_statement .)
    AND             reduce using rule 217 (basic_statement -> case_statement .)
    NAND            reduce using rule 217 (basic_statement -> case_statement .)
    NOR             reduce using rule 217 (basic_statement -> case_statement .)
    OR              reduce using rule 217 (basic_statement -> case_statement .)
    XOR             reduce using rule 217 (basic_statement -> case_statement .)
    XNOR            reduce using rule 217 (basic_statement -> case_statement .)
    LPAREN          reduce using rule 217 (basic_statement -> case_statement .)
    INTNUMBER_DEC   reduce using rule 217 (basic_statement -> case_statement .)
    SIGNED_INTNUMBER_DEC reduce using rule 217 (basic_statement -> case_statement .)
    INTNUMBER_BIN   reduce using rule 217 (basic_statement -> case_statement .)
    SIGNED_INTNUMBER_BIN reduce using rule 217 (basic_statement -> case_statement .)
    INTNUMBER_OCT   reduce using rule 217 (basic_statement -> case_statement .)
    SIGNED_INTNUMBER_OCT reduce using rule 217 (basic_statement -> case_statement .)
    INTNUMBER_HEX   reduce using rule 217 (basic_statement -> case_statement .)
    SIGNED_INTNUMBER_HEX reduce using rule 217 (basic_statement -> case_statement .)
    FLOATNUMBER     reduce using rule 217 (basic_statement -> case_statement .)
    STRING_LITERAL  reduce using rule 217 (basic_statement -> case_statement .)
    ENDMODULE       reduce using rule 217 (basic_statement -> case_statement .)
    GENERATE        reduce using rule 217 (basic_statement -> case_statement .)
    INTEGER         reduce using rule 217 (basic_statement -> case_statement .)
    REAL            reduce using rule 217 (basic_statement -> case_statement .)
    PARAMETER       reduce using rule 217 (basic_statement -> case_statement .)
    LOCALPARAM      reduce using rule 217 (basic_statement -> case_statement .)
    GENVAR          reduce using rule 217 (basic_statement -> case_statement .)
    ASSIGN          reduce using rule 217 (basic_statement -> case_statement .)
    ALWAYS          reduce using rule 217 (basic_statement -> case_statement .)
    INITIAL         reduce using rule 217 (basic_statement -> case_statement .)
    SENS_OR         reduce using rule 217 (basic_statement -> case_statement .)
    FUNCTION        reduce using rule 217 (basic_statement -> case_statement .)
    TASK            reduce using rule 217 (basic_statement -> case_statement .)
    INPUT           reduce using rule 217 (basic_statement -> case_statement .)
    OUTPUT          reduce using rule 217 (basic_statement -> case_statement .)
    INOUT           reduce using rule 217 (basic_statement -> case_statement .)
    TRI             reduce using rule 217 (basic_statement -> case_statement .)
    REG             reduce using rule 217 (basic_statement -> case_statement .)
    WIRE            reduce using rule 217 (basic_statement -> case_statement .)
    SIGNED          reduce using rule 217 (basic_statement -> case_statement .)
    SUPPLY0         reduce using rule 217 (basic_statement -> case_statement .)
    SUPPLY1         reduce using rule 217 (basic_statement -> case_statement .)
    ENDGENERATE     reduce using rule 217 (basic_statement -> case_statement .)
    ELSE            reduce using rule 217 (basic_statement -> case_statement .)
    JOIN            reduce using rule 217 (basic_statement -> case_statement .)
    ENDTASK         reduce using rule 217 (basic_statement -> case_statement .)
    ENDFUNCTION     reduce using rule 217 (basic_statement -> case_statement .)


state 192

    (392) single_statement -> disable . SEMICOLON

    SEMICOLON       shift and go to state 334


state 193

    (197) senslist -> AT . LPAREN edgesigs RPAREN
    (205) senslist -> AT . levelsig
    (206) senslist -> AT . LPAREN levelsigs RPAREN
    (214) senslist -> AT . TIMES
    (215) senslist -> AT . LPAREN TIMES RPAREN
    (207) levelsig -> . levelsig_base
    (208) levelsig_base -> . identifier
    (209) levelsig_base -> . pointer
    (210) levelsig_base -> . partselect
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT

    LPAREN          shift and go to state 339
    TIMES           shift and go to state 338
    ID              shift and go to state 46

    partselect                     shift and go to state 335
    levelsig_base                  shift and go to state 336
    levelsig                       shift and go to state 337
    scope                          shift and go to state 44
    identifier                     shift and go to state 340
    pointer                        shift and go to state 341

state 194

    (225) basic_statement -> namedblock .

    END             reduce using rule 225 (basic_statement -> namedblock .)
    IF              reduce using rule 225 (basic_statement -> namedblock .)
    CASE            reduce using rule 225 (basic_statement -> namedblock .)
    CASEX           reduce using rule 225 (basic_statement -> namedblock .)
    FOR             reduce using rule 225 (basic_statement -> namedblock .)
    WHILE           reduce using rule 225 (basic_statement -> namedblock .)
    WAIT            reduce using rule 225 (basic_statement -> namedblock .)
    FOREVER         reduce using rule 225 (basic_statement -> namedblock .)
    BEGIN           reduce using rule 225 (basic_statement -> namedblock .)
    FORK            reduce using rule 225 (basic_statement -> namedblock .)
    DELAY           reduce using rule 225 (basic_statement -> namedblock .)
    AT              reduce using rule 225 (basic_statement -> namedblock .)
    DOLLER          reduce using rule 225 (basic_statement -> namedblock .)
    DISABLE         reduce using rule 225 (basic_statement -> namedblock .)
    LBRACE          reduce using rule 225 (basic_statement -> namedblock .)
    ID              reduce using rule 225 (basic_statement -> namedblock .)
    SEMICOLON       reduce using rule 225 (basic_statement -> namedblock .)
    ENDCASE         reduce using rule 225 (basic_statement -> namedblock .)
    DEFAULT         reduce using rule 225 (basic_statement -> namedblock .)
    MINUS           reduce using rule 225 (basic_statement -> namedblock .)
    PLUS            reduce using rule 225 (basic_statement -> namedblock .)
    LNOT            reduce using rule 225 (basic_statement -> namedblock .)
    NOT             reduce using rule 225 (basic_statement -> namedblock .)
    AND             reduce using rule 225 (basic_statement -> namedblock .)
    NAND            reduce using rule 225 (basic_statement -> namedblock .)
    NOR             reduce using rule 225 (basic_statement -> namedblock .)
    OR              reduce using rule 225 (basic_statement -> namedblock .)
    XOR             reduce using rule 225 (basic_statement -> namedblock .)
    XNOR            reduce using rule 225 (basic_statement -> namedblock .)
    LPAREN          reduce using rule 225 (basic_statement -> namedblock .)
    INTNUMBER_DEC   reduce using rule 225 (basic_statement -> namedblock .)
    SIGNED_INTNUMBER_DEC reduce using rule 225 (basic_statement -> namedblock .)
    INTNUMBER_BIN   reduce using rule 225 (basic_statement -> namedblock .)
    SIGNED_INTNUMBER_BIN reduce using rule 225 (basic_statement -> namedblock .)
    INTNUMBER_OCT   reduce using rule 225 (basic_statement -> namedblock .)
    SIGNED_INTNUMBER_OCT reduce using rule 225 (basic_statement -> namedblock .)
    INTNUMBER_HEX   reduce using rule 225 (basic_statement -> namedblock .)
    SIGNED_INTNUMBER_HEX reduce using rule 225 (basic_statement -> namedblock .)
    FLOATNUMBER     reduce using rule 225 (basic_statement -> namedblock .)
    STRING_LITERAL  reduce using rule 225 (basic_statement -> namedblock .)
    ENDMODULE       reduce using rule 225 (basic_statement -> namedblock .)
    GENERATE        reduce using rule 225 (basic_statement -> namedblock .)
    INTEGER         reduce using rule 225 (basic_statement -> namedblock .)
    REAL            reduce using rule 225 (basic_statement -> namedblock .)
    PARAMETER       reduce using rule 225 (basic_statement -> namedblock .)
    LOCALPARAM      reduce using rule 225 (basic_statement -> namedblock .)
    GENVAR          reduce using rule 225 (basic_statement -> namedblock .)
    ASSIGN          reduce using rule 225 (basic_statement -> namedblock .)
    ALWAYS          reduce using rule 225 (basic_statement -> namedblock .)
    INITIAL         reduce using rule 225 (basic_statement -> namedblock .)
    SENS_OR         reduce using rule 225 (basic_statement -> namedblock .)
    FUNCTION        reduce using rule 225 (basic_statement -> namedblock .)
    TASK            reduce using rule 225 (basic_statement -> namedblock .)
    INPUT           reduce using rule 225 (basic_statement -> namedblock .)
    OUTPUT          reduce using rule 225 (basic_statement -> namedblock .)
    INOUT           reduce using rule 225 (basic_statement -> namedblock .)
    TRI             reduce using rule 225 (basic_statement -> namedblock .)
    REG             reduce using rule 225 (basic_statement -> namedblock .)
    WIRE            reduce using rule 225 (basic_statement -> namedblock .)
    SIGNED          reduce using rule 225 (basic_statement -> namedblock .)
    SUPPLY0         reduce using rule 225 (basic_statement -> namedblock .)
    SUPPLY1         reduce using rule 225 (basic_statement -> namedblock .)
    ENDGENERATE     reduce using rule 225 (basic_statement -> namedblock .)
    ELSE            reduce using rule 225 (basic_statement -> namedblock .)
    JOIN            reduce using rule 225 (basic_statement -> namedblock .)
    ENDTASK         reduce using rule 225 (basic_statement -> namedblock .)
    ENDFUNCTION     reduce using rule 225 (basic_statement -> namedblock .)


state 195

    (256) if_statement -> IF . LPAREN cond RPAREN true_statement ELSE else_statement
    (257) if_statement -> IF . LPAREN cond RPAREN true_statement

    LPAREN          shift and go to state 342


state 196

    (285) event_statement -> senslist . SEMICOLON

    SEMICOLON       shift and go to state 343


state 197

    (229) basic_statement -> single_statement .

    END             reduce using rule 229 (basic_statement -> single_statement .)
    IF              reduce using rule 229 (basic_statement -> single_statement .)
    CASE            reduce using rule 229 (basic_statement -> single_statement .)
    CASEX           reduce using rule 229 (basic_statement -> single_statement .)
    FOR             reduce using rule 229 (basic_statement -> single_statement .)
    WHILE           reduce using rule 229 (basic_statement -> single_statement .)
    WAIT            reduce using rule 229 (basic_statement -> single_statement .)
    FOREVER         reduce using rule 229 (basic_statement -> single_statement .)
    BEGIN           reduce using rule 229 (basic_statement -> single_statement .)
    FORK            reduce using rule 229 (basic_statement -> single_statement .)
    DELAY           reduce using rule 229 (basic_statement -> single_statement .)
    AT              reduce using rule 229 (basic_statement -> single_statement .)
    DOLLER          reduce using rule 229 (basic_statement -> single_statement .)
    DISABLE         reduce using rule 229 (basic_statement -> single_statement .)
    LBRACE          reduce using rule 229 (basic_statement -> single_statement .)
    ID              reduce using rule 229 (basic_statement -> single_statement .)
    SEMICOLON       reduce using rule 229 (basic_statement -> single_statement .)
    ENDCASE         reduce using rule 229 (basic_statement -> single_statement .)
    DEFAULT         reduce using rule 229 (basic_statement -> single_statement .)
    MINUS           reduce using rule 229 (basic_statement -> single_statement .)
    PLUS            reduce using rule 229 (basic_statement -> single_statement .)
    LNOT            reduce using rule 229 (basic_statement -> single_statement .)
    NOT             reduce using rule 229 (basic_statement -> single_statement .)
    AND             reduce using rule 229 (basic_statement -> single_statement .)
    NAND            reduce using rule 229 (basic_statement -> single_statement .)
    NOR             reduce using rule 229 (basic_statement -> single_statement .)
    OR              reduce using rule 229 (basic_statement -> single_statement .)
    XOR             reduce using rule 229 (basic_statement -> single_statement .)
    XNOR            reduce using rule 229 (basic_statement -> single_statement .)
    LPAREN          reduce using rule 229 (basic_statement -> single_statement .)
    INTNUMBER_DEC   reduce using rule 229 (basic_statement -> single_statement .)
    SIGNED_INTNUMBER_DEC reduce using rule 229 (basic_statement -> single_statement .)
    INTNUMBER_BIN   reduce using rule 229 (basic_statement -> single_statement .)
    SIGNED_INTNUMBER_BIN reduce using rule 229 (basic_statement -> single_statement .)
    INTNUMBER_OCT   reduce using rule 229 (basic_statement -> single_statement .)
    SIGNED_INTNUMBER_OCT reduce using rule 229 (basic_statement -> single_statement .)
    INTNUMBER_HEX   reduce using rule 229 (basic_statement -> single_statement .)
    SIGNED_INTNUMBER_HEX reduce using rule 229 (basic_statement -> single_statement .)
    FLOATNUMBER     reduce using rule 229 (basic_statement -> single_statement .)
    STRING_LITERAL  reduce using rule 229 (basic_statement -> single_statement .)
    ENDMODULE       reduce using rule 229 (basic_statement -> single_statement .)
    GENERATE        reduce using rule 229 (basic_statement -> single_statement .)
    INTEGER         reduce using rule 229 (basic_statement -> single_statement .)
    REAL            reduce using rule 229 (basic_statement -> single_statement .)
    PARAMETER       reduce using rule 229 (basic_statement -> single_statement .)
    LOCALPARAM      reduce using rule 229 (basic_statement -> single_statement .)
    GENVAR          reduce using rule 229 (basic_statement -> single_statement .)
    ASSIGN          reduce using rule 229 (basic_statement -> single_statement .)
    ALWAYS          reduce using rule 229 (basic_statement -> single_statement .)
    INITIAL         reduce using rule 229 (basic_statement -> single_statement .)
    SENS_OR         reduce using rule 229 (basic_statement -> single_statement .)
    FUNCTION        reduce using rule 229 (basic_statement -> single_statement .)
    TASK            reduce using rule 229 (basic_statement -> single_statement .)
    INPUT           reduce using rule 229 (basic_statement -> single_statement .)
    OUTPUT          reduce using rule 229 (basic_statement -> single_statement .)
    INOUT           reduce using rule 229 (basic_statement -> single_statement .)
    TRI             reduce using rule 229 (basic_statement -> single_statement .)
    REG             reduce using rule 229 (basic_statement -> single_statement .)
    WIRE            reduce using rule 229 (basic_statement -> single_statement .)
    SIGNED          reduce using rule 229 (basic_statement -> single_statement .)
    SUPPLY0         reduce using rule 229 (basic_statement -> single_statement .)
    SUPPLY1         reduce using rule 229 (basic_statement -> single_statement .)
    ENDGENERATE     reduce using rule 229 (basic_statement -> single_statement .)
    ELSE            reduce using rule 229 (basic_statement -> single_statement .)
    JOIN            reduce using rule 229 (basic_statement -> single_statement .)
    ENDTASK         reduce using rule 229 (basic_statement -> single_statement .)
    ENDFUNCTION     reduce using rule 229 (basic_statement -> single_statement .)


state 198

    (224) basic_statement -> block .

    END             reduce using rule 224 (basic_statement -> block .)
    IF              reduce using rule 224 (basic_statement -> block .)
    CASE            reduce using rule 224 (basic_statement -> block .)
    CASEX           reduce using rule 224 (basic_statement -> block .)
    FOR             reduce using rule 224 (basic_statement -> block .)
    WHILE           reduce using rule 224 (basic_statement -> block .)
    WAIT            reduce using rule 224 (basic_statement -> block .)
    FOREVER         reduce using rule 224 (basic_statement -> block .)
    BEGIN           reduce using rule 224 (basic_statement -> block .)
    FORK            reduce using rule 224 (basic_statement -> block .)
    DELAY           reduce using rule 224 (basic_statement -> block .)
    AT              reduce using rule 224 (basic_statement -> block .)
    DOLLER          reduce using rule 224 (basic_statement -> block .)
    DISABLE         reduce using rule 224 (basic_statement -> block .)
    LBRACE          reduce using rule 224 (basic_statement -> block .)
    ID              reduce using rule 224 (basic_statement -> block .)
    SEMICOLON       reduce using rule 224 (basic_statement -> block .)
    ENDCASE         reduce using rule 224 (basic_statement -> block .)
    DEFAULT         reduce using rule 224 (basic_statement -> block .)
    MINUS           reduce using rule 224 (basic_statement -> block .)
    PLUS            reduce using rule 224 (basic_statement -> block .)
    LNOT            reduce using rule 224 (basic_statement -> block .)
    NOT             reduce using rule 224 (basic_statement -> block .)
    AND             reduce using rule 224 (basic_statement -> block .)
    NAND            reduce using rule 224 (basic_statement -> block .)
    NOR             reduce using rule 224 (basic_statement -> block .)
    OR              reduce using rule 224 (basic_statement -> block .)
    XOR             reduce using rule 224 (basic_statement -> block .)
    XNOR            reduce using rule 224 (basic_statement -> block .)
    LPAREN          reduce using rule 224 (basic_statement -> block .)
    INTNUMBER_DEC   reduce using rule 224 (basic_statement -> block .)
    SIGNED_INTNUMBER_DEC reduce using rule 224 (basic_statement -> block .)
    INTNUMBER_BIN   reduce using rule 224 (basic_statement -> block .)
    SIGNED_INTNUMBER_BIN reduce using rule 224 (basic_statement -> block .)
    INTNUMBER_OCT   reduce using rule 224 (basic_statement -> block .)
    SIGNED_INTNUMBER_OCT reduce using rule 224 (basic_statement -> block .)
    INTNUMBER_HEX   reduce using rule 224 (basic_statement -> block .)
    SIGNED_INTNUMBER_HEX reduce using rule 224 (basic_statement -> block .)
    FLOATNUMBER     reduce using rule 224 (basic_statement -> block .)
    STRING_LITERAL  reduce using rule 224 (basic_statement -> block .)
    ENDMODULE       reduce using rule 224 (basic_statement -> block .)
    GENERATE        reduce using rule 224 (basic_statement -> block .)
    INTEGER         reduce using rule 224 (basic_statement -> block .)
    REAL            reduce using rule 224 (basic_statement -> block .)
    PARAMETER       reduce using rule 224 (basic_statement -> block .)
    LOCALPARAM      reduce using rule 224 (basic_statement -> block .)
    GENVAR          reduce using rule 224 (basic_statement -> block .)
    ASSIGN          reduce using rule 224 (basic_statement -> block .)
    ALWAYS          reduce using rule 224 (basic_statement -> block .)
    INITIAL         reduce using rule 224 (basic_statement -> block .)
    SENS_OR         reduce using rule 224 (basic_statement -> block .)
    FUNCTION        reduce using rule 224 (basic_statement -> block .)
    TASK            reduce using rule 224 (basic_statement -> block .)
    INPUT           reduce using rule 224 (basic_statement -> block .)
    OUTPUT          reduce using rule 224 (basic_statement -> block .)
    INOUT           reduce using rule 224 (basic_statement -> block .)
    TRI             reduce using rule 224 (basic_statement -> block .)
    REG             reduce using rule 224 (basic_statement -> block .)
    WIRE            reduce using rule 224 (basic_statement -> block .)
    SIGNED          reduce using rule 224 (basic_statement -> block .)
    SUPPLY0         reduce using rule 224 (basic_statement -> block .)
    SUPPLY1         reduce using rule 224 (basic_statement -> block .)
    ENDGENERATE     reduce using rule 224 (basic_statement -> block .)
    ELSE            reduce using rule 224 (basic_statement -> block .)
    JOIN            reduce using rule 224 (basic_statement -> block .)
    ENDTASK         reduce using rule 224 (basic_statement -> block .)
    ENDFUNCTION     reduce using rule 224 (basic_statement -> block .)


state 199

    (196) always -> ALWAYS senslist . always_statement
    (230) always_statement -> . basic_statement
    (216) basic_statement -> . if_statement
    (217) basic_statement -> . case_statement
    (218) basic_statement -> . casex_statement
    (219) basic_statement -> . for_statement
    (220) basic_statement -> . while_statement
    (221) basic_statement -> . event_statement
    (222) basic_statement -> . wait_statement
    (223) basic_statement -> . forever_statement
    (224) basic_statement -> . block
    (225) basic_statement -> . namedblock
    (226) basic_statement -> . parallelblock
    (227) basic_statement -> . blocking_substitution
    (228) basic_statement -> . nonblocking_substitution
    (229) basic_statement -> . single_statement
    (256) if_statement -> . IF LPAREN cond RPAREN true_statement ELSE else_statement
    (257) if_statement -> . IF LPAREN cond RPAREN true_statement
    (258) if_statement -> . delays IF LPAREN cond RPAREN true_statement ELSE else_statement
    (259) if_statement -> . delays IF LPAREN cond RPAREN true_statement
    (274) case_statement -> . CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (275) casex_statement -> . CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (264) for_statement -> . FOR LPAREN forpre forcond forpost RPAREN forcontent_statement
    (272) while_statement -> . WHILE LPAREN cond RPAREN whilecontent_statement
    (285) event_statement -> . senslist SEMICOLON
    (286) wait_statement -> . WAIT LPAREN cond RPAREN waitcontent_statement
    (289) forever_statement -> . FOREVER basic_statement
    (239) block -> . BEGIN block_statements END
    (240) block -> . BEGIN END
    (244) namedblock -> . BEGIN COLON ID namedblock_statements END
    (245) namedblock -> . BEGIN COLON ID END
    (254) parallelblock -> . FORK block_statements JOIN
    (255) parallelblock -> . FORK JOIN
    (231) blocking_substitution -> . delays lvalue EQUALS delays rvalue SEMICOLON
    (233) nonblocking_substitution -> . delays lvalue LE delays rvalue SEMICOLON
    (390) single_statement -> . DELAY expression SEMICOLON
    (391) single_statement -> . systemcall SEMICOLON
    (392) single_statement -> . disable SEMICOLON
    (234) delays -> . DELAY LPAREN expression RPAREN
    (235) delays -> . DELAY identifier
    (236) delays -> . DELAY intnumber
    (237) delays -> . DELAY floatnumber
    (238) delays -> . empty
    (197) senslist -> . AT LPAREN edgesigs RPAREN
    (204) senslist -> . empty
    (205) senslist -> . AT levelsig
    (206) senslist -> . AT LPAREN levelsigs RPAREN
    (214) senslist -> . AT TIMES
    (215) senslist -> . AT LPAREN TIMES RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (389) disable -> . DISABLE ID
    (393) empty -> .

  ! shift/reduce conflict for IF resolved as shift
    IF              shift and go to state 195
    CASE            shift and go to state 173
    CASEX           shift and go to state 178
    FOR             shift and go to state 187
    WHILE           shift and go to state 171
    WAIT            shift and go to state 168
    FOREVER         shift and go to state 167
    BEGIN           shift and go to state 175
    FORK            shift and go to state 166
    DELAY           shift and go to state 170
    AT              shift and go to state 193
    DOLLER          shift and go to state 54
    DISABLE         shift and go to state 180
    LBRACE          reduce using rule 393 (empty -> .)
    ID              reduce using rule 393 (empty -> .)
    SEMICOLON       reduce using rule 393 (empty -> .)

  ! IF              [ reduce using rule 393 (empty -> .) ]

    parallelblock                  shift and go to state 169
    forever_statement              shift and go to state 172
    casex_statement                shift and go to state 174
    delays                         shift and go to state 176
    blocking_substitution          shift and go to state 177
    while_statement                shift and go to state 179
    systemcall                     shift and go to state 181
    if_statement                   shift and go to state 182
    nonblocking_substitution       shift and go to state 183
    empty                          shift and go to state 184
    basic_statement                shift and go to state 344
    for_statement                  shift and go to state 186
    event_statement                shift and go to state 189
    wait_statement                 shift and go to state 190
    case_statement                 shift and go to state 191
    disable                        shift and go to state 192
    namedblock                     shift and go to state 194
    senslist                       shift and go to state 196
    always_statement               shift and go to state 345
    single_statement               shift and go to state 197
    block                          shift and go to state 198

state 200

    (204) senslist -> empty .

    IF              reduce using rule 204 (senslist -> empty .)
    CASE            reduce using rule 204 (senslist -> empty .)
    CASEX           reduce using rule 204 (senslist -> empty .)
    FOR             reduce using rule 204 (senslist -> empty .)
    WHILE           reduce using rule 204 (senslist -> empty .)
    WAIT            reduce using rule 204 (senslist -> empty .)
    FOREVER         reduce using rule 204 (senslist -> empty .)
    BEGIN           reduce using rule 204 (senslist -> empty .)
    FORK            reduce using rule 204 (senslist -> empty .)
    DELAY           reduce using rule 204 (senslist -> empty .)
    AT              reduce using rule 204 (senslist -> empty .)
    DOLLER          reduce using rule 204 (senslist -> empty .)
    DISABLE         reduce using rule 204 (senslist -> empty .)
    LBRACE          reduce using rule 204 (senslist -> empty .)
    ID              reduce using rule 204 (senslist -> empty .)
    SEMICOLON       reduce using rule 204 (senslist -> empty .)


state 201

    (322) genvardecl -> GENVAR genvarlist . SEMICOLON
    (323) genvarlist -> genvarlist . COMMA genvar

    SEMICOLON       shift and go to state 347
    COMMA           shift and go to state 346


state 202

    (324) genvarlist -> genvar .

    SEMICOLON       reduce using rule 324 (genvarlist -> genvar .)
    COMMA           reduce using rule 324 (genvarlist -> genvar .)


state 203

    (325) genvar -> ID .

    SEMICOLON       reduce using rule 325 (genvar -> ID .)
    COMMA           reduce using rule 325 (genvar -> ID .)


state 204

    (94) parameterdecl -> PARAMETER SIGNED . param_substitution_list SEMICOLON
    (96) parameterdecl -> PARAMETER SIGNED . width param_substitution_list SEMICOLON
    (103) param_substitution_list -> . param_substitution_list COMMA param_substitution
    (104) param_substitution_list -> . param_substitution
    (53) width -> . LBRACKET expression COLON expression RBRACKET
    (105) param_substitution -> . ID EQUALS rvalue

    LBRACKET        shift and go to state 205
    ID              shift and go to state 209

    width                          shift and go to state 348
    param_substitution             shift and go to state 210
    param_substitution_list        shift and go to state 349

state 205

    (53) width -> LBRACKET . expression COLON expression RBRACKET
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 350
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 206

    (95) parameterdecl -> PARAMETER width . param_substitution_list SEMICOLON
    (103) param_substitution_list -> . param_substitution_list COMMA param_substitution
    (104) param_substitution_list -> . param_substitution
    (105) param_substitution -> . ID EQUALS rvalue

    ID              shift and go to state 209

    param_substitution             shift and go to state 210
    param_substitution_list        shift and go to state 351

state 207

    (93) parameterdecl -> PARAMETER param_substitution_list . SEMICOLON
    (103) param_substitution_list -> param_substitution_list . COMMA param_substitution

    SEMICOLON       shift and go to state 353
    COMMA           shift and go to state 352


state 208

    (97) parameterdecl -> PARAMETER INTEGER . param_substitution_list SEMICOLON
    (103) param_substitution_list -> . param_substitution_list COMMA param_substitution
    (104) param_substitution_list -> . param_substitution
    (105) param_substitution -> . ID EQUALS rvalue

    ID              shift and go to state 209

    param_substitution             shift and go to state 210
    param_substitution_list        shift and go to state 354

state 209

    (105) param_substitution -> ID . EQUALS rvalue

    EQUALS          shift and go to state 355


state 210

    (104) param_substitution_list -> param_substitution .

    SEMICOLON       reduce using rule 104 (param_substitution_list -> param_substitution .)
    COMMA           reduce using rule 104 (param_substitution_list -> param_substitution .)
    RPAREN          reduce using rule 104 (param_substitution_list -> param_substitution .)


state 211

    (332) generate_item -> generate_for .

    ELSE            reduce using rule 332 (generate_item -> generate_for .)
    ENDGENERATE     reduce using rule 332 (generate_item -> generate_for .)
    IF              reduce using rule 332 (generate_item -> generate_for .)
    FOR             reduce using rule 332 (generate_item -> generate_for .)
    INTEGER         reduce using rule 332 (generate_item -> generate_for .)
    REAL            reduce using rule 332 (generate_item -> generate_for .)
    PARAMETER       reduce using rule 332 (generate_item -> generate_for .)
    LOCALPARAM      reduce using rule 332 (generate_item -> generate_for .)
    GENVAR          reduce using rule 332 (generate_item -> generate_for .)
    ASSIGN          reduce using rule 332 (generate_item -> generate_for .)
    ALWAYS          reduce using rule 332 (generate_item -> generate_for .)
    INITIAL         reduce using rule 332 (generate_item -> generate_for .)
    ID              reduce using rule 332 (generate_item -> generate_for .)
    SENS_OR         reduce using rule 332 (generate_item -> generate_for .)
    FUNCTION        reduce using rule 332 (generate_item -> generate_for .)
    TASK            reduce using rule 332 (generate_item -> generate_for .)
    LPAREN          reduce using rule 332 (generate_item -> generate_for .)
    INPUT           reduce using rule 332 (generate_item -> generate_for .)
    OUTPUT          reduce using rule 332 (generate_item -> generate_for .)
    INOUT           reduce using rule 332 (generate_item -> generate_for .)
    TRI             reduce using rule 332 (generate_item -> generate_for .)
    REG             reduce using rule 332 (generate_item -> generate_for .)
    WIRE            reduce using rule 332 (generate_item -> generate_for .)
    SIGNED          reduce using rule 332 (generate_item -> generate_for .)
    SUPPLY0         reduce using rule 332 (generate_item -> generate_for .)
    SUPPLY1         reduce using rule 332 (generate_item -> generate_for .)
    END             reduce using rule 332 (generate_item -> generate_for .)


state 212

    (330) generate_item -> standard_item .

    ELSE            reduce using rule 330 (generate_item -> standard_item .)
    ENDGENERATE     reduce using rule 330 (generate_item -> standard_item .)
    IF              reduce using rule 330 (generate_item -> standard_item .)
    FOR             reduce using rule 330 (generate_item -> standard_item .)
    INTEGER         reduce using rule 330 (generate_item -> standard_item .)
    REAL            reduce using rule 330 (generate_item -> standard_item .)
    PARAMETER       reduce using rule 330 (generate_item -> standard_item .)
    LOCALPARAM      reduce using rule 330 (generate_item -> standard_item .)
    GENVAR          reduce using rule 330 (generate_item -> standard_item .)
    ASSIGN          reduce using rule 330 (generate_item -> standard_item .)
    ALWAYS          reduce using rule 330 (generate_item -> standard_item .)
    INITIAL         reduce using rule 330 (generate_item -> standard_item .)
    ID              reduce using rule 330 (generate_item -> standard_item .)
    SENS_OR         reduce using rule 330 (generate_item -> standard_item .)
    FUNCTION        reduce using rule 330 (generate_item -> standard_item .)
    TASK            reduce using rule 330 (generate_item -> standard_item .)
    LPAREN          reduce using rule 330 (generate_item -> standard_item .)
    INPUT           reduce using rule 330 (generate_item -> standard_item .)
    OUTPUT          reduce using rule 330 (generate_item -> standard_item .)
    INOUT           reduce using rule 330 (generate_item -> standard_item .)
    TRI             reduce using rule 330 (generate_item -> standard_item .)
    REG             reduce using rule 330 (generate_item -> standard_item .)
    WIRE            reduce using rule 330 (generate_item -> standard_item .)
    SIGNED          reduce using rule 330 (generate_item -> standard_item .)
    SUPPLY0         reduce using rule 330 (generate_item -> standard_item .)
    SUPPLY1         reduce using rule 330 (generate_item -> standard_item .)
    END             reduce using rule 330 (generate_item -> standard_item .)


state 213

    (327) generate_items -> empty .

    END             reduce using rule 327 (generate_items -> empty .)
    IF              reduce using rule 327 (generate_items -> empty .)
    FOR             reduce using rule 327 (generate_items -> empty .)
    INTEGER         reduce using rule 327 (generate_items -> empty .)
    REAL            reduce using rule 327 (generate_items -> empty .)
    PARAMETER       reduce using rule 327 (generate_items -> empty .)
    LOCALPARAM      reduce using rule 327 (generate_items -> empty .)
    GENVAR          reduce using rule 327 (generate_items -> empty .)
    ASSIGN          reduce using rule 327 (generate_items -> empty .)
    ALWAYS          reduce using rule 327 (generate_items -> empty .)
    INITIAL         reduce using rule 327 (generate_items -> empty .)
    ID              reduce using rule 327 (generate_items -> empty .)
    SENS_OR         reduce using rule 327 (generate_items -> empty .)
    FUNCTION        reduce using rule 327 (generate_items -> empty .)
    TASK            reduce using rule 327 (generate_items -> empty .)
    LPAREN          reduce using rule 327 (generate_items -> empty .)
    INPUT           reduce using rule 327 (generate_items -> empty .)
    OUTPUT          reduce using rule 327 (generate_items -> empty .)
    INOUT           reduce using rule 327 (generate_items -> empty .)
    TRI             reduce using rule 327 (generate_items -> empty .)
    REG             reduce using rule 327 (generate_items -> empty .)
    WIRE            reduce using rule 327 (generate_items -> empty .)
    SIGNED          reduce using rule 327 (generate_items -> empty .)
    SUPPLY0         reduce using rule 327 (generate_items -> empty .)
    SUPPLY1         reduce using rule 327 (generate_items -> empty .)
    ENDGENERATE     reduce using rule 327 (generate_items -> empty .)


state 214

    (326) generate -> GENERATE generate_items . ENDGENERATE
    (328) generate_items -> generate_items . generate_item
    (330) generate_item -> . standard_item
    (331) generate_item -> . generate_if
    (332) generate_item -> . generate_for
    (60) standard_item -> . decl
    (61) standard_item -> . integerdecl
    (62) standard_item -> . realdecl
    (63) standard_item -> . declassign
    (64) standard_item -> . parameterdecl
    (65) standard_item -> . localparamdecl
    (66) standard_item -> . genvardecl
    (67) standard_item -> . assignment
    (68) standard_item -> . always
    (69) standard_item -> . initial
    (70) standard_item -> . instance
    (71) standard_item -> . function
    (72) standard_item -> . task
    (73) standard_item -> . pragma
    (335) generate_if -> . IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item
    (336) generate_if -> . IF LPAREN cond RPAREN gif_true_item
    (341) generate_for -> . FOR LPAREN forpre forcond forpost RPAREN generate_forcontent
    (74) decl -> . sigtypes declnamelist SEMICOLON
    (75) decl -> . sigtypes width declnamelist SEMICOLON
    (84) integerdecl -> . INTEGER integernamelist SEMICOLON
    (85) integerdecl -> . INTEGER SIGNED integernamelist SEMICOLON
    (89) realdecl -> . REAL realnamelist SEMICOLON
    (80) declassign -> . sigtypes declassign_element SEMICOLON
    (81) declassign -> . sigtypes width declassign_element SEMICOLON
    (93) parameterdecl -> . PARAMETER param_substitution_list SEMICOLON
    (94) parameterdecl -> . PARAMETER SIGNED param_substitution_list SEMICOLON
    (95) parameterdecl -> . PARAMETER width param_substitution_list SEMICOLON
    (96) parameterdecl -> . PARAMETER SIGNED width param_substitution_list SEMICOLON
    (97) parameterdecl -> . PARAMETER INTEGER param_substitution_list SEMICOLON
    (98) localparamdecl -> . LOCALPARAM param_substitution_list SEMICOLON
    (99) localparamdecl -> . LOCALPARAM SIGNED param_substitution_list SEMICOLON
    (100) localparamdecl -> . LOCALPARAM width param_substitution_list SEMICOLON
    (101) localparamdecl -> . LOCALPARAM SIGNED width param_substitution_list SEMICOLON
    (102) localparamdecl -> . LOCALPARAM INTEGER param_substitution_list SEMICOLON
    (322) genvardecl -> . GENVAR genvarlist SEMICOLON
    (106) assignment -> . ASSIGN lvalue EQUALS rvalue SEMICOLON
    (107) assignment -> . ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON
    (196) always -> . ALWAYS senslist always_statement
    (283) initial -> . INITIAL initial_statement
    (290) instance -> . ID parameterlist instance_bodylist SEMICOLON
    (291) instance -> . SENS_OR parameterlist instance_bodylist SEMICOLON
    (296) instance -> . ID instance_bodylist_noname SEMICOLON
    (297) instance -> . SENS_OR instance_bodylist_noname SEMICOLON
    (351) function -> . FUNCTION width ID SEMICOLON function_statement ENDFUNCTION
    (352) function -> . FUNCTION ID SEMICOLON function_statement ENDFUNCTION
    (370) task -> . TASK ID SEMICOLON task_statement ENDTASK
    (7) pragma -> . LPAREN TIMES ID EQUALS expression TIMES RPAREN
    (8) pragma -> . LPAREN TIMES ID TIMES RPAREN
    (35) sigtypes -> . sigtypes sigtype
    (36) sigtypes -> . sigtype
    (37) sigtype -> . INPUT
    (38) sigtype -> . OUTPUT
    (39) sigtype -> . INOUT
    (40) sigtype -> . TRI
    (41) sigtype -> . REG
    (42) sigtype -> . WIRE
    (43) sigtype -> . SIGNED
    (44) sigtype -> . SUPPLY0
    (45) sigtype -> . SUPPLY1

    ENDGENERATE     shift and go to state 357
    IF              shift and go to state 217
    FOR             shift and go to state 215
    INTEGER         shift and go to state 83
    REAL            shift and go to state 63
    PARAMETER       shift and go to state 70
    LOCALPARAM      shift and go to state 101
    GENVAR          shift and go to state 69
    ASSIGN          shift and go to state 85
    ALWAYS          shift and go to state 68
    INITIAL         shift and go to state 66
    ID              shift and go to state 92
    SENS_OR         shift and go to state 99
    FUNCTION        shift and go to state 93
    TASK            shift and go to state 90
    LPAREN          shift and go to state 2
    INPUT           shift and go to state 91
    OUTPUT          shift and go to state 96
    INOUT           shift and go to state 72
    TRI             shift and go to state 89
    REG             shift and go to state 67
    WIRE            shift and go to state 104
    SIGNED          shift and go to state 98
    SUPPLY0         shift and go to state 79
    SUPPLY1         shift and go to state 80

    decl                           shift and go to state 62
    localparamdecl                 shift and go to state 64
    declassign                     shift and go to state 65
    generate_for                   shift and go to state 211
    integerdecl                    shift and go to state 71
    standard_item                  shift and go to state 212
    genvardecl                     shift and go to state 74
    sigtype                        shift and go to state 75
    initial                        shift and go to state 76
    instance                       shift and go to state 78
    sigtypes                       shift and go to state 88
    realdecl                       shift and go to state 82
    parameterdecl                  shift and go to state 84
    function                       shift and go to state 87
    assignment                     shift and go to state 81
    generate_item                  shift and go to state 356
    task                           shift and go to state 95
    always                         shift and go to state 97
    pragma                         shift and go to state 102
    generate_if                    shift and go to state 218

state 215

    (341) generate_for -> FOR . LPAREN forpre forcond forpost RPAREN generate_forcontent

    LPAREN          shift and go to state 358


state 216

    (329) generate_items -> generate_item .

    END             reduce using rule 329 (generate_items -> generate_item .)
    IF              reduce using rule 329 (generate_items -> generate_item .)
    FOR             reduce using rule 329 (generate_items -> generate_item .)
    INTEGER         reduce using rule 329 (generate_items -> generate_item .)
    REAL            reduce using rule 329 (generate_items -> generate_item .)
    PARAMETER       reduce using rule 329 (generate_items -> generate_item .)
    LOCALPARAM      reduce using rule 329 (generate_items -> generate_item .)
    GENVAR          reduce using rule 329 (generate_items -> generate_item .)
    ASSIGN          reduce using rule 329 (generate_items -> generate_item .)
    ALWAYS          reduce using rule 329 (generate_items -> generate_item .)
    INITIAL         reduce using rule 329 (generate_items -> generate_item .)
    ID              reduce using rule 329 (generate_items -> generate_item .)
    SENS_OR         reduce using rule 329 (generate_items -> generate_item .)
    FUNCTION        reduce using rule 329 (generate_items -> generate_item .)
    TASK            reduce using rule 329 (generate_items -> generate_item .)
    LPAREN          reduce using rule 329 (generate_items -> generate_item .)
    INPUT           reduce using rule 329 (generate_items -> generate_item .)
    OUTPUT          reduce using rule 329 (generate_items -> generate_item .)
    INOUT           reduce using rule 329 (generate_items -> generate_item .)
    TRI             reduce using rule 329 (generate_items -> generate_item .)
    REG             reduce using rule 329 (generate_items -> generate_item .)
    WIRE            reduce using rule 329 (generate_items -> generate_item .)
    SIGNED          reduce using rule 329 (generate_items -> generate_item .)
    SUPPLY0         reduce using rule 329 (generate_items -> generate_item .)
    SUPPLY1         reduce using rule 329 (generate_items -> generate_item .)
    ENDGENERATE     reduce using rule 329 (generate_items -> generate_item .)


state 217

    (335) generate_if -> IF . LPAREN cond RPAREN gif_true_item ELSE gif_false_item
    (336) generate_if -> IF . LPAREN cond RPAREN gif_true_item

    LPAREN          shift and go to state 359


state 218

    (331) generate_item -> generate_if .

    ELSE            reduce using rule 331 (generate_item -> generate_if .)
    ENDGENERATE     reduce using rule 331 (generate_item -> generate_if .)
    IF              reduce using rule 331 (generate_item -> generate_if .)
    FOR             reduce using rule 331 (generate_item -> generate_if .)
    INTEGER         reduce using rule 331 (generate_item -> generate_if .)
    REAL            reduce using rule 331 (generate_item -> generate_if .)
    PARAMETER       reduce using rule 331 (generate_item -> generate_if .)
    LOCALPARAM      reduce using rule 331 (generate_item -> generate_if .)
    GENVAR          reduce using rule 331 (generate_item -> generate_if .)
    ASSIGN          reduce using rule 331 (generate_item -> generate_if .)
    ALWAYS          reduce using rule 331 (generate_item -> generate_if .)
    INITIAL         reduce using rule 331 (generate_item -> generate_if .)
    ID              reduce using rule 331 (generate_item -> generate_if .)
    SENS_OR         reduce using rule 331 (generate_item -> generate_if .)
    FUNCTION        reduce using rule 331 (generate_item -> generate_if .)
    TASK            reduce using rule 331 (generate_item -> generate_if .)
    LPAREN          reduce using rule 331 (generate_item -> generate_if .)
    INPUT           reduce using rule 331 (generate_item -> generate_if .)
    OUTPUT          reduce using rule 331 (generate_item -> generate_if .)
    INOUT           reduce using rule 331 (generate_item -> generate_if .)
    TRI             reduce using rule 331 (generate_item -> generate_if .)
    REG             reduce using rule 331 (generate_item -> generate_if .)
    WIRE            reduce using rule 331 (generate_item -> generate_if .)
    SIGNED          reduce using rule 331 (generate_item -> generate_if .)
    SUPPLY0         reduce using rule 331 (generate_item -> generate_if .)
    SUPPLY1         reduce using rule 331 (generate_item -> generate_if .)
    END             reduce using rule 331 (generate_item -> generate_if .)


state 219

    (87) integernamelist -> integername .

    SEMICOLON       reduce using rule 87 (integernamelist -> integername .)
    COMMA           reduce using rule 87 (integernamelist -> integername .)


state 220

    (85) integerdecl -> INTEGER SIGNED . integernamelist SEMICOLON
    (86) integernamelist -> . integernamelist COMMA integername
    (87) integernamelist -> . integername
    (88) integername -> . ID

    ID              shift and go to state 222

    integernamelist                shift and go to state 360
    integername                    shift and go to state 219

state 221

    (84) integerdecl -> INTEGER integernamelist . SEMICOLON
    (86) integernamelist -> integernamelist . COMMA integername

    SEMICOLON       shift and go to state 362
    COMMA           shift and go to state 361


state 222

    (88) integername -> ID .

    SEMICOLON       reduce using rule 88 (integername -> ID .)
    COMMA           reduce using rule 88 (integername -> ID .)


state 223

    (123) lvalue -> lpointer .

    EQUALS          reduce using rule 123 (lvalue -> lpointer .)
    LE              reduce using rule 123 (lvalue -> lpointer .)


state 224

    (108) lpartselect -> pointer . LBRACKET expression COLON expression RBRACKET
    (109) lpartselect -> pointer . LBRACKET expression PLUSCOLON expression RBRACKET
    (110) lpartselect -> pointer . LBRACKET expression MINUSCOLON expression RBRACKET
    (114) lpointer -> pointer .
    (182) pointer -> pointer . LBRACKET expression RBRACKET
    (388) scope -> pointer . DOT

    LBRACKET        shift and go to state 363
    EQUALS          reduce using rule 114 (lpointer -> pointer .)
    LE              reduce using rule 114 (lpointer -> pointer .)
    DOT             shift and go to state 119


state 225

    (122) lvalue -> lpartselect .

    EQUALS          reduce using rule 122 (lvalue -> lpartselect .)
    LE              reduce using rule 122 (lvalue -> lpartselect .)


state 226

    (106) assignment -> ASSIGN lvalue . EQUALS rvalue SEMICOLON

    EQUALS          shift and go to state 364


state 227

    (107) assignment -> ASSIGN delays . lvalue EQUALS delays rvalue SEMICOLON
    (122) lvalue -> . lpartselect
    (123) lvalue -> . lpointer
    (124) lvalue -> . lconcat
    (125) lvalue -> . identifier
    (108) lpartselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (109) lpartselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (110) lpartselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (111) lpartselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (112) lpartselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (113) lpartselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (114) lpointer -> . pointer
    (115) lconcat -> . LBRACE lconcatlist RBRACE
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT

    LBRACE          shift and go to state 231
    ID              shift and go to state 46

    lconcat                        shift and go to state 229
    lpartselect                    shift and go to state 225
    lvalue                         shift and go to state 365
    lpointer                       shift and go to state 223
    scope                          shift and go to state 44
    identifier                     shift and go to state 232
    pointer                        shift and go to state 224

state 228

    (238) delays -> empty .

    IF              reduce using rule 238 (delays -> empty .)
    LBRACE          reduce using rule 238 (delays -> empty .)
    ID              reduce using rule 238 (delays -> empty .)
    MINUS           reduce using rule 238 (delays -> empty .)
    PLUS            reduce using rule 238 (delays -> empty .)
    LNOT            reduce using rule 238 (delays -> empty .)
    NOT             reduce using rule 238 (delays -> empty .)
    AND             reduce using rule 238 (delays -> empty .)
    NAND            reduce using rule 238 (delays -> empty .)
    NOR             reduce using rule 238 (delays -> empty .)
    OR              reduce using rule 238 (delays -> empty .)
    XOR             reduce using rule 238 (delays -> empty .)
    XNOR            reduce using rule 238 (delays -> empty .)
    LPAREN          reduce using rule 238 (delays -> empty .)
    DOLLER          reduce using rule 238 (delays -> empty .)
    INTNUMBER_DEC   reduce using rule 238 (delays -> empty .)
    SIGNED_INTNUMBER_DEC reduce using rule 238 (delays -> empty .)
    INTNUMBER_BIN   reduce using rule 238 (delays -> empty .)
    SIGNED_INTNUMBER_BIN reduce using rule 238 (delays -> empty .)
    INTNUMBER_OCT   reduce using rule 238 (delays -> empty .)
    SIGNED_INTNUMBER_OCT reduce using rule 238 (delays -> empty .)
    INTNUMBER_HEX   reduce using rule 238 (delays -> empty .)
    SIGNED_INTNUMBER_HEX reduce using rule 238 (delays -> empty .)
    FLOATNUMBER     reduce using rule 238 (delays -> empty .)
    STRING_LITERAL  reduce using rule 238 (delays -> empty .)


state 229

    (124) lvalue -> lconcat .

    EQUALS          reduce using rule 124 (lvalue -> lconcat .)
    LE              reduce using rule 124 (lvalue -> lconcat .)


state 230

    (234) delays -> DELAY . LPAREN expression RPAREN
    (235) delays -> DELAY . identifier
    (236) delays -> DELAY . intnumber
    (237) delays -> DELAY . floatnumber
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET

    LPAREN          shift and go to state 369
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25

    floatnumber                    shift and go to state 367
    scope                          shift and go to state 44
    identifier                     shift and go to state 370
    pointer                        shift and go to state 366
    intnumber                      shift and go to state 368

state 231

    (115) lconcat -> LBRACE . lconcatlist RBRACE
    (116) lconcatlist -> . lconcatlist COMMA lconcat_one
    (117) lconcatlist -> . lconcat_one
    (118) lconcat_one -> . identifier
    (119) lconcat_one -> . lpartselect
    (120) lconcat_one -> . lpointer
    (121) lconcat_one -> . lconcat
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (108) lpartselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (109) lpartselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (110) lpartselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (111) lpartselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (112) lpartselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (113) lpartselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (114) lpointer -> . pointer
    (115) lconcat -> . LBRACE lconcatlist RBRACE
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET

    ID              shift and go to state 46
    LBRACE          shift and go to state 231

    lpartselect                    shift and go to state 371
    lconcat                        shift and go to state 372
    lconcat_one                    shift and go to state 373
    lpointer                       shift and go to state 374
    scope                          shift and go to state 44
    identifier                     shift and go to state 375
    pointer                        shift and go to state 376
    lconcatlist                    shift and go to state 377

state 232

    (125) lvalue -> identifier .
    (111) lpartselect -> identifier . LBRACKET expression COLON expression RBRACKET
    (112) lpartselect -> identifier . LBRACKET expression PLUSCOLON expression RBRACKET
    (113) lpartselect -> identifier . LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> identifier . LBRACKET expression RBRACKET
    (387) scope -> identifier . DOT

    EQUALS          reduce using rule 125 (lvalue -> identifier .)
    LE              reduce using rule 125 (lvalue -> identifier .)
    LBRACKET        shift and go to state 378
    DOT             shift and go to state 135


state 233

    (77) declnamelist -> declname .

    SEMICOLON       reduce using rule 77 (declnamelist -> declname .)
    COMMA           reduce using rule 77 (declnamelist -> declname .)


state 234

    (35) sigtypes -> sigtypes sigtype .

    LBRACKET        reduce using rule 35 (sigtypes -> sigtypes sigtype .)
    ID              reduce using rule 35 (sigtypes -> sigtypes sigtype .)
    INPUT           reduce using rule 35 (sigtypes -> sigtypes sigtype .)
    OUTPUT          reduce using rule 35 (sigtypes -> sigtypes sigtype .)
    INOUT           reduce using rule 35 (sigtypes -> sigtypes sigtype .)
    TRI             reduce using rule 35 (sigtypes -> sigtypes sigtype .)
    REG             reduce using rule 35 (sigtypes -> sigtypes sigtype .)
    WIRE            reduce using rule 35 (sigtypes -> sigtypes sigtype .)
    SIGNED          reduce using rule 35 (sigtypes -> sigtypes sigtype .)
    SUPPLY0         reduce using rule 35 (sigtypes -> sigtypes sigtype .)
    SUPPLY1         reduce using rule 35 (sigtypes -> sigtypes sigtype .)
    DELAY           reduce using rule 35 (sigtypes -> sigtypes sigtype .)


state 235

    (83) declassign_element -> delays . ID EQUALS delays rvalue

    ID              shift and go to state 379


state 236

    (75) decl -> sigtypes width . declnamelist SEMICOLON
    (81) declassign -> sigtypes width . declassign_element SEMICOLON
    (76) declnamelist -> . declnamelist COMMA declname
    (77) declnamelist -> . declname
    (82) declassign_element -> . ID EQUALS rvalue
    (83) declassign_element -> . delays ID EQUALS delays rvalue
    (78) declname -> . ID
    (79) declname -> . ID length
    (234) delays -> . DELAY LPAREN expression RPAREN
    (235) delays -> . DELAY identifier
    (236) delays -> . DELAY intnumber
    (237) delays -> . DELAY floatnumber
    (238) delays -> . empty
    (393) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 239
    DELAY           shift and go to state 230

  ! ID              [ reduce using rule 393 (empty -> .) ]

    declname                       shift and go to state 233
    delays                         shift and go to state 235
    declassign_element             shift and go to state 380
    declnamelist                   shift and go to state 381
    empty                          shift and go to state 228

state 237

    (74) decl -> sigtypes declnamelist . SEMICOLON
    (76) declnamelist -> declnamelist . COMMA declname

    SEMICOLON       shift and go to state 383
    COMMA           shift and go to state 382


state 238

    (80) declassign -> sigtypes declassign_element . SEMICOLON

    SEMICOLON       shift and go to state 384


state 239

    (82) declassign_element -> ID . EQUALS rvalue
    (78) declname -> ID .
    (79) declname -> ID . length
    (54) length -> . LBRACKET expression COLON expression RBRACKET

    EQUALS          shift and go to state 385
    SEMICOLON       reduce using rule 78 (declname -> ID .)
    COMMA           reduce using rule 78 (declname -> ID .)
    LBRACKET        shift and go to state 386

    length                         shift and go to state 387

state 240

    (370) task -> TASK ID . SEMICOLON task_statement ENDTASK

    SEMICOLON       shift and go to state 388


state 241

    (296) instance -> ID instance_bodylist_noname . SEMICOLON
    (298) instance_bodylist_noname -> instance_bodylist_noname . COMMA instance_body_noname

    SEMICOLON       shift and go to state 390
    COMMA           shift and go to state 389


state 242

    (290) instance -> ID parameterlist . instance_bodylist SEMICOLON
    (292) instance_bodylist -> . instance_bodylist COMMA instance_body
    (293) instance_bodylist -> . instance_body
    (294) instance_body -> . ID LPAREN instance_ports RPAREN
    (295) instance_body -> . ID width LPAREN instance_ports RPAREN

    ID              shift and go to state 393

    instance_bodylist              shift and go to state 391
    instance_body                  shift and go to state 392

state 243

    (300) instance_body_noname -> LPAREN . instance_ports RPAREN
    (311) instance_ports -> . instance_ports_list
    (312) instance_ports -> . instance_ports_arg
    (313) instance_ports_list -> . instance_ports_list COMMA instance_port_list
    (314) instance_ports_list -> . instance_port_list
    (315) instance_ports_list -> . empty
    (317) instance_ports_arg -> . instance_ports_arg COMMA instance_port_arg
    (318) instance_ports_arg -> . instance_port_arg
    (316) instance_port_list -> . expression
    (393) empty -> .
    (319) instance_port_arg -> . DOT ID LPAREN identifier RPAREN
    (320) instance_port_arg -> . DOT ID LPAREN expression RPAREN
    (321) instance_port_arg -> . DOT ID LPAREN RPAREN
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    COMMA           reduce using rule 393 (empty -> .)
    RPAREN          reduce using rule 393 (empty -> .)
    DOT             shift and go to state 395
    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    instance_ports_list            shift and go to state 394
    systemcall                     shift and go to state 27
    stringliteral                  shift and go to state 53
    pointer                        shift and go to state 31
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    instance_ports_arg             shift and go to state 396
    const_expression               shift and go to state 29
    scope                          shift and go to state 44
    instance_ports                 shift and go to state 397
    intnumber                      shift and go to state 37
    empty                          shift and go to state 398
    repeat                         shift and go to state 30
    instance_port_list             shift and go to state 399
    concat                         shift and go to state 47
    instance_port_arg              shift and go to state 400
    functioncall                   shift and go to state 55
    identifier                     shift and go to state 57
    expression                     shift and go to state 401

state 244

    (299) instance_bodylist_noname -> instance_body_noname .

    SEMICOLON       reduce using rule 299 (instance_bodylist_noname -> instance_body_noname .)
    COMMA           reduce using rule 299 (instance_bodylist_noname -> instance_body_noname .)


state 245

    (303) parameterlist -> empty .

    ID              reduce using rule 303 (parameterlist -> empty .)


state 246

    (301) parameterlist -> DELAY . LPAREN param_args RPAREN
    (302) parameterlist -> DELAY . LPAREN param_args_noname RPAREN

    LPAREN          shift and go to state 402


state 247

    (351) function -> FUNCTION width . ID SEMICOLON function_statement ENDFUNCTION

    ID              shift and go to state 403


state 248

    (352) function -> FUNCTION ID . SEMICOLON function_statement ENDFUNCTION

    SEMICOLON       shift and go to state 404


state 249

    (291) instance -> SENS_OR parameterlist . instance_bodylist SEMICOLON
    (292) instance_bodylist -> . instance_bodylist COMMA instance_body
    (293) instance_bodylist -> . instance_body
    (294) instance_body -> . ID LPAREN instance_ports RPAREN
    (295) instance_body -> . ID width LPAREN instance_ports RPAREN

    ID              shift and go to state 393

    instance_bodylist              shift and go to state 405
    instance_body                  shift and go to state 392

state 250

    (297) instance -> SENS_OR instance_bodylist_noname . SEMICOLON
    (298) instance_bodylist_noname -> instance_bodylist_noname . COMMA instance_body_noname

    SEMICOLON       shift and go to state 406
    COMMA           shift and go to state 389


state 251

    (99) localparamdecl -> LOCALPARAM SIGNED . param_substitution_list SEMICOLON
    (101) localparamdecl -> LOCALPARAM SIGNED . width param_substitution_list SEMICOLON
    (103) param_substitution_list -> . param_substitution_list COMMA param_substitution
    (104) param_substitution_list -> . param_substitution
    (53) width -> . LBRACKET expression COLON expression RBRACKET
    (105) param_substitution -> . ID EQUALS rvalue

    LBRACKET        shift and go to state 205
    ID              shift and go to state 209

    width                          shift and go to state 407
    param_substitution             shift and go to state 210
    param_substitution_list        shift and go to state 408

state 252

    (100) localparamdecl -> LOCALPARAM width . param_substitution_list SEMICOLON
    (103) param_substitution_list -> . param_substitution_list COMMA param_substitution
    (104) param_substitution_list -> . param_substitution
    (105) param_substitution -> . ID EQUALS rvalue

    ID              shift and go to state 209

    param_substitution             shift and go to state 210
    param_substitution_list        shift and go to state 409

state 253

    (98) localparamdecl -> LOCALPARAM param_substitution_list . SEMICOLON
    (103) param_substitution_list -> param_substitution_list . COMMA param_substitution

    SEMICOLON       shift and go to state 410
    COMMA           shift and go to state 352


state 254

    (102) localparamdecl -> LOCALPARAM INTEGER . param_substitution_list SEMICOLON
    (103) param_substitution_list -> . param_substitution_list COMMA param_substitution
    (104) param_substitution_list -> . param_substitution
    (105) param_substitution -> . ID EQUALS rvalue

    ID              shift and go to state 209

    param_substitution             shift and go to state 210
    param_substitution_list        shift and go to state 411

state 255

    (9) moduledef -> MODULE modulename paramlist portlist items ENDMODULE .

    MODULE          reduce using rule 9 (moduledef -> MODULE modulename paramlist portlist items ENDMODULE .)
    LPAREN          reduce using rule 9 (moduledef -> MODULE modulename paramlist portlist items ENDMODULE .)
    $end            reduce using rule 9 (moduledef -> MODULE modulename paramlist portlist items ENDMODULE .)


state 256

    (55) items -> items item .

    ENDMODULE       reduce using rule 55 (items -> items item .)
    GENERATE        reduce using rule 55 (items -> items item .)
    INTEGER         reduce using rule 55 (items -> items item .)
    REAL            reduce using rule 55 (items -> items item .)
    PARAMETER       reduce using rule 55 (items -> items item .)
    LOCALPARAM      reduce using rule 55 (items -> items item .)
    GENVAR          reduce using rule 55 (items -> items item .)
    ASSIGN          reduce using rule 55 (items -> items item .)
    ALWAYS          reduce using rule 55 (items -> items item .)
    INITIAL         reduce using rule 55 (items -> items item .)
    ID              reduce using rule 55 (items -> items item .)
    SENS_OR         reduce using rule 55 (items -> items item .)
    FUNCTION        reduce using rule 55 (items -> items item .)
    TASK            reduce using rule 55 (items -> items item .)
    LPAREN          reduce using rule 55 (items -> items item .)
    INPUT           reduce using rule 55 (items -> items item .)
    OUTPUT          reduce using rule 55 (items -> items item .)
    INOUT           reduce using rule 55 (items -> items item .)
    TRI             reduce using rule 55 (items -> items item .)
    REG             reduce using rule 55 (items -> items item .)
    WIRE            reduce using rule 55 (items -> items item .)
    SIGNED          reduce using rule 55 (items -> items item .)
    SUPPLY0         reduce using rule 55 (items -> items item .)
    SUPPLY1         reduce using rule 55 (items -> items item .)


state 257

    (29) portlist -> LPAREN ioports RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 412


state 258

    (46) ioports -> ioports COMMA . ioport
    (48) ioport -> . sigtypes portname
    (49) ioport -> . sigtypes width portname
    (52) ioport -> . portname
    (35) sigtypes -> . sigtypes sigtype
    (36) sigtypes -> . sigtype
    (34) portname -> . ID
    (37) sigtype -> . INPUT
    (38) sigtype -> . OUTPUT
    (39) sigtype -> . INOUT
    (40) sigtype -> . TRI
    (41) sigtype -> . REG
    (42) sigtype -> . WIRE
    (43) sigtype -> . SIGNED
    (44) sigtype -> . SUPPLY0
    (45) sigtype -> . SUPPLY1

    ID              shift and go to state 109
    INPUT           shift and go to state 91
    OUTPUT          shift and go to state 96
    INOUT           shift and go to state 72
    TRI             shift and go to state 89
    REG             shift and go to state 67
    WIRE            shift and go to state 104
    SIGNED          shift and go to state 98
    SUPPLY0         shift and go to state 79
    SUPPLY1         shift and go to state 80

    sigtype                        shift and go to state 75
    ioport                         shift and go to state 413
    sigtypes                       shift and go to state 414
    portname                       shift and go to state 415

state 259

    (30) portlist -> LPAREN RPAREN SEMICOLON .

    GENERATE        reduce using rule 30 (portlist -> LPAREN RPAREN SEMICOLON .)
    INTEGER         reduce using rule 30 (portlist -> LPAREN RPAREN SEMICOLON .)
    REAL            reduce using rule 30 (portlist -> LPAREN RPAREN SEMICOLON .)
    PARAMETER       reduce using rule 30 (portlist -> LPAREN RPAREN SEMICOLON .)
    LOCALPARAM      reduce using rule 30 (portlist -> LPAREN RPAREN SEMICOLON .)
    GENVAR          reduce using rule 30 (portlist -> LPAREN RPAREN SEMICOLON .)
    ASSIGN          reduce using rule 30 (portlist -> LPAREN RPAREN SEMICOLON .)
    ALWAYS          reduce using rule 30 (portlist -> LPAREN RPAREN SEMICOLON .)
    INITIAL         reduce using rule 30 (portlist -> LPAREN RPAREN SEMICOLON .)
    ID              reduce using rule 30 (portlist -> LPAREN RPAREN SEMICOLON .)
    SENS_OR         reduce using rule 30 (portlist -> LPAREN RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 30 (portlist -> LPAREN RPAREN SEMICOLON .)
    TASK            reduce using rule 30 (portlist -> LPAREN RPAREN SEMICOLON .)
    LPAREN          reduce using rule 30 (portlist -> LPAREN RPAREN SEMICOLON .)
    INPUT           reduce using rule 30 (portlist -> LPAREN RPAREN SEMICOLON .)
    OUTPUT          reduce using rule 30 (portlist -> LPAREN RPAREN SEMICOLON .)
    INOUT           reduce using rule 30 (portlist -> LPAREN RPAREN SEMICOLON .)
    TRI             reduce using rule 30 (portlist -> LPAREN RPAREN SEMICOLON .)
    REG             reduce using rule 30 (portlist -> LPAREN RPAREN SEMICOLON .)
    WIRE            reduce using rule 30 (portlist -> LPAREN RPAREN SEMICOLON .)
    SIGNED          reduce using rule 30 (portlist -> LPAREN RPAREN SEMICOLON .)
    SUPPLY0         reduce using rule 30 (portlist -> LPAREN RPAREN SEMICOLON .)
    SUPPLY1         reduce using rule 30 (portlist -> LPAREN RPAREN SEMICOLON .)
    ENDMODULE       reduce using rule 30 (portlist -> LPAREN RPAREN SEMICOLON .)


state 260

    (51) ioport_head -> sigtypes width . portname
    (34) portname -> . ID

    ID              shift and go to state 109

    portname                       shift and go to state 416

state 261

    (50) ioport_head -> sigtypes portname .

    RPAREN          reduce using rule 50 (ioport_head -> sigtypes portname .)
    COMMA           reduce using rule 50 (ioport_head -> sigtypes portname .)


state 262

    (28) portlist -> LPAREN ports RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 417


state 263

    (32) ports -> ports COMMA . portname
    (34) portname -> . ID

    ID              shift and go to state 109

    portname                       shift and go to state 418

state 264

    (14) params -> params_begin param_end .

    RPAREN          reduce using rule 14 (params -> params_begin param_end .)


state 265

    (15) params_begin -> params_begin param .

    PARAMETER       reduce using rule 15 (params_begin -> params_begin param .)


state 266

    (12) paramlist -> DELAY LPAREN params RPAREN .

    LPAREN          reduce using rule 12 (paramlist -> DELAY LPAREN params RPAREN .)
    SEMICOLON       reduce using rule 12 (paramlist -> DELAY LPAREN params RPAREN .)


state 267

    (24) param_end -> PARAMETER SIGNED . param_substitution_list
    (26) param_end -> PARAMETER SIGNED . width param_substitution_list
    (19) param -> PARAMETER SIGNED . param_substitution_list COMMA
    (21) param -> PARAMETER SIGNED . width param_substitution_list COMMA
    (103) param_substitution_list -> . param_substitution_list COMMA param_substitution
    (104) param_substitution_list -> . param_substitution
    (53) width -> . LBRACKET expression COLON expression RBRACKET
    (105) param_substitution -> . ID EQUALS rvalue

    LBRACKET        shift and go to state 205
    ID              shift and go to state 209

    width                          shift and go to state 419
    param_substitution             shift and go to state 210
    param_substitution_list        shift and go to state 420

state 268

    (25) param_end -> PARAMETER width . param_substitution_list
    (20) param -> PARAMETER width . param_substitution_list COMMA
    (103) param_substitution_list -> . param_substitution_list COMMA param_substitution
    (104) param_substitution_list -> . param_substitution
    (105) param_substitution -> . ID EQUALS rvalue

    ID              shift and go to state 209

    param_substitution             shift and go to state 210
    param_substitution_list        shift and go to state 421

state 269

    (23) param_end -> PARAMETER param_substitution_list .
    (18) param -> PARAMETER param_substitution_list . COMMA
    (103) param_substitution_list -> param_substitution_list . COMMA param_substitution

    RPAREN          reduce using rule 23 (param_end -> PARAMETER param_substitution_list .)
    COMMA           shift and go to state 422


state 270

    (27) param_end -> PARAMETER INTEGER . param_substitution_list
    (22) param -> PARAMETER INTEGER . param_substitution_list COMMA
    (103) param_substitution_list -> . param_substitution_list COMMA param_substitution
    (104) param_substitution_list -> . param_substitution
    (105) param_substitution -> . ID EQUALS rvalue

    ID              shift and go to state 209

    param_substitution             shift and go to state 210
    param_substitution_list        shift and go to state 423

state 271

    (138) expression -> expression TIMES . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 301
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 272

    (178) partselect -> pointer LBRACKET expression . COLON expression RBRACKET
    (179) partselect -> pointer LBRACKET expression . PLUSCOLON expression RBRACKET
    (180) partselect -> pointer LBRACKET expression . MINUSCOLON expression RBRACKET
    (182) pointer -> pointer LBRACKET expression . RBRACKET
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    COLON           shift and go to state 424
    PLUSCOLON       shift and go to state 425
    MINUSCOLON      shift and go to state 426
    RBRACKET        shift and go to state 427
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147
    LT              shift and go to state 145
    GT              shift and go to state 149
    LE              shift and go to state 142
    GE              shift and go to state 153
    EQ              shift and go to state 156
    NE              shift and go to state 144
    EQL             shift and go to state 155
    NEL             shift and go to state 136
    AND             shift and go to state 157
    XOR             shift and go to state 150
    XNOR            shift and go to state 148
    OR              shift and go to state 159
    LAND            shift and go to state 154
    LOR             shift and go to state 138
    COND            shift and go to state 139


state 273

    (162) expression -> LPAREN expression RPAREN .

    RBRACKET        reduce using rule 162 (expression -> LPAREN expression RPAREN .)
    POWER           reduce using rule 162 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 162 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 162 (expression -> LPAREN expression RPAREN .)
    MOD             reduce using rule 162 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 162 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 162 (expression -> LPAREN expression RPAREN .)
    LSHIFT          reduce using rule 162 (expression -> LPAREN expression RPAREN .)
    RSHIFT          reduce using rule 162 (expression -> LPAREN expression RPAREN .)
    LSHIFTA         reduce using rule 162 (expression -> LPAREN expression RPAREN .)
    RSHIFTA         reduce using rule 162 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 162 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 162 (expression -> LPAREN expression RPAREN .)
    LE              reduce using rule 162 (expression -> LPAREN expression RPAREN .)
    GE              reduce using rule 162 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 162 (expression -> LPAREN expression RPAREN .)
    NE              reduce using rule 162 (expression -> LPAREN expression RPAREN .)
    EQL             reduce using rule 162 (expression -> LPAREN expression RPAREN .)
    NEL             reduce using rule 162 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 162 (expression -> LPAREN expression RPAREN .)
    XOR             reduce using rule 162 (expression -> LPAREN expression RPAREN .)
    XNOR            reduce using rule 162 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 162 (expression -> LPAREN expression RPAREN .)
    LAND            reduce using rule 162 (expression -> LPAREN expression RPAREN .)
    LOR             reduce using rule 162 (expression -> LPAREN expression RPAREN .)
    COND            reduce using rule 162 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 162 (expression -> LPAREN expression RPAREN .)
    COLON           reduce using rule 162 (expression -> LPAREN expression RPAREN .)
    PLUSCOLON       reduce using rule 162 (expression -> LPAREN expression RPAREN .)
    MINUSCOLON      reduce using rule 162 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 162 (expression -> LPAREN expression RPAREN .)
    LBRACE          reduce using rule 162 (expression -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 162 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 162 (expression -> LPAREN expression RPAREN .)


state 274

    (172) concatlist -> concatlist COMMA . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 428
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 275

    (171) concat -> LBRACE concatlist RBRACE .

    RBRACKET        reduce using rule 171 (concat -> LBRACE concatlist RBRACE .)
    POWER           reduce using rule 171 (concat -> LBRACE concatlist RBRACE .)
    TIMES           reduce using rule 171 (concat -> LBRACE concatlist RBRACE .)
    DIVIDE          reduce using rule 171 (concat -> LBRACE concatlist RBRACE .)
    MOD             reduce using rule 171 (concat -> LBRACE concatlist RBRACE .)
    PLUS            reduce using rule 171 (concat -> LBRACE concatlist RBRACE .)
    MINUS           reduce using rule 171 (concat -> LBRACE concatlist RBRACE .)
    LSHIFT          reduce using rule 171 (concat -> LBRACE concatlist RBRACE .)
    RSHIFT          reduce using rule 171 (concat -> LBRACE concatlist RBRACE .)
    LSHIFTA         reduce using rule 171 (concat -> LBRACE concatlist RBRACE .)
    RSHIFTA         reduce using rule 171 (concat -> LBRACE concatlist RBRACE .)
    LT              reduce using rule 171 (concat -> LBRACE concatlist RBRACE .)
    GT              reduce using rule 171 (concat -> LBRACE concatlist RBRACE .)
    LE              reduce using rule 171 (concat -> LBRACE concatlist RBRACE .)
    GE              reduce using rule 171 (concat -> LBRACE concatlist RBRACE .)
    EQ              reduce using rule 171 (concat -> LBRACE concatlist RBRACE .)
    NE              reduce using rule 171 (concat -> LBRACE concatlist RBRACE .)
    EQL             reduce using rule 171 (concat -> LBRACE concatlist RBRACE .)
    NEL             reduce using rule 171 (concat -> LBRACE concatlist RBRACE .)
    AND             reduce using rule 171 (concat -> LBRACE concatlist RBRACE .)
    XOR             reduce using rule 171 (concat -> LBRACE concatlist RBRACE .)
    XNOR            reduce using rule 171 (concat -> LBRACE concatlist RBRACE .)
    OR              reduce using rule 171 (concat -> LBRACE concatlist RBRACE .)
    LAND            reduce using rule 171 (concat -> LBRACE concatlist RBRACE .)
    LOR             reduce using rule 171 (concat -> LBRACE concatlist RBRACE .)
    COND            reduce using rule 171 (concat -> LBRACE concatlist RBRACE .)
    RPAREN          reduce using rule 171 (concat -> LBRACE concatlist RBRACE .)
    COLON           reduce using rule 171 (concat -> LBRACE concatlist RBRACE .)
    PLUSCOLON       reduce using rule 171 (concat -> LBRACE concatlist RBRACE .)
    MINUSCOLON      reduce using rule 171 (concat -> LBRACE concatlist RBRACE .)
    COMMA           reduce using rule 171 (concat -> LBRACE concatlist RBRACE .)
    LBRACE          reduce using rule 171 (concat -> LBRACE concatlist RBRACE .)
    RBRACE          reduce using rule 171 (concat -> LBRACE concatlist RBRACE .)
    SEMICOLON       reduce using rule 171 (concat -> LBRACE concatlist RBRACE .)


state 276

    (174) repeat -> LBRACE expression concat . RBRACE

    RBRACE          shift and go to state 429


state 277

    (171) concat -> LBRACE . concatlist RBRACE
    (172) concatlist -> . concatlist COMMA expression
    (173) concatlist -> . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 430
    concatlist                     shift and go to state 128
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 278

    (346) systemcall -> DOLLER SIGNED LPAREN . sysargs RPAREN
    (347) sysargs -> . sysargs COMMA sysarg
    (348) sysargs -> . sysarg
    (349) sysargs -> . empty
    (350) sysarg -> . expression
    (393) empty -> .
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    RPAREN          reduce using rule 393 (empty -> .)
    COMMA           reduce using rule 393 (empty -> .)
    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    systemcall                     shift and go to state 27
    stringliteral                  shift and go to state 53
    sysarg                         shift and go to state 431
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    empty                          shift and go to state 433
    scope                          shift and go to state 44
    sysargs                        shift and go to state 432
    expression                     shift and go to state 434
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    floatnumber                    shift and go to state 51

state 279

    (345) systemcall -> DOLLER ID LPAREN . sysargs RPAREN
    (347) sysargs -> . sysargs COMMA sysarg
    (348) sysargs -> . sysarg
    (349) sysargs -> . empty
    (350) sysarg -> . expression
    (393) empty -> .
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    RPAREN          reduce using rule 393 (empty -> .)
    COMMA           reduce using rule 393 (empty -> .)
    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    systemcall                     shift and go to state 27
    stringliteral                  shift and go to state 53
    sysarg                         shift and go to state 431
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    empty                          shift and go to state 433
    scope                          shift and go to state 44
    sysargs                        shift and go to state 435
    expression                     shift and go to state 434
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    floatnumber                    shift and go to state 51

state 280

    (175) partselect -> identifier LBRACKET expression . COLON expression RBRACKET
    (176) partselect -> identifier LBRACKET expression . PLUSCOLON expression RBRACKET
    (177) partselect -> identifier LBRACKET expression . MINUSCOLON expression RBRACKET
    (181) pointer -> identifier LBRACKET expression . RBRACKET
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    COLON           shift and go to state 436
    PLUSCOLON       shift and go to state 437
    MINUSCOLON      shift and go to state 438
    RBRACKET        shift and go to state 439
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147
    LT              shift and go to state 145
    GT              shift and go to state 149
    LE              shift and go to state 142
    GE              shift and go to state 153
    EQ              shift and go to state 156
    NE              shift and go to state 144
    EQL             shift and go to state 155
    NEL             shift and go to state 136
    AND             shift and go to state 157
    XOR             shift and go to state 150
    XNOR            shift and go to state 148
    OR              shift and go to state 159
    LAND            shift and go to state 154
    LOR             shift and go to state 138
    COND            shift and go to state 139


state 281

    (366) functioncall -> identifier LPAREN func_args . RPAREN
    (367) func_args -> func_args . COMMA expression

    RPAREN          shift and go to state 440
    COMMA           shift and go to state 441


state 282

    (369) func_args -> empty .

    RPAREN          reduce using rule 369 (func_args -> empty .)
    COMMA           reduce using rule 369 (func_args -> empty .)


state 283

    (368) func_args -> expression .
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RPAREN          reduce using rule 368 (func_args -> expression .)
    COMMA           reduce using rule 368 (func_args -> expression .)
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147
    LT              shift and go to state 145
    GT              shift and go to state 149
    LE              shift and go to state 142
    GE              shift and go to state 153
    EQ              shift and go to state 156
    NE              shift and go to state 144
    EQL             shift and go to state 155
    NEL             shift and go to state 136
    AND             shift and go to state 157
    XOR             shift and go to state 150
    XNOR            shift and go to state 148
    OR              shift and go to state 159
    LAND            shift and go to state 154
    LOR             shift and go to state 138
    COND            shift and go to state 139


state 284

    (154) expression -> expression NEL expression .
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RBRACKET        reduce using rule 154 (expression -> expression NEL expression .)
    EQ              reduce using rule 154 (expression -> expression NEL expression .)
    NE              reduce using rule 154 (expression -> expression NEL expression .)
    EQL             reduce using rule 154 (expression -> expression NEL expression .)
    NEL             reduce using rule 154 (expression -> expression NEL expression .)
    AND             reduce using rule 154 (expression -> expression NEL expression .)
    XOR             reduce using rule 154 (expression -> expression NEL expression .)
    XNOR            reduce using rule 154 (expression -> expression NEL expression .)
    OR              reduce using rule 154 (expression -> expression NEL expression .)
    LAND            reduce using rule 154 (expression -> expression NEL expression .)
    LOR             reduce using rule 154 (expression -> expression NEL expression .)
    COND            reduce using rule 154 (expression -> expression NEL expression .)
    RPAREN          reduce using rule 154 (expression -> expression NEL expression .)
    COLON           reduce using rule 154 (expression -> expression NEL expression .)
    PLUSCOLON       reduce using rule 154 (expression -> expression NEL expression .)
    MINUSCOLON      reduce using rule 154 (expression -> expression NEL expression .)
    SEMICOLON       reduce using rule 154 (expression -> expression NEL expression .)
    LBRACE          reduce using rule 154 (expression -> expression NEL expression .)
    RBRACE          reduce using rule 154 (expression -> expression NEL expression .)
    COMMA           reduce using rule 154 (expression -> expression NEL expression .)
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147
    LT              shift and go to state 145
    GT              shift and go to state 149
    LE              shift and go to state 142
    GE              shift and go to state 153

  ! POWER           [ reduce using rule 154 (expression -> expression NEL expression .) ]
  ! TIMES           [ reduce using rule 154 (expression -> expression NEL expression .) ]
  ! DIVIDE          [ reduce using rule 154 (expression -> expression NEL expression .) ]
  ! MOD             [ reduce using rule 154 (expression -> expression NEL expression .) ]
  ! PLUS            [ reduce using rule 154 (expression -> expression NEL expression .) ]
  ! MINUS           [ reduce using rule 154 (expression -> expression NEL expression .) ]
  ! LSHIFT          [ reduce using rule 154 (expression -> expression NEL expression .) ]
  ! RSHIFT          [ reduce using rule 154 (expression -> expression NEL expression .) ]
  ! LSHIFTA         [ reduce using rule 154 (expression -> expression NEL expression .) ]
  ! RSHIFTA         [ reduce using rule 154 (expression -> expression NEL expression .) ]
  ! LT              [ reduce using rule 154 (expression -> expression NEL expression .) ]
  ! GT              [ reduce using rule 154 (expression -> expression NEL expression .) ]
  ! LE              [ reduce using rule 154 (expression -> expression NEL expression .) ]
  ! GE              [ reduce using rule 154 (expression -> expression NEL expression .) ]
  ! EQ              [ shift and go to state 156 ]
  ! NE              [ shift and go to state 144 ]
  ! EQL             [ shift and go to state 155 ]
  ! NEL             [ shift and go to state 136 ]
  ! AND             [ shift and go to state 157 ]
  ! XOR             [ shift and go to state 150 ]
  ! XNOR            [ shift and go to state 148 ]
  ! OR              [ shift and go to state 159 ]
  ! LAND            [ shift and go to state 154 ]
  ! LOR             [ shift and go to state 138 ]
  ! COND            [ shift and go to state 139 ]


state 285

    (144) expression -> expression RSHIFT expression .
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RBRACKET        reduce using rule 144 (expression -> expression RSHIFT expression .)
    LSHIFT          reduce using rule 144 (expression -> expression RSHIFT expression .)
    RSHIFT          reduce using rule 144 (expression -> expression RSHIFT expression .)
    LSHIFTA         reduce using rule 144 (expression -> expression RSHIFT expression .)
    RSHIFTA         reduce using rule 144 (expression -> expression RSHIFT expression .)
    LT              reduce using rule 144 (expression -> expression RSHIFT expression .)
    GT              reduce using rule 144 (expression -> expression RSHIFT expression .)
    LE              reduce using rule 144 (expression -> expression RSHIFT expression .)
    GE              reduce using rule 144 (expression -> expression RSHIFT expression .)
    EQ              reduce using rule 144 (expression -> expression RSHIFT expression .)
    NE              reduce using rule 144 (expression -> expression RSHIFT expression .)
    EQL             reduce using rule 144 (expression -> expression RSHIFT expression .)
    NEL             reduce using rule 144 (expression -> expression RSHIFT expression .)
    AND             reduce using rule 144 (expression -> expression RSHIFT expression .)
    XOR             reduce using rule 144 (expression -> expression RSHIFT expression .)
    XNOR            reduce using rule 144 (expression -> expression RSHIFT expression .)
    OR              reduce using rule 144 (expression -> expression RSHIFT expression .)
    LAND            reduce using rule 144 (expression -> expression RSHIFT expression .)
    LOR             reduce using rule 144 (expression -> expression RSHIFT expression .)
    COND            reduce using rule 144 (expression -> expression RSHIFT expression .)
    RPAREN          reduce using rule 144 (expression -> expression RSHIFT expression .)
    COLON           reduce using rule 144 (expression -> expression RSHIFT expression .)
    PLUSCOLON       reduce using rule 144 (expression -> expression RSHIFT expression .)
    MINUSCOLON      reduce using rule 144 (expression -> expression RSHIFT expression .)
    SEMICOLON       reduce using rule 144 (expression -> expression RSHIFT expression .)
    LBRACE          reduce using rule 144 (expression -> expression RSHIFT expression .)
    RBRACE          reduce using rule 144 (expression -> expression RSHIFT expression .)
    COMMA           reduce using rule 144 (expression -> expression RSHIFT expression .)
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141

  ! POWER           [ reduce using rule 144 (expression -> expression RSHIFT expression .) ]
  ! TIMES           [ reduce using rule 144 (expression -> expression RSHIFT expression .) ]
  ! DIVIDE          [ reduce using rule 144 (expression -> expression RSHIFT expression .) ]
  ! MOD             [ reduce using rule 144 (expression -> expression RSHIFT expression .) ]
  ! PLUS            [ reduce using rule 144 (expression -> expression RSHIFT expression .) ]
  ! MINUS           [ reduce using rule 144 (expression -> expression RSHIFT expression .) ]
  ! LSHIFT          [ shift and go to state 140 ]
  ! RSHIFT          [ shift and go to state 137 ]
  ! LSHIFTA         [ shift and go to state 158 ]
  ! RSHIFTA         [ shift and go to state 147 ]
  ! LT              [ shift and go to state 145 ]
  ! GT              [ shift and go to state 149 ]
  ! LE              [ shift and go to state 142 ]
  ! GE              [ shift and go to state 153 ]
  ! EQ              [ shift and go to state 156 ]
  ! NE              [ shift and go to state 144 ]
  ! EQL             [ shift and go to state 155 ]
  ! NEL             [ shift and go to state 136 ]
  ! AND             [ shift and go to state 157 ]
  ! XOR             [ shift and go to state 150 ]
  ! XNOR            [ shift and go to state 148 ]
  ! OR              [ shift and go to state 159 ]
  ! LAND            [ shift and go to state 154 ]
  ! LOR             [ shift and go to state 138 ]
  ! COND            [ shift and go to state 139 ]


state 286

    (160) expression -> expression LOR expression .
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RBRACKET        reduce using rule 160 (expression -> expression LOR expression .)
    LOR             reduce using rule 160 (expression -> expression LOR expression .)
    COND            reduce using rule 160 (expression -> expression LOR expression .)
    RPAREN          reduce using rule 160 (expression -> expression LOR expression .)
    COLON           reduce using rule 160 (expression -> expression LOR expression .)
    PLUSCOLON       reduce using rule 160 (expression -> expression LOR expression .)
    MINUSCOLON      reduce using rule 160 (expression -> expression LOR expression .)
    SEMICOLON       reduce using rule 160 (expression -> expression LOR expression .)
    LBRACE          reduce using rule 160 (expression -> expression LOR expression .)
    RBRACE          reduce using rule 160 (expression -> expression LOR expression .)
    COMMA           reduce using rule 160 (expression -> expression LOR expression .)
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147
    LT              shift and go to state 145
    GT              shift and go to state 149
    LE              shift and go to state 142
    GE              shift and go to state 153
    EQ              shift and go to state 156
    NE              shift and go to state 144
    EQL             shift and go to state 155
    NEL             shift and go to state 136
    AND             shift and go to state 157
    XOR             shift and go to state 150
    XNOR            shift and go to state 148
    OR              shift and go to state 159
    LAND            shift and go to state 154

  ! POWER           [ reduce using rule 160 (expression -> expression LOR expression .) ]
  ! TIMES           [ reduce using rule 160 (expression -> expression LOR expression .) ]
  ! DIVIDE          [ reduce using rule 160 (expression -> expression LOR expression .) ]
  ! MOD             [ reduce using rule 160 (expression -> expression LOR expression .) ]
  ! PLUS            [ reduce using rule 160 (expression -> expression LOR expression .) ]
  ! MINUS           [ reduce using rule 160 (expression -> expression LOR expression .) ]
  ! LSHIFT          [ reduce using rule 160 (expression -> expression LOR expression .) ]
  ! RSHIFT          [ reduce using rule 160 (expression -> expression LOR expression .) ]
  ! LSHIFTA         [ reduce using rule 160 (expression -> expression LOR expression .) ]
  ! RSHIFTA         [ reduce using rule 160 (expression -> expression LOR expression .) ]
  ! LT              [ reduce using rule 160 (expression -> expression LOR expression .) ]
  ! GT              [ reduce using rule 160 (expression -> expression LOR expression .) ]
  ! LE              [ reduce using rule 160 (expression -> expression LOR expression .) ]
  ! GE              [ reduce using rule 160 (expression -> expression LOR expression .) ]
  ! EQ              [ reduce using rule 160 (expression -> expression LOR expression .) ]
  ! NE              [ reduce using rule 160 (expression -> expression LOR expression .) ]
  ! EQL             [ reduce using rule 160 (expression -> expression LOR expression .) ]
  ! NEL             [ reduce using rule 160 (expression -> expression LOR expression .) ]
  ! AND             [ reduce using rule 160 (expression -> expression LOR expression .) ]
  ! XOR             [ reduce using rule 160 (expression -> expression LOR expression .) ]
  ! XNOR            [ reduce using rule 160 (expression -> expression LOR expression .) ]
  ! OR              [ reduce using rule 160 (expression -> expression LOR expression .) ]
  ! LAND            [ reduce using rule 160 (expression -> expression LOR expression .) ]
  ! LOR             [ shift and go to state 138 ]
  ! COND            [ shift and go to state 139 ]


state 287

    (161) expression -> expression COND expression . COLON expression
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    COLON           shift and go to state 442
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147
    LT              shift and go to state 145
    GT              shift and go to state 149
    LE              shift and go to state 142
    GE              shift and go to state 153
    EQ              shift and go to state 156
    NE              shift and go to state 144
    EQL             shift and go to state 155
    NEL             shift and go to state 136
    AND             shift and go to state 157
    XOR             shift and go to state 150
    XNOR            shift and go to state 148
    OR              shift and go to state 159
    LAND            shift and go to state 154
    LOR             shift and go to state 138
    COND            shift and go to state 139


state 288

    (143) expression -> expression LSHIFT expression .
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RBRACKET        reduce using rule 143 (expression -> expression LSHIFT expression .)
    LSHIFT          reduce using rule 143 (expression -> expression LSHIFT expression .)
    RSHIFT          reduce using rule 143 (expression -> expression LSHIFT expression .)
    LSHIFTA         reduce using rule 143 (expression -> expression LSHIFT expression .)
    RSHIFTA         reduce using rule 143 (expression -> expression LSHIFT expression .)
    LT              reduce using rule 143 (expression -> expression LSHIFT expression .)
    GT              reduce using rule 143 (expression -> expression LSHIFT expression .)
    LE              reduce using rule 143 (expression -> expression LSHIFT expression .)
    GE              reduce using rule 143 (expression -> expression LSHIFT expression .)
    EQ              reduce using rule 143 (expression -> expression LSHIFT expression .)
    NE              reduce using rule 143 (expression -> expression LSHIFT expression .)
    EQL             reduce using rule 143 (expression -> expression LSHIFT expression .)
    NEL             reduce using rule 143 (expression -> expression LSHIFT expression .)
    AND             reduce using rule 143 (expression -> expression LSHIFT expression .)
    XOR             reduce using rule 143 (expression -> expression LSHIFT expression .)
    XNOR            reduce using rule 143 (expression -> expression LSHIFT expression .)
    OR              reduce using rule 143 (expression -> expression LSHIFT expression .)
    LAND            reduce using rule 143 (expression -> expression LSHIFT expression .)
    LOR             reduce using rule 143 (expression -> expression LSHIFT expression .)
    COND            reduce using rule 143 (expression -> expression LSHIFT expression .)
    RPAREN          reduce using rule 143 (expression -> expression LSHIFT expression .)
    COLON           reduce using rule 143 (expression -> expression LSHIFT expression .)
    PLUSCOLON       reduce using rule 143 (expression -> expression LSHIFT expression .)
    MINUSCOLON      reduce using rule 143 (expression -> expression LSHIFT expression .)
    SEMICOLON       reduce using rule 143 (expression -> expression LSHIFT expression .)
    LBRACE          reduce using rule 143 (expression -> expression LSHIFT expression .)
    RBRACE          reduce using rule 143 (expression -> expression LSHIFT expression .)
    COMMA           reduce using rule 143 (expression -> expression LSHIFT expression .)
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141

  ! POWER           [ reduce using rule 143 (expression -> expression LSHIFT expression .) ]
  ! TIMES           [ reduce using rule 143 (expression -> expression LSHIFT expression .) ]
  ! DIVIDE          [ reduce using rule 143 (expression -> expression LSHIFT expression .) ]
  ! MOD             [ reduce using rule 143 (expression -> expression LSHIFT expression .) ]
  ! PLUS            [ reduce using rule 143 (expression -> expression LSHIFT expression .) ]
  ! MINUS           [ reduce using rule 143 (expression -> expression LSHIFT expression .) ]
  ! LSHIFT          [ shift and go to state 140 ]
  ! RSHIFT          [ shift and go to state 137 ]
  ! LSHIFTA         [ shift and go to state 158 ]
  ! RSHIFTA         [ shift and go to state 147 ]
  ! LT              [ shift and go to state 145 ]
  ! GT              [ shift and go to state 149 ]
  ! LE              [ shift and go to state 142 ]
  ! GE              [ shift and go to state 153 ]
  ! EQ              [ shift and go to state 156 ]
  ! NE              [ shift and go to state 144 ]
  ! EQL             [ shift and go to state 155 ]
  ! NEL             [ shift and go to state 136 ]
  ! AND             [ shift and go to state 157 ]
  ! XOR             [ shift and go to state 150 ]
  ! XNOR            [ shift and go to state 148 ]
  ! OR              [ shift and go to state 159 ]
  ! LAND            [ shift and go to state 154 ]
  ! LOR             [ shift and go to state 138 ]
  ! COND            [ shift and go to state 139 ]


state 289

    (142) expression -> expression MINUS expression .
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RBRACKET        reduce using rule 142 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 142 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 142 (expression -> expression MINUS expression .)
    LSHIFT          reduce using rule 142 (expression -> expression MINUS expression .)
    RSHIFT          reduce using rule 142 (expression -> expression MINUS expression .)
    LSHIFTA         reduce using rule 142 (expression -> expression MINUS expression .)
    RSHIFTA         reduce using rule 142 (expression -> expression MINUS expression .)
    LT              reduce using rule 142 (expression -> expression MINUS expression .)
    GT              reduce using rule 142 (expression -> expression MINUS expression .)
    LE              reduce using rule 142 (expression -> expression MINUS expression .)
    GE              reduce using rule 142 (expression -> expression MINUS expression .)
    EQ              reduce using rule 142 (expression -> expression MINUS expression .)
    NE              reduce using rule 142 (expression -> expression MINUS expression .)
    EQL             reduce using rule 142 (expression -> expression MINUS expression .)
    NEL             reduce using rule 142 (expression -> expression MINUS expression .)
    AND             reduce using rule 142 (expression -> expression MINUS expression .)
    XOR             reduce using rule 142 (expression -> expression MINUS expression .)
    XNOR            reduce using rule 142 (expression -> expression MINUS expression .)
    OR              reduce using rule 142 (expression -> expression MINUS expression .)
    LAND            reduce using rule 142 (expression -> expression MINUS expression .)
    LOR             reduce using rule 142 (expression -> expression MINUS expression .)
    COND            reduce using rule 142 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 142 (expression -> expression MINUS expression .)
    COLON           reduce using rule 142 (expression -> expression MINUS expression .)
    PLUSCOLON       reduce using rule 142 (expression -> expression MINUS expression .)
    MINUSCOLON      reduce using rule 142 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 142 (expression -> expression MINUS expression .)
    LBRACE          reduce using rule 142 (expression -> expression MINUS expression .)
    RBRACE          reduce using rule 142 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 142 (expression -> expression MINUS expression .)
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160

  ! POWER           [ reduce using rule 142 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 142 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 142 (expression -> expression MINUS expression .) ]
  ! MOD             [ reduce using rule 142 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 146 ]
  ! MINUS           [ shift and go to state 141 ]
  ! LSHIFT          [ shift and go to state 140 ]
  ! RSHIFT          [ shift and go to state 137 ]
  ! LSHIFTA         [ shift and go to state 158 ]
  ! RSHIFTA         [ shift and go to state 147 ]
  ! LT              [ shift and go to state 145 ]
  ! GT              [ shift and go to state 149 ]
  ! LE              [ shift and go to state 142 ]
  ! GE              [ shift and go to state 153 ]
  ! EQ              [ shift and go to state 156 ]
  ! NE              [ shift and go to state 144 ]
  ! EQL             [ shift and go to state 155 ]
  ! NEL             [ shift and go to state 136 ]
  ! AND             [ shift and go to state 157 ]
  ! XOR             [ shift and go to state 150 ]
  ! XNOR            [ shift and go to state 148 ]
  ! OR              [ shift and go to state 159 ]
  ! LAND            [ shift and go to state 154 ]
  ! LOR             [ shift and go to state 138 ]
  ! COND            [ shift and go to state 139 ]


state 290

    (149) expression -> expression LE expression .
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RBRACKET        reduce using rule 149 (expression -> expression LE expression .)
    LT              reduce using rule 149 (expression -> expression LE expression .)
    GT              reduce using rule 149 (expression -> expression LE expression .)
    LE              reduce using rule 149 (expression -> expression LE expression .)
    GE              reduce using rule 149 (expression -> expression LE expression .)
    EQ              reduce using rule 149 (expression -> expression LE expression .)
    NE              reduce using rule 149 (expression -> expression LE expression .)
    EQL             reduce using rule 149 (expression -> expression LE expression .)
    NEL             reduce using rule 149 (expression -> expression LE expression .)
    AND             reduce using rule 149 (expression -> expression LE expression .)
    XOR             reduce using rule 149 (expression -> expression LE expression .)
    XNOR            reduce using rule 149 (expression -> expression LE expression .)
    OR              reduce using rule 149 (expression -> expression LE expression .)
    LAND            reduce using rule 149 (expression -> expression LE expression .)
    LOR             reduce using rule 149 (expression -> expression LE expression .)
    COND            reduce using rule 149 (expression -> expression LE expression .)
    RPAREN          reduce using rule 149 (expression -> expression LE expression .)
    COLON           reduce using rule 149 (expression -> expression LE expression .)
    PLUSCOLON       reduce using rule 149 (expression -> expression LE expression .)
    MINUSCOLON      reduce using rule 149 (expression -> expression LE expression .)
    SEMICOLON       reduce using rule 149 (expression -> expression LE expression .)
    LBRACE          reduce using rule 149 (expression -> expression LE expression .)
    RBRACE          reduce using rule 149 (expression -> expression LE expression .)
    COMMA           reduce using rule 149 (expression -> expression LE expression .)
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147

  ! POWER           [ reduce using rule 149 (expression -> expression LE expression .) ]
  ! TIMES           [ reduce using rule 149 (expression -> expression LE expression .) ]
  ! DIVIDE          [ reduce using rule 149 (expression -> expression LE expression .) ]
  ! MOD             [ reduce using rule 149 (expression -> expression LE expression .) ]
  ! PLUS            [ reduce using rule 149 (expression -> expression LE expression .) ]
  ! MINUS           [ reduce using rule 149 (expression -> expression LE expression .) ]
  ! LSHIFT          [ reduce using rule 149 (expression -> expression LE expression .) ]
  ! RSHIFT          [ reduce using rule 149 (expression -> expression LE expression .) ]
  ! LSHIFTA         [ reduce using rule 149 (expression -> expression LE expression .) ]
  ! RSHIFTA         [ reduce using rule 149 (expression -> expression LE expression .) ]
  ! LT              [ shift and go to state 145 ]
  ! GT              [ shift and go to state 149 ]
  ! LE              [ shift and go to state 142 ]
  ! GE              [ shift and go to state 153 ]
  ! EQ              [ shift and go to state 156 ]
  ! NE              [ shift and go to state 144 ]
  ! EQL             [ shift and go to state 155 ]
  ! NEL             [ shift and go to state 136 ]
  ! AND             [ shift and go to state 157 ]
  ! XOR             [ shift and go to state 150 ]
  ! XNOR            [ shift and go to state 148 ]
  ! OR              [ shift and go to state 159 ]
  ! LAND            [ shift and go to state 154 ]
  ! LOR             [ shift and go to state 138 ]
  ! COND            [ shift and go to state 139 ]


state 291

    (137) expression -> expression POWER expression .
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RBRACKET        reduce using rule 137 (expression -> expression POWER expression .)
    POWER           reduce using rule 137 (expression -> expression POWER expression .)
    TIMES           reduce using rule 137 (expression -> expression POWER expression .)
    DIVIDE          reduce using rule 137 (expression -> expression POWER expression .)
    MOD             reduce using rule 137 (expression -> expression POWER expression .)
    PLUS            reduce using rule 137 (expression -> expression POWER expression .)
    MINUS           reduce using rule 137 (expression -> expression POWER expression .)
    LSHIFT          reduce using rule 137 (expression -> expression POWER expression .)
    RSHIFT          reduce using rule 137 (expression -> expression POWER expression .)
    LSHIFTA         reduce using rule 137 (expression -> expression POWER expression .)
    RSHIFTA         reduce using rule 137 (expression -> expression POWER expression .)
    LT              reduce using rule 137 (expression -> expression POWER expression .)
    GT              reduce using rule 137 (expression -> expression POWER expression .)
    LE              reduce using rule 137 (expression -> expression POWER expression .)
    GE              reduce using rule 137 (expression -> expression POWER expression .)
    EQ              reduce using rule 137 (expression -> expression POWER expression .)
    NE              reduce using rule 137 (expression -> expression POWER expression .)
    EQL             reduce using rule 137 (expression -> expression POWER expression .)
    NEL             reduce using rule 137 (expression -> expression POWER expression .)
    AND             reduce using rule 137 (expression -> expression POWER expression .)
    XOR             reduce using rule 137 (expression -> expression POWER expression .)
    XNOR            reduce using rule 137 (expression -> expression POWER expression .)
    OR              reduce using rule 137 (expression -> expression POWER expression .)
    LAND            reduce using rule 137 (expression -> expression POWER expression .)
    LOR             reduce using rule 137 (expression -> expression POWER expression .)
    COND            reduce using rule 137 (expression -> expression POWER expression .)
    RPAREN          reduce using rule 137 (expression -> expression POWER expression .)
    COLON           reduce using rule 137 (expression -> expression POWER expression .)
    PLUSCOLON       reduce using rule 137 (expression -> expression POWER expression .)
    MINUSCOLON      reduce using rule 137 (expression -> expression POWER expression .)
    SEMICOLON       reduce using rule 137 (expression -> expression POWER expression .)
    LBRACE          reduce using rule 137 (expression -> expression POWER expression .)
    RBRACE          reduce using rule 137 (expression -> expression POWER expression .)
    COMMA           reduce using rule 137 (expression -> expression POWER expression .)

  ! POWER           [ shift and go to state 143 ]
  ! TIMES           [ shift and go to state 271 ]
  ! DIVIDE          [ shift and go to state 151 ]
  ! MOD             [ shift and go to state 160 ]
  ! PLUS            [ shift and go to state 146 ]
  ! MINUS           [ shift and go to state 141 ]
  ! LSHIFT          [ shift and go to state 140 ]
  ! RSHIFT          [ shift and go to state 137 ]
  ! LSHIFTA         [ shift and go to state 158 ]
  ! RSHIFTA         [ shift and go to state 147 ]
  ! LT              [ shift and go to state 145 ]
  ! GT              [ shift and go to state 149 ]
  ! LE              [ shift and go to state 142 ]
  ! GE              [ shift and go to state 153 ]
  ! EQ              [ shift and go to state 156 ]
  ! NE              [ shift and go to state 144 ]
  ! EQL             [ shift and go to state 155 ]
  ! NEL             [ shift and go to state 136 ]
  ! AND             [ shift and go to state 157 ]
  ! XOR             [ shift and go to state 150 ]
  ! XNOR            [ shift and go to state 148 ]
  ! OR              [ shift and go to state 159 ]
  ! LAND            [ shift and go to state 154 ]
  ! LOR             [ shift and go to state 138 ]
  ! COND            [ shift and go to state 139 ]


state 292

    (152) expression -> expression NE expression .
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RBRACKET        reduce using rule 152 (expression -> expression NE expression .)
    EQ              reduce using rule 152 (expression -> expression NE expression .)
    NE              reduce using rule 152 (expression -> expression NE expression .)
    EQL             reduce using rule 152 (expression -> expression NE expression .)
    NEL             reduce using rule 152 (expression -> expression NE expression .)
    AND             reduce using rule 152 (expression -> expression NE expression .)
    XOR             reduce using rule 152 (expression -> expression NE expression .)
    XNOR            reduce using rule 152 (expression -> expression NE expression .)
    OR              reduce using rule 152 (expression -> expression NE expression .)
    LAND            reduce using rule 152 (expression -> expression NE expression .)
    LOR             reduce using rule 152 (expression -> expression NE expression .)
    COND            reduce using rule 152 (expression -> expression NE expression .)
    RPAREN          reduce using rule 152 (expression -> expression NE expression .)
    COLON           reduce using rule 152 (expression -> expression NE expression .)
    PLUSCOLON       reduce using rule 152 (expression -> expression NE expression .)
    MINUSCOLON      reduce using rule 152 (expression -> expression NE expression .)
    SEMICOLON       reduce using rule 152 (expression -> expression NE expression .)
    LBRACE          reduce using rule 152 (expression -> expression NE expression .)
    RBRACE          reduce using rule 152 (expression -> expression NE expression .)
    COMMA           reduce using rule 152 (expression -> expression NE expression .)
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147
    LT              shift and go to state 145
    GT              shift and go to state 149
    LE              shift and go to state 142
    GE              shift and go to state 153

  ! POWER           [ reduce using rule 152 (expression -> expression NE expression .) ]
  ! TIMES           [ reduce using rule 152 (expression -> expression NE expression .) ]
  ! DIVIDE          [ reduce using rule 152 (expression -> expression NE expression .) ]
  ! MOD             [ reduce using rule 152 (expression -> expression NE expression .) ]
  ! PLUS            [ reduce using rule 152 (expression -> expression NE expression .) ]
  ! MINUS           [ reduce using rule 152 (expression -> expression NE expression .) ]
  ! LSHIFT          [ reduce using rule 152 (expression -> expression NE expression .) ]
  ! RSHIFT          [ reduce using rule 152 (expression -> expression NE expression .) ]
  ! LSHIFTA         [ reduce using rule 152 (expression -> expression NE expression .) ]
  ! RSHIFTA         [ reduce using rule 152 (expression -> expression NE expression .) ]
  ! LT              [ reduce using rule 152 (expression -> expression NE expression .) ]
  ! GT              [ reduce using rule 152 (expression -> expression NE expression .) ]
  ! LE              [ reduce using rule 152 (expression -> expression NE expression .) ]
  ! GE              [ reduce using rule 152 (expression -> expression NE expression .) ]
  ! EQ              [ shift and go to state 156 ]
  ! NE              [ shift and go to state 144 ]
  ! EQL             [ shift and go to state 155 ]
  ! NEL             [ shift and go to state 136 ]
  ! AND             [ shift and go to state 157 ]
  ! XOR             [ shift and go to state 150 ]
  ! XNOR            [ shift and go to state 148 ]
  ! OR              [ shift and go to state 159 ]
  ! LAND            [ shift and go to state 154 ]
  ! LOR             [ shift and go to state 138 ]
  ! COND            [ shift and go to state 139 ]


state 293

    (147) expression -> expression LT expression .
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RBRACKET        reduce using rule 147 (expression -> expression LT expression .)
    LT              reduce using rule 147 (expression -> expression LT expression .)
    GT              reduce using rule 147 (expression -> expression LT expression .)
    LE              reduce using rule 147 (expression -> expression LT expression .)
    GE              reduce using rule 147 (expression -> expression LT expression .)
    EQ              reduce using rule 147 (expression -> expression LT expression .)
    NE              reduce using rule 147 (expression -> expression LT expression .)
    EQL             reduce using rule 147 (expression -> expression LT expression .)
    NEL             reduce using rule 147 (expression -> expression LT expression .)
    AND             reduce using rule 147 (expression -> expression LT expression .)
    XOR             reduce using rule 147 (expression -> expression LT expression .)
    XNOR            reduce using rule 147 (expression -> expression LT expression .)
    OR              reduce using rule 147 (expression -> expression LT expression .)
    LAND            reduce using rule 147 (expression -> expression LT expression .)
    LOR             reduce using rule 147 (expression -> expression LT expression .)
    COND            reduce using rule 147 (expression -> expression LT expression .)
    RPAREN          reduce using rule 147 (expression -> expression LT expression .)
    COLON           reduce using rule 147 (expression -> expression LT expression .)
    PLUSCOLON       reduce using rule 147 (expression -> expression LT expression .)
    MINUSCOLON      reduce using rule 147 (expression -> expression LT expression .)
    SEMICOLON       reduce using rule 147 (expression -> expression LT expression .)
    LBRACE          reduce using rule 147 (expression -> expression LT expression .)
    RBRACE          reduce using rule 147 (expression -> expression LT expression .)
    COMMA           reduce using rule 147 (expression -> expression LT expression .)
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147

  ! POWER           [ reduce using rule 147 (expression -> expression LT expression .) ]
  ! TIMES           [ reduce using rule 147 (expression -> expression LT expression .) ]
  ! DIVIDE          [ reduce using rule 147 (expression -> expression LT expression .) ]
  ! MOD             [ reduce using rule 147 (expression -> expression LT expression .) ]
  ! PLUS            [ reduce using rule 147 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 147 (expression -> expression LT expression .) ]
  ! LSHIFT          [ reduce using rule 147 (expression -> expression LT expression .) ]
  ! RSHIFT          [ reduce using rule 147 (expression -> expression LT expression .) ]
  ! LSHIFTA         [ reduce using rule 147 (expression -> expression LT expression .) ]
  ! RSHIFTA         [ reduce using rule 147 (expression -> expression LT expression .) ]
  ! LT              [ shift and go to state 145 ]
  ! GT              [ shift and go to state 149 ]
  ! LE              [ shift and go to state 142 ]
  ! GE              [ shift and go to state 153 ]
  ! EQ              [ shift and go to state 156 ]
  ! NE              [ shift and go to state 144 ]
  ! EQL             [ shift and go to state 155 ]
  ! NEL             [ shift and go to state 136 ]
  ! AND             [ shift and go to state 157 ]
  ! XOR             [ shift and go to state 150 ]
  ! XNOR            [ shift and go to state 148 ]
  ! OR              [ shift and go to state 159 ]
  ! LAND            [ shift and go to state 154 ]
  ! LOR             [ shift and go to state 138 ]
  ! COND            [ shift and go to state 139 ]


state 294

    (141) expression -> expression PLUS expression .
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RBRACKET        reduce using rule 141 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 141 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 141 (expression -> expression PLUS expression .)
    LSHIFT          reduce using rule 141 (expression -> expression PLUS expression .)
    RSHIFT          reduce using rule 141 (expression -> expression PLUS expression .)
    LSHIFTA         reduce using rule 141 (expression -> expression PLUS expression .)
    RSHIFTA         reduce using rule 141 (expression -> expression PLUS expression .)
    LT              reduce using rule 141 (expression -> expression PLUS expression .)
    GT              reduce using rule 141 (expression -> expression PLUS expression .)
    LE              reduce using rule 141 (expression -> expression PLUS expression .)
    GE              reduce using rule 141 (expression -> expression PLUS expression .)
    EQ              reduce using rule 141 (expression -> expression PLUS expression .)
    NE              reduce using rule 141 (expression -> expression PLUS expression .)
    EQL             reduce using rule 141 (expression -> expression PLUS expression .)
    NEL             reduce using rule 141 (expression -> expression PLUS expression .)
    AND             reduce using rule 141 (expression -> expression PLUS expression .)
    XOR             reduce using rule 141 (expression -> expression PLUS expression .)
    XNOR            reduce using rule 141 (expression -> expression PLUS expression .)
    OR              reduce using rule 141 (expression -> expression PLUS expression .)
    LAND            reduce using rule 141 (expression -> expression PLUS expression .)
    LOR             reduce using rule 141 (expression -> expression PLUS expression .)
    COND            reduce using rule 141 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 141 (expression -> expression PLUS expression .)
    COLON           reduce using rule 141 (expression -> expression PLUS expression .)
    PLUSCOLON       reduce using rule 141 (expression -> expression PLUS expression .)
    MINUSCOLON      reduce using rule 141 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 141 (expression -> expression PLUS expression .)
    LBRACE          reduce using rule 141 (expression -> expression PLUS expression .)
    RBRACE          reduce using rule 141 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 141 (expression -> expression PLUS expression .)
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160

  ! POWER           [ reduce using rule 141 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 141 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 141 (expression -> expression PLUS expression .) ]
  ! MOD             [ reduce using rule 141 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 146 ]
  ! MINUS           [ shift and go to state 141 ]
  ! LSHIFT          [ shift and go to state 140 ]
  ! RSHIFT          [ shift and go to state 137 ]
  ! LSHIFTA         [ shift and go to state 158 ]
  ! RSHIFTA         [ shift and go to state 147 ]
  ! LT              [ shift and go to state 145 ]
  ! GT              [ shift and go to state 149 ]
  ! LE              [ shift and go to state 142 ]
  ! GE              [ shift and go to state 153 ]
  ! EQ              [ shift and go to state 156 ]
  ! NE              [ shift and go to state 144 ]
  ! EQL             [ shift and go to state 155 ]
  ! NEL             [ shift and go to state 136 ]
  ! AND             [ shift and go to state 157 ]
  ! XOR             [ shift and go to state 150 ]
  ! XNOR            [ shift and go to state 148 ]
  ! OR              [ shift and go to state 159 ]
  ! LAND            [ shift and go to state 154 ]
  ! LOR             [ shift and go to state 138 ]
  ! COND            [ shift and go to state 139 ]


state 295

    (146) expression -> expression RSHIFTA expression .
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RBRACKET        reduce using rule 146 (expression -> expression RSHIFTA expression .)
    LSHIFT          reduce using rule 146 (expression -> expression RSHIFTA expression .)
    RSHIFT          reduce using rule 146 (expression -> expression RSHIFTA expression .)
    LSHIFTA         reduce using rule 146 (expression -> expression RSHIFTA expression .)
    RSHIFTA         reduce using rule 146 (expression -> expression RSHIFTA expression .)
    LT              reduce using rule 146 (expression -> expression RSHIFTA expression .)
    GT              reduce using rule 146 (expression -> expression RSHIFTA expression .)
    LE              reduce using rule 146 (expression -> expression RSHIFTA expression .)
    GE              reduce using rule 146 (expression -> expression RSHIFTA expression .)
    EQ              reduce using rule 146 (expression -> expression RSHIFTA expression .)
    NE              reduce using rule 146 (expression -> expression RSHIFTA expression .)
    EQL             reduce using rule 146 (expression -> expression RSHIFTA expression .)
    NEL             reduce using rule 146 (expression -> expression RSHIFTA expression .)
    AND             reduce using rule 146 (expression -> expression RSHIFTA expression .)
    XOR             reduce using rule 146 (expression -> expression RSHIFTA expression .)
    XNOR            reduce using rule 146 (expression -> expression RSHIFTA expression .)
    OR              reduce using rule 146 (expression -> expression RSHIFTA expression .)
    LAND            reduce using rule 146 (expression -> expression RSHIFTA expression .)
    LOR             reduce using rule 146 (expression -> expression RSHIFTA expression .)
    COND            reduce using rule 146 (expression -> expression RSHIFTA expression .)
    RPAREN          reduce using rule 146 (expression -> expression RSHIFTA expression .)
    COLON           reduce using rule 146 (expression -> expression RSHIFTA expression .)
    PLUSCOLON       reduce using rule 146 (expression -> expression RSHIFTA expression .)
    MINUSCOLON      reduce using rule 146 (expression -> expression RSHIFTA expression .)
    SEMICOLON       reduce using rule 146 (expression -> expression RSHIFTA expression .)
    LBRACE          reduce using rule 146 (expression -> expression RSHIFTA expression .)
    RBRACE          reduce using rule 146 (expression -> expression RSHIFTA expression .)
    COMMA           reduce using rule 146 (expression -> expression RSHIFTA expression .)
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141

  ! POWER           [ reduce using rule 146 (expression -> expression RSHIFTA expression .) ]
  ! TIMES           [ reduce using rule 146 (expression -> expression RSHIFTA expression .) ]
  ! DIVIDE          [ reduce using rule 146 (expression -> expression RSHIFTA expression .) ]
  ! MOD             [ reduce using rule 146 (expression -> expression RSHIFTA expression .) ]
  ! PLUS            [ reduce using rule 146 (expression -> expression RSHIFTA expression .) ]
  ! MINUS           [ reduce using rule 146 (expression -> expression RSHIFTA expression .) ]
  ! LSHIFT          [ shift and go to state 140 ]
  ! RSHIFT          [ shift and go to state 137 ]
  ! LSHIFTA         [ shift and go to state 158 ]
  ! RSHIFTA         [ shift and go to state 147 ]
  ! LT              [ shift and go to state 145 ]
  ! GT              [ shift and go to state 149 ]
  ! LE              [ shift and go to state 142 ]
  ! GE              [ shift and go to state 153 ]
  ! EQ              [ shift and go to state 156 ]
  ! NE              [ shift and go to state 144 ]
  ! EQL             [ shift and go to state 155 ]
  ! NEL             [ shift and go to state 136 ]
  ! AND             [ shift and go to state 157 ]
  ! XOR             [ shift and go to state 150 ]
  ! XNOR            [ shift and go to state 148 ]
  ! OR              [ shift and go to state 159 ]
  ! LAND            [ shift and go to state 154 ]
  ! LOR             [ shift and go to state 138 ]
  ! COND            [ shift and go to state 139 ]


state 296

    (157) expression -> expression XNOR expression .
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RBRACKET        reduce using rule 157 (expression -> expression XNOR expression .)
    AND             reduce using rule 157 (expression -> expression XNOR expression .)
    XOR             reduce using rule 157 (expression -> expression XNOR expression .)
    XNOR            reduce using rule 157 (expression -> expression XNOR expression .)
    OR              reduce using rule 157 (expression -> expression XNOR expression .)
    LAND            reduce using rule 157 (expression -> expression XNOR expression .)
    LOR             reduce using rule 157 (expression -> expression XNOR expression .)
    COND            reduce using rule 157 (expression -> expression XNOR expression .)
    RPAREN          reduce using rule 157 (expression -> expression XNOR expression .)
    COLON           reduce using rule 157 (expression -> expression XNOR expression .)
    PLUSCOLON       reduce using rule 157 (expression -> expression XNOR expression .)
    MINUSCOLON      reduce using rule 157 (expression -> expression XNOR expression .)
    SEMICOLON       reduce using rule 157 (expression -> expression XNOR expression .)
    LBRACE          reduce using rule 157 (expression -> expression XNOR expression .)
    RBRACE          reduce using rule 157 (expression -> expression XNOR expression .)
    COMMA           reduce using rule 157 (expression -> expression XNOR expression .)
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147
    LT              shift and go to state 145
    GT              shift and go to state 149
    LE              shift and go to state 142
    GE              shift and go to state 153
    EQ              shift and go to state 156
    NE              shift and go to state 144
    EQL             shift and go to state 155
    NEL             shift and go to state 136

  ! POWER           [ reduce using rule 157 (expression -> expression XNOR expression .) ]
  ! TIMES           [ reduce using rule 157 (expression -> expression XNOR expression .) ]
  ! DIVIDE          [ reduce using rule 157 (expression -> expression XNOR expression .) ]
  ! MOD             [ reduce using rule 157 (expression -> expression XNOR expression .) ]
  ! PLUS            [ reduce using rule 157 (expression -> expression XNOR expression .) ]
  ! MINUS           [ reduce using rule 157 (expression -> expression XNOR expression .) ]
  ! LSHIFT          [ reduce using rule 157 (expression -> expression XNOR expression .) ]
  ! RSHIFT          [ reduce using rule 157 (expression -> expression XNOR expression .) ]
  ! LSHIFTA         [ reduce using rule 157 (expression -> expression XNOR expression .) ]
  ! RSHIFTA         [ reduce using rule 157 (expression -> expression XNOR expression .) ]
  ! LT              [ reduce using rule 157 (expression -> expression XNOR expression .) ]
  ! GT              [ reduce using rule 157 (expression -> expression XNOR expression .) ]
  ! LE              [ reduce using rule 157 (expression -> expression XNOR expression .) ]
  ! GE              [ reduce using rule 157 (expression -> expression XNOR expression .) ]
  ! EQ              [ reduce using rule 157 (expression -> expression XNOR expression .) ]
  ! NE              [ reduce using rule 157 (expression -> expression XNOR expression .) ]
  ! EQL             [ reduce using rule 157 (expression -> expression XNOR expression .) ]
  ! NEL             [ reduce using rule 157 (expression -> expression XNOR expression .) ]
  ! AND             [ shift and go to state 157 ]
  ! XOR             [ shift and go to state 150 ]
  ! XNOR            [ shift and go to state 148 ]
  ! OR              [ shift and go to state 159 ]
  ! LAND            [ shift and go to state 154 ]
  ! LOR             [ shift and go to state 138 ]
  ! COND            [ shift and go to state 139 ]


state 297

    (148) expression -> expression GT expression .
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RBRACKET        reduce using rule 148 (expression -> expression GT expression .)
    LT              reduce using rule 148 (expression -> expression GT expression .)
    GT              reduce using rule 148 (expression -> expression GT expression .)
    LE              reduce using rule 148 (expression -> expression GT expression .)
    GE              reduce using rule 148 (expression -> expression GT expression .)
    EQ              reduce using rule 148 (expression -> expression GT expression .)
    NE              reduce using rule 148 (expression -> expression GT expression .)
    EQL             reduce using rule 148 (expression -> expression GT expression .)
    NEL             reduce using rule 148 (expression -> expression GT expression .)
    AND             reduce using rule 148 (expression -> expression GT expression .)
    XOR             reduce using rule 148 (expression -> expression GT expression .)
    XNOR            reduce using rule 148 (expression -> expression GT expression .)
    OR              reduce using rule 148 (expression -> expression GT expression .)
    LAND            reduce using rule 148 (expression -> expression GT expression .)
    LOR             reduce using rule 148 (expression -> expression GT expression .)
    COND            reduce using rule 148 (expression -> expression GT expression .)
    RPAREN          reduce using rule 148 (expression -> expression GT expression .)
    COLON           reduce using rule 148 (expression -> expression GT expression .)
    PLUSCOLON       reduce using rule 148 (expression -> expression GT expression .)
    MINUSCOLON      reduce using rule 148 (expression -> expression GT expression .)
    SEMICOLON       reduce using rule 148 (expression -> expression GT expression .)
    LBRACE          reduce using rule 148 (expression -> expression GT expression .)
    RBRACE          reduce using rule 148 (expression -> expression GT expression .)
    COMMA           reduce using rule 148 (expression -> expression GT expression .)
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147

  ! POWER           [ reduce using rule 148 (expression -> expression GT expression .) ]
  ! TIMES           [ reduce using rule 148 (expression -> expression GT expression .) ]
  ! DIVIDE          [ reduce using rule 148 (expression -> expression GT expression .) ]
  ! MOD             [ reduce using rule 148 (expression -> expression GT expression .) ]
  ! PLUS            [ reduce using rule 148 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 148 (expression -> expression GT expression .) ]
  ! LSHIFT          [ reduce using rule 148 (expression -> expression GT expression .) ]
  ! RSHIFT          [ reduce using rule 148 (expression -> expression GT expression .) ]
  ! LSHIFTA         [ reduce using rule 148 (expression -> expression GT expression .) ]
  ! RSHIFTA         [ reduce using rule 148 (expression -> expression GT expression .) ]
  ! LT              [ shift and go to state 145 ]
  ! GT              [ shift and go to state 149 ]
  ! LE              [ shift and go to state 142 ]
  ! GE              [ shift and go to state 153 ]
  ! EQ              [ shift and go to state 156 ]
  ! NE              [ shift and go to state 144 ]
  ! EQL             [ shift and go to state 155 ]
  ! NEL             [ shift and go to state 136 ]
  ! AND             [ shift and go to state 157 ]
  ! XOR             [ shift and go to state 150 ]
  ! XNOR            [ shift and go to state 148 ]
  ! OR              [ shift and go to state 159 ]
  ! LAND            [ shift and go to state 154 ]
  ! LOR             [ shift and go to state 138 ]
  ! COND            [ shift and go to state 139 ]


state 298

    (156) expression -> expression XOR expression .
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RBRACKET        reduce using rule 156 (expression -> expression XOR expression .)
    AND             reduce using rule 156 (expression -> expression XOR expression .)
    XOR             reduce using rule 156 (expression -> expression XOR expression .)
    XNOR            reduce using rule 156 (expression -> expression XOR expression .)
    OR              reduce using rule 156 (expression -> expression XOR expression .)
    LAND            reduce using rule 156 (expression -> expression XOR expression .)
    LOR             reduce using rule 156 (expression -> expression XOR expression .)
    COND            reduce using rule 156 (expression -> expression XOR expression .)
    RPAREN          reduce using rule 156 (expression -> expression XOR expression .)
    COLON           reduce using rule 156 (expression -> expression XOR expression .)
    PLUSCOLON       reduce using rule 156 (expression -> expression XOR expression .)
    MINUSCOLON      reduce using rule 156 (expression -> expression XOR expression .)
    SEMICOLON       reduce using rule 156 (expression -> expression XOR expression .)
    LBRACE          reduce using rule 156 (expression -> expression XOR expression .)
    RBRACE          reduce using rule 156 (expression -> expression XOR expression .)
    COMMA           reduce using rule 156 (expression -> expression XOR expression .)
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147
    LT              shift and go to state 145
    GT              shift and go to state 149
    LE              shift and go to state 142
    GE              shift and go to state 153
    EQ              shift and go to state 156
    NE              shift and go to state 144
    EQL             shift and go to state 155
    NEL             shift and go to state 136

  ! POWER           [ reduce using rule 156 (expression -> expression XOR expression .) ]
  ! TIMES           [ reduce using rule 156 (expression -> expression XOR expression .) ]
  ! DIVIDE          [ reduce using rule 156 (expression -> expression XOR expression .) ]
  ! MOD             [ reduce using rule 156 (expression -> expression XOR expression .) ]
  ! PLUS            [ reduce using rule 156 (expression -> expression XOR expression .) ]
  ! MINUS           [ reduce using rule 156 (expression -> expression XOR expression .) ]
  ! LSHIFT          [ reduce using rule 156 (expression -> expression XOR expression .) ]
  ! RSHIFT          [ reduce using rule 156 (expression -> expression XOR expression .) ]
  ! LSHIFTA         [ reduce using rule 156 (expression -> expression XOR expression .) ]
  ! RSHIFTA         [ reduce using rule 156 (expression -> expression XOR expression .) ]
  ! LT              [ reduce using rule 156 (expression -> expression XOR expression .) ]
  ! GT              [ reduce using rule 156 (expression -> expression XOR expression .) ]
  ! LE              [ reduce using rule 156 (expression -> expression XOR expression .) ]
  ! GE              [ reduce using rule 156 (expression -> expression XOR expression .) ]
  ! EQ              [ reduce using rule 156 (expression -> expression XOR expression .) ]
  ! NE              [ reduce using rule 156 (expression -> expression XOR expression .) ]
  ! EQL             [ reduce using rule 156 (expression -> expression XOR expression .) ]
  ! NEL             [ reduce using rule 156 (expression -> expression XOR expression .) ]
  ! AND             [ shift and go to state 157 ]
  ! XOR             [ shift and go to state 150 ]
  ! XNOR            [ shift and go to state 148 ]
  ! OR              [ shift and go to state 159 ]
  ! LAND            [ shift and go to state 154 ]
  ! LOR             [ shift and go to state 138 ]
  ! COND            [ shift and go to state 139 ]


state 299

    (139) expression -> expression DIVIDE expression .
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RBRACKET        reduce using rule 139 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 139 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 139 (expression -> expression DIVIDE expression .)
    MOD             reduce using rule 139 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 139 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 139 (expression -> expression DIVIDE expression .)
    LSHIFT          reduce using rule 139 (expression -> expression DIVIDE expression .)
    RSHIFT          reduce using rule 139 (expression -> expression DIVIDE expression .)
    LSHIFTA         reduce using rule 139 (expression -> expression DIVIDE expression .)
    RSHIFTA         reduce using rule 139 (expression -> expression DIVIDE expression .)
    LT              reduce using rule 139 (expression -> expression DIVIDE expression .)
    GT              reduce using rule 139 (expression -> expression DIVIDE expression .)
    LE              reduce using rule 139 (expression -> expression DIVIDE expression .)
    GE              reduce using rule 139 (expression -> expression DIVIDE expression .)
    EQ              reduce using rule 139 (expression -> expression DIVIDE expression .)
    NE              reduce using rule 139 (expression -> expression DIVIDE expression .)
    EQL             reduce using rule 139 (expression -> expression DIVIDE expression .)
    NEL             reduce using rule 139 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 139 (expression -> expression DIVIDE expression .)
    XOR             reduce using rule 139 (expression -> expression DIVIDE expression .)
    XNOR            reduce using rule 139 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 139 (expression -> expression DIVIDE expression .)
    LAND            reduce using rule 139 (expression -> expression DIVIDE expression .)
    LOR             reduce using rule 139 (expression -> expression DIVIDE expression .)
    COND            reduce using rule 139 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 139 (expression -> expression DIVIDE expression .)
    COLON           reduce using rule 139 (expression -> expression DIVIDE expression .)
    PLUSCOLON       reduce using rule 139 (expression -> expression DIVIDE expression .)
    MINUSCOLON      reduce using rule 139 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 139 (expression -> expression DIVIDE expression .)
    LBRACE          reduce using rule 139 (expression -> expression DIVIDE expression .)
    RBRACE          reduce using rule 139 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 139 (expression -> expression DIVIDE expression .)
    POWER           shift and go to state 143

  ! POWER           [ reduce using rule 139 (expression -> expression DIVIDE expression .) ]
  ! TIMES           [ shift and go to state 271 ]
  ! DIVIDE          [ shift and go to state 151 ]
  ! MOD             [ shift and go to state 160 ]
  ! PLUS            [ shift and go to state 146 ]
  ! MINUS           [ shift and go to state 141 ]
  ! LSHIFT          [ shift and go to state 140 ]
  ! RSHIFT          [ shift and go to state 137 ]
  ! LSHIFTA         [ shift and go to state 158 ]
  ! RSHIFTA         [ shift and go to state 147 ]
  ! LT              [ shift and go to state 145 ]
  ! GT              [ shift and go to state 149 ]
  ! LE              [ shift and go to state 142 ]
  ! GE              [ shift and go to state 153 ]
  ! EQ              [ shift and go to state 156 ]
  ! NE              [ shift and go to state 144 ]
  ! EQL             [ shift and go to state 155 ]
  ! NEL             [ shift and go to state 136 ]
  ! AND             [ shift and go to state 157 ]
  ! XOR             [ shift and go to state 150 ]
  ! XNOR            [ shift and go to state 148 ]
  ! OR              [ shift and go to state 159 ]
  ! LAND            [ shift and go to state 154 ]
  ! LOR             [ shift and go to state 138 ]
  ! COND            [ shift and go to state 139 ]


state 300

    (7) pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .

    END             reduce using rule 7 (pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .)
    IF              reduce using rule 7 (pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .)
    FOR             reduce using rule 7 (pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .)
    INTEGER         reduce using rule 7 (pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .)
    REAL            reduce using rule 7 (pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .)
    PARAMETER       reduce using rule 7 (pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .)
    LOCALPARAM      reduce using rule 7 (pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .)
    GENVAR          reduce using rule 7 (pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .)
    ASSIGN          reduce using rule 7 (pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .)
    ALWAYS          reduce using rule 7 (pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .)
    INITIAL         reduce using rule 7 (pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .)
    ID              reduce using rule 7 (pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .)
    SENS_OR         reduce using rule 7 (pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .)
    FUNCTION        reduce using rule 7 (pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .)
    TASK            reduce using rule 7 (pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .)
    LPAREN          reduce using rule 7 (pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .)
    INPUT           reduce using rule 7 (pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .)
    OUTPUT          reduce using rule 7 (pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .)
    INOUT           reduce using rule 7 (pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .)
    TRI             reduce using rule 7 (pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .)
    REG             reduce using rule 7 (pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .)
    WIRE            reduce using rule 7 (pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .)
    SIGNED          reduce using rule 7 (pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .)
    SUPPLY0         reduce using rule 7 (pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .)
    SUPPLY1         reduce using rule 7 (pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .)
    ENDMODULE       reduce using rule 7 (pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .)
    GENERATE        reduce using rule 7 (pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .)
    MODULE          reduce using rule 7 (pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .)
    $end            reduce using rule 7 (pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .)
    ELSE            reduce using rule 7 (pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .)
    ENDGENERATE     reduce using rule 7 (pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .)


state 301

    (138) expression -> expression TIMES expression .
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RBRACKET        reduce using rule 138 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 138 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 138 (expression -> expression TIMES expression .)
    MOD             reduce using rule 138 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 138 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 138 (expression -> expression TIMES expression .)
    LSHIFT          reduce using rule 138 (expression -> expression TIMES expression .)
    RSHIFT          reduce using rule 138 (expression -> expression TIMES expression .)
    LSHIFTA         reduce using rule 138 (expression -> expression TIMES expression .)
    RSHIFTA         reduce using rule 138 (expression -> expression TIMES expression .)
    LT              reduce using rule 138 (expression -> expression TIMES expression .)
    GT              reduce using rule 138 (expression -> expression TIMES expression .)
    LE              reduce using rule 138 (expression -> expression TIMES expression .)
    GE              reduce using rule 138 (expression -> expression TIMES expression .)
    EQ              reduce using rule 138 (expression -> expression TIMES expression .)
    NE              reduce using rule 138 (expression -> expression TIMES expression .)
    EQL             reduce using rule 138 (expression -> expression TIMES expression .)
    NEL             reduce using rule 138 (expression -> expression TIMES expression .)
    AND             reduce using rule 138 (expression -> expression TIMES expression .)
    XOR             reduce using rule 138 (expression -> expression TIMES expression .)
    XNOR            reduce using rule 138 (expression -> expression TIMES expression .)
    OR              reduce using rule 138 (expression -> expression TIMES expression .)
    LAND            reduce using rule 138 (expression -> expression TIMES expression .)
    LOR             reduce using rule 138 (expression -> expression TIMES expression .)
    COND            reduce using rule 138 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 138 (expression -> expression TIMES expression .)
    COLON           reduce using rule 138 (expression -> expression TIMES expression .)
    PLUSCOLON       reduce using rule 138 (expression -> expression TIMES expression .)
    MINUSCOLON      reduce using rule 138 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 138 (expression -> expression TIMES expression .)
    LBRACE          reduce using rule 138 (expression -> expression TIMES expression .)
    RBRACE          reduce using rule 138 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 138 (expression -> expression TIMES expression .)
    POWER           shift and go to state 143

  ! POWER           [ reduce using rule 138 (expression -> expression TIMES expression .) ]
  ! TIMES           [ shift and go to state 271 ]
  ! DIVIDE          [ shift and go to state 151 ]
  ! MOD             [ shift and go to state 160 ]
  ! PLUS            [ shift and go to state 146 ]
  ! MINUS           [ shift and go to state 141 ]
  ! LSHIFT          [ shift and go to state 140 ]
  ! RSHIFT          [ shift and go to state 137 ]
  ! LSHIFTA         [ shift and go to state 158 ]
  ! RSHIFTA         [ shift and go to state 147 ]
  ! LT              [ shift and go to state 145 ]
  ! GT              [ shift and go to state 149 ]
  ! LE              [ shift and go to state 142 ]
  ! GE              [ shift and go to state 153 ]
  ! EQ              [ shift and go to state 156 ]
  ! NE              [ shift and go to state 144 ]
  ! EQL             [ shift and go to state 155 ]
  ! NEL             [ shift and go to state 136 ]
  ! AND             [ shift and go to state 157 ]
  ! XOR             [ shift and go to state 150 ]
  ! XNOR            [ shift and go to state 148 ]
  ! OR              [ shift and go to state 159 ]
  ! LAND            [ shift and go to state 154 ]
  ! LOR             [ shift and go to state 138 ]
  ! COND            [ shift and go to state 139 ]


state 302

    (150) expression -> expression GE expression .
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RBRACKET        reduce using rule 150 (expression -> expression GE expression .)
    LT              reduce using rule 150 (expression -> expression GE expression .)
    GT              reduce using rule 150 (expression -> expression GE expression .)
    LE              reduce using rule 150 (expression -> expression GE expression .)
    GE              reduce using rule 150 (expression -> expression GE expression .)
    EQ              reduce using rule 150 (expression -> expression GE expression .)
    NE              reduce using rule 150 (expression -> expression GE expression .)
    EQL             reduce using rule 150 (expression -> expression GE expression .)
    NEL             reduce using rule 150 (expression -> expression GE expression .)
    AND             reduce using rule 150 (expression -> expression GE expression .)
    XOR             reduce using rule 150 (expression -> expression GE expression .)
    XNOR            reduce using rule 150 (expression -> expression GE expression .)
    OR              reduce using rule 150 (expression -> expression GE expression .)
    LAND            reduce using rule 150 (expression -> expression GE expression .)
    LOR             reduce using rule 150 (expression -> expression GE expression .)
    COND            reduce using rule 150 (expression -> expression GE expression .)
    RPAREN          reduce using rule 150 (expression -> expression GE expression .)
    COLON           reduce using rule 150 (expression -> expression GE expression .)
    PLUSCOLON       reduce using rule 150 (expression -> expression GE expression .)
    MINUSCOLON      reduce using rule 150 (expression -> expression GE expression .)
    SEMICOLON       reduce using rule 150 (expression -> expression GE expression .)
    LBRACE          reduce using rule 150 (expression -> expression GE expression .)
    RBRACE          reduce using rule 150 (expression -> expression GE expression .)
    COMMA           reduce using rule 150 (expression -> expression GE expression .)
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147

  ! POWER           [ reduce using rule 150 (expression -> expression GE expression .) ]
  ! TIMES           [ reduce using rule 150 (expression -> expression GE expression .) ]
  ! DIVIDE          [ reduce using rule 150 (expression -> expression GE expression .) ]
  ! MOD             [ reduce using rule 150 (expression -> expression GE expression .) ]
  ! PLUS            [ reduce using rule 150 (expression -> expression GE expression .) ]
  ! MINUS           [ reduce using rule 150 (expression -> expression GE expression .) ]
  ! LSHIFT          [ reduce using rule 150 (expression -> expression GE expression .) ]
  ! RSHIFT          [ reduce using rule 150 (expression -> expression GE expression .) ]
  ! LSHIFTA         [ reduce using rule 150 (expression -> expression GE expression .) ]
  ! RSHIFTA         [ reduce using rule 150 (expression -> expression GE expression .) ]
  ! LT              [ shift and go to state 145 ]
  ! GT              [ shift and go to state 149 ]
  ! LE              [ shift and go to state 142 ]
  ! GE              [ shift and go to state 153 ]
  ! EQ              [ shift and go to state 156 ]
  ! NE              [ shift and go to state 144 ]
  ! EQL             [ shift and go to state 155 ]
  ! NEL             [ shift and go to state 136 ]
  ! AND             [ shift and go to state 157 ]
  ! XOR             [ shift and go to state 150 ]
  ! XNOR            [ shift and go to state 148 ]
  ! OR              [ shift and go to state 159 ]
  ! LAND            [ shift and go to state 154 ]
  ! LOR             [ shift and go to state 138 ]
  ! COND            [ shift and go to state 139 ]


state 303

    (159) expression -> expression LAND expression .
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RBRACKET        reduce using rule 159 (expression -> expression LAND expression .)
    LAND            reduce using rule 159 (expression -> expression LAND expression .)
    LOR             reduce using rule 159 (expression -> expression LAND expression .)
    COND            reduce using rule 159 (expression -> expression LAND expression .)
    RPAREN          reduce using rule 159 (expression -> expression LAND expression .)
    COLON           reduce using rule 159 (expression -> expression LAND expression .)
    PLUSCOLON       reduce using rule 159 (expression -> expression LAND expression .)
    MINUSCOLON      reduce using rule 159 (expression -> expression LAND expression .)
    SEMICOLON       reduce using rule 159 (expression -> expression LAND expression .)
    LBRACE          reduce using rule 159 (expression -> expression LAND expression .)
    RBRACE          reduce using rule 159 (expression -> expression LAND expression .)
    COMMA           reduce using rule 159 (expression -> expression LAND expression .)
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147
    LT              shift and go to state 145
    GT              shift and go to state 149
    LE              shift and go to state 142
    GE              shift and go to state 153
    EQ              shift and go to state 156
    NE              shift and go to state 144
    EQL             shift and go to state 155
    NEL             shift and go to state 136
    AND             shift and go to state 157
    XOR             shift and go to state 150
    XNOR            shift and go to state 148
    OR              shift and go to state 159

  ! POWER           [ reduce using rule 159 (expression -> expression LAND expression .) ]
  ! TIMES           [ reduce using rule 159 (expression -> expression LAND expression .) ]
  ! DIVIDE          [ reduce using rule 159 (expression -> expression LAND expression .) ]
  ! MOD             [ reduce using rule 159 (expression -> expression LAND expression .) ]
  ! PLUS            [ reduce using rule 159 (expression -> expression LAND expression .) ]
  ! MINUS           [ reduce using rule 159 (expression -> expression LAND expression .) ]
  ! LSHIFT          [ reduce using rule 159 (expression -> expression LAND expression .) ]
  ! RSHIFT          [ reduce using rule 159 (expression -> expression LAND expression .) ]
  ! LSHIFTA         [ reduce using rule 159 (expression -> expression LAND expression .) ]
  ! RSHIFTA         [ reduce using rule 159 (expression -> expression LAND expression .) ]
  ! LT              [ reduce using rule 159 (expression -> expression LAND expression .) ]
  ! GT              [ reduce using rule 159 (expression -> expression LAND expression .) ]
  ! LE              [ reduce using rule 159 (expression -> expression LAND expression .) ]
  ! GE              [ reduce using rule 159 (expression -> expression LAND expression .) ]
  ! EQ              [ reduce using rule 159 (expression -> expression LAND expression .) ]
  ! NE              [ reduce using rule 159 (expression -> expression LAND expression .) ]
  ! EQL             [ reduce using rule 159 (expression -> expression LAND expression .) ]
  ! NEL             [ reduce using rule 159 (expression -> expression LAND expression .) ]
  ! AND             [ reduce using rule 159 (expression -> expression LAND expression .) ]
  ! XOR             [ reduce using rule 159 (expression -> expression LAND expression .) ]
  ! XNOR            [ reduce using rule 159 (expression -> expression LAND expression .) ]
  ! OR              [ reduce using rule 159 (expression -> expression LAND expression .) ]
  ! LAND            [ shift and go to state 154 ]
  ! LOR             [ shift and go to state 138 ]
  ! COND            [ shift and go to state 139 ]


state 304

    (153) expression -> expression EQL expression .
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RBRACKET        reduce using rule 153 (expression -> expression EQL expression .)
    EQ              reduce using rule 153 (expression -> expression EQL expression .)
    NE              reduce using rule 153 (expression -> expression EQL expression .)
    EQL             reduce using rule 153 (expression -> expression EQL expression .)
    NEL             reduce using rule 153 (expression -> expression EQL expression .)
    AND             reduce using rule 153 (expression -> expression EQL expression .)
    XOR             reduce using rule 153 (expression -> expression EQL expression .)
    XNOR            reduce using rule 153 (expression -> expression EQL expression .)
    OR              reduce using rule 153 (expression -> expression EQL expression .)
    LAND            reduce using rule 153 (expression -> expression EQL expression .)
    LOR             reduce using rule 153 (expression -> expression EQL expression .)
    COND            reduce using rule 153 (expression -> expression EQL expression .)
    RPAREN          reduce using rule 153 (expression -> expression EQL expression .)
    COLON           reduce using rule 153 (expression -> expression EQL expression .)
    PLUSCOLON       reduce using rule 153 (expression -> expression EQL expression .)
    MINUSCOLON      reduce using rule 153 (expression -> expression EQL expression .)
    SEMICOLON       reduce using rule 153 (expression -> expression EQL expression .)
    LBRACE          reduce using rule 153 (expression -> expression EQL expression .)
    RBRACE          reduce using rule 153 (expression -> expression EQL expression .)
    COMMA           reduce using rule 153 (expression -> expression EQL expression .)
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147
    LT              shift and go to state 145
    GT              shift and go to state 149
    LE              shift and go to state 142
    GE              shift and go to state 153

  ! POWER           [ reduce using rule 153 (expression -> expression EQL expression .) ]
  ! TIMES           [ reduce using rule 153 (expression -> expression EQL expression .) ]
  ! DIVIDE          [ reduce using rule 153 (expression -> expression EQL expression .) ]
  ! MOD             [ reduce using rule 153 (expression -> expression EQL expression .) ]
  ! PLUS            [ reduce using rule 153 (expression -> expression EQL expression .) ]
  ! MINUS           [ reduce using rule 153 (expression -> expression EQL expression .) ]
  ! LSHIFT          [ reduce using rule 153 (expression -> expression EQL expression .) ]
  ! RSHIFT          [ reduce using rule 153 (expression -> expression EQL expression .) ]
  ! LSHIFTA         [ reduce using rule 153 (expression -> expression EQL expression .) ]
  ! RSHIFTA         [ reduce using rule 153 (expression -> expression EQL expression .) ]
  ! LT              [ reduce using rule 153 (expression -> expression EQL expression .) ]
  ! GT              [ reduce using rule 153 (expression -> expression EQL expression .) ]
  ! LE              [ reduce using rule 153 (expression -> expression EQL expression .) ]
  ! GE              [ reduce using rule 153 (expression -> expression EQL expression .) ]
  ! EQ              [ shift and go to state 156 ]
  ! NE              [ shift and go to state 144 ]
  ! EQL             [ shift and go to state 155 ]
  ! NEL             [ shift and go to state 136 ]
  ! AND             [ shift and go to state 157 ]
  ! XOR             [ shift and go to state 150 ]
  ! XNOR            [ shift and go to state 148 ]
  ! OR              [ shift and go to state 159 ]
  ! LAND            [ shift and go to state 154 ]
  ! LOR             [ shift and go to state 138 ]
  ! COND            [ shift and go to state 139 ]


state 305

    (151) expression -> expression EQ expression .
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RBRACKET        reduce using rule 151 (expression -> expression EQ expression .)
    EQ              reduce using rule 151 (expression -> expression EQ expression .)
    NE              reduce using rule 151 (expression -> expression EQ expression .)
    EQL             reduce using rule 151 (expression -> expression EQ expression .)
    NEL             reduce using rule 151 (expression -> expression EQ expression .)
    AND             reduce using rule 151 (expression -> expression EQ expression .)
    XOR             reduce using rule 151 (expression -> expression EQ expression .)
    XNOR            reduce using rule 151 (expression -> expression EQ expression .)
    OR              reduce using rule 151 (expression -> expression EQ expression .)
    LAND            reduce using rule 151 (expression -> expression EQ expression .)
    LOR             reduce using rule 151 (expression -> expression EQ expression .)
    COND            reduce using rule 151 (expression -> expression EQ expression .)
    RPAREN          reduce using rule 151 (expression -> expression EQ expression .)
    COLON           reduce using rule 151 (expression -> expression EQ expression .)
    PLUSCOLON       reduce using rule 151 (expression -> expression EQ expression .)
    MINUSCOLON      reduce using rule 151 (expression -> expression EQ expression .)
    SEMICOLON       reduce using rule 151 (expression -> expression EQ expression .)
    LBRACE          reduce using rule 151 (expression -> expression EQ expression .)
    RBRACE          reduce using rule 151 (expression -> expression EQ expression .)
    COMMA           reduce using rule 151 (expression -> expression EQ expression .)
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147
    LT              shift and go to state 145
    GT              shift and go to state 149
    LE              shift and go to state 142
    GE              shift and go to state 153

  ! POWER           [ reduce using rule 151 (expression -> expression EQ expression .) ]
  ! TIMES           [ reduce using rule 151 (expression -> expression EQ expression .) ]
  ! DIVIDE          [ reduce using rule 151 (expression -> expression EQ expression .) ]
  ! MOD             [ reduce using rule 151 (expression -> expression EQ expression .) ]
  ! PLUS            [ reduce using rule 151 (expression -> expression EQ expression .) ]
  ! MINUS           [ reduce using rule 151 (expression -> expression EQ expression .) ]
  ! LSHIFT          [ reduce using rule 151 (expression -> expression EQ expression .) ]
  ! RSHIFT          [ reduce using rule 151 (expression -> expression EQ expression .) ]
  ! LSHIFTA         [ reduce using rule 151 (expression -> expression EQ expression .) ]
  ! RSHIFTA         [ reduce using rule 151 (expression -> expression EQ expression .) ]
  ! LT              [ reduce using rule 151 (expression -> expression EQ expression .) ]
  ! GT              [ reduce using rule 151 (expression -> expression EQ expression .) ]
  ! LE              [ reduce using rule 151 (expression -> expression EQ expression .) ]
  ! GE              [ reduce using rule 151 (expression -> expression EQ expression .) ]
  ! EQ              [ shift and go to state 156 ]
  ! NE              [ shift and go to state 144 ]
  ! EQL             [ shift and go to state 155 ]
  ! NEL             [ shift and go to state 136 ]
  ! AND             [ shift and go to state 157 ]
  ! XOR             [ shift and go to state 150 ]
  ! XNOR            [ shift and go to state 148 ]
  ! OR              [ shift and go to state 159 ]
  ! LAND            [ shift and go to state 154 ]
  ! LOR             [ shift and go to state 138 ]
  ! COND            [ shift and go to state 139 ]


state 306

    (155) expression -> expression AND expression .
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RBRACKET        reduce using rule 155 (expression -> expression AND expression .)
    AND             reduce using rule 155 (expression -> expression AND expression .)
    XOR             reduce using rule 155 (expression -> expression AND expression .)
    XNOR            reduce using rule 155 (expression -> expression AND expression .)
    OR              reduce using rule 155 (expression -> expression AND expression .)
    LAND            reduce using rule 155 (expression -> expression AND expression .)
    LOR             reduce using rule 155 (expression -> expression AND expression .)
    COND            reduce using rule 155 (expression -> expression AND expression .)
    RPAREN          reduce using rule 155 (expression -> expression AND expression .)
    COLON           reduce using rule 155 (expression -> expression AND expression .)
    PLUSCOLON       reduce using rule 155 (expression -> expression AND expression .)
    MINUSCOLON      reduce using rule 155 (expression -> expression AND expression .)
    SEMICOLON       reduce using rule 155 (expression -> expression AND expression .)
    LBRACE          reduce using rule 155 (expression -> expression AND expression .)
    RBRACE          reduce using rule 155 (expression -> expression AND expression .)
    COMMA           reduce using rule 155 (expression -> expression AND expression .)
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147
    LT              shift and go to state 145
    GT              shift and go to state 149
    LE              shift and go to state 142
    GE              shift and go to state 153
    EQ              shift and go to state 156
    NE              shift and go to state 144
    EQL             shift and go to state 155
    NEL             shift and go to state 136

  ! POWER           [ reduce using rule 155 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 155 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 155 (expression -> expression AND expression .) ]
  ! MOD             [ reduce using rule 155 (expression -> expression AND expression .) ]
  ! PLUS            [ reduce using rule 155 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 155 (expression -> expression AND expression .) ]
  ! LSHIFT          [ reduce using rule 155 (expression -> expression AND expression .) ]
  ! RSHIFT          [ reduce using rule 155 (expression -> expression AND expression .) ]
  ! LSHIFTA         [ reduce using rule 155 (expression -> expression AND expression .) ]
  ! RSHIFTA         [ reduce using rule 155 (expression -> expression AND expression .) ]
  ! LT              [ reduce using rule 155 (expression -> expression AND expression .) ]
  ! GT              [ reduce using rule 155 (expression -> expression AND expression .) ]
  ! LE              [ reduce using rule 155 (expression -> expression AND expression .) ]
  ! GE              [ reduce using rule 155 (expression -> expression AND expression .) ]
  ! EQ              [ reduce using rule 155 (expression -> expression AND expression .) ]
  ! NE              [ reduce using rule 155 (expression -> expression AND expression .) ]
  ! EQL             [ reduce using rule 155 (expression -> expression AND expression .) ]
  ! NEL             [ reduce using rule 155 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 157 ]
  ! XOR             [ shift and go to state 150 ]
  ! XNOR            [ shift and go to state 148 ]
  ! OR              [ shift and go to state 159 ]
  ! LAND            [ shift and go to state 154 ]
  ! LOR             [ shift and go to state 138 ]
  ! COND            [ shift and go to state 139 ]


state 307

    (145) expression -> expression LSHIFTA expression .
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RBRACKET        reduce using rule 145 (expression -> expression LSHIFTA expression .)
    LSHIFT          reduce using rule 145 (expression -> expression LSHIFTA expression .)
    RSHIFT          reduce using rule 145 (expression -> expression LSHIFTA expression .)
    LSHIFTA         reduce using rule 145 (expression -> expression LSHIFTA expression .)
    RSHIFTA         reduce using rule 145 (expression -> expression LSHIFTA expression .)
    LT              reduce using rule 145 (expression -> expression LSHIFTA expression .)
    GT              reduce using rule 145 (expression -> expression LSHIFTA expression .)
    LE              reduce using rule 145 (expression -> expression LSHIFTA expression .)
    GE              reduce using rule 145 (expression -> expression LSHIFTA expression .)
    EQ              reduce using rule 145 (expression -> expression LSHIFTA expression .)
    NE              reduce using rule 145 (expression -> expression LSHIFTA expression .)
    EQL             reduce using rule 145 (expression -> expression LSHIFTA expression .)
    NEL             reduce using rule 145 (expression -> expression LSHIFTA expression .)
    AND             reduce using rule 145 (expression -> expression LSHIFTA expression .)
    XOR             reduce using rule 145 (expression -> expression LSHIFTA expression .)
    XNOR            reduce using rule 145 (expression -> expression LSHIFTA expression .)
    OR              reduce using rule 145 (expression -> expression LSHIFTA expression .)
    LAND            reduce using rule 145 (expression -> expression LSHIFTA expression .)
    LOR             reduce using rule 145 (expression -> expression LSHIFTA expression .)
    COND            reduce using rule 145 (expression -> expression LSHIFTA expression .)
    RPAREN          reduce using rule 145 (expression -> expression LSHIFTA expression .)
    COLON           reduce using rule 145 (expression -> expression LSHIFTA expression .)
    PLUSCOLON       reduce using rule 145 (expression -> expression LSHIFTA expression .)
    MINUSCOLON      reduce using rule 145 (expression -> expression LSHIFTA expression .)
    SEMICOLON       reduce using rule 145 (expression -> expression LSHIFTA expression .)
    LBRACE          reduce using rule 145 (expression -> expression LSHIFTA expression .)
    RBRACE          reduce using rule 145 (expression -> expression LSHIFTA expression .)
    COMMA           reduce using rule 145 (expression -> expression LSHIFTA expression .)
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141

  ! POWER           [ reduce using rule 145 (expression -> expression LSHIFTA expression .) ]
  ! TIMES           [ reduce using rule 145 (expression -> expression LSHIFTA expression .) ]
  ! DIVIDE          [ reduce using rule 145 (expression -> expression LSHIFTA expression .) ]
  ! MOD             [ reduce using rule 145 (expression -> expression LSHIFTA expression .) ]
  ! PLUS            [ reduce using rule 145 (expression -> expression LSHIFTA expression .) ]
  ! MINUS           [ reduce using rule 145 (expression -> expression LSHIFTA expression .) ]
  ! LSHIFT          [ shift and go to state 140 ]
  ! RSHIFT          [ shift and go to state 137 ]
  ! LSHIFTA         [ shift and go to state 158 ]
  ! RSHIFTA         [ shift and go to state 147 ]
  ! LT              [ shift and go to state 145 ]
  ! GT              [ shift and go to state 149 ]
  ! LE              [ shift and go to state 142 ]
  ! GE              [ shift and go to state 153 ]
  ! EQ              [ shift and go to state 156 ]
  ! NE              [ shift and go to state 144 ]
  ! EQL             [ shift and go to state 155 ]
  ! NEL             [ shift and go to state 136 ]
  ! AND             [ shift and go to state 157 ]
  ! XOR             [ shift and go to state 150 ]
  ! XNOR            [ shift and go to state 148 ]
  ! OR              [ shift and go to state 159 ]
  ! LAND            [ shift and go to state 154 ]
  ! LOR             [ shift and go to state 138 ]
  ! COND            [ shift and go to state 139 ]


state 308

    (158) expression -> expression OR expression .
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RBRACKET        reduce using rule 158 (expression -> expression OR expression .)
    OR              reduce using rule 158 (expression -> expression OR expression .)
    LAND            reduce using rule 158 (expression -> expression OR expression .)
    LOR             reduce using rule 158 (expression -> expression OR expression .)
    COND            reduce using rule 158 (expression -> expression OR expression .)
    RPAREN          reduce using rule 158 (expression -> expression OR expression .)
    COLON           reduce using rule 158 (expression -> expression OR expression .)
    PLUSCOLON       reduce using rule 158 (expression -> expression OR expression .)
    MINUSCOLON      reduce using rule 158 (expression -> expression OR expression .)
    SEMICOLON       reduce using rule 158 (expression -> expression OR expression .)
    LBRACE          reduce using rule 158 (expression -> expression OR expression .)
    RBRACE          reduce using rule 158 (expression -> expression OR expression .)
    COMMA           reduce using rule 158 (expression -> expression OR expression .)
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147
    LT              shift and go to state 145
    GT              shift and go to state 149
    LE              shift and go to state 142
    GE              shift and go to state 153
    EQ              shift and go to state 156
    NE              shift and go to state 144
    EQL             shift and go to state 155
    NEL             shift and go to state 136
    AND             shift and go to state 157
    XOR             shift and go to state 150
    XNOR            shift and go to state 148

  ! POWER           [ reduce using rule 158 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 158 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 158 (expression -> expression OR expression .) ]
  ! MOD             [ reduce using rule 158 (expression -> expression OR expression .) ]
  ! PLUS            [ reduce using rule 158 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 158 (expression -> expression OR expression .) ]
  ! LSHIFT          [ reduce using rule 158 (expression -> expression OR expression .) ]
  ! RSHIFT          [ reduce using rule 158 (expression -> expression OR expression .) ]
  ! LSHIFTA         [ reduce using rule 158 (expression -> expression OR expression .) ]
  ! RSHIFTA         [ reduce using rule 158 (expression -> expression OR expression .) ]
  ! LT              [ reduce using rule 158 (expression -> expression OR expression .) ]
  ! GT              [ reduce using rule 158 (expression -> expression OR expression .) ]
  ! LE              [ reduce using rule 158 (expression -> expression OR expression .) ]
  ! GE              [ reduce using rule 158 (expression -> expression OR expression .) ]
  ! EQ              [ reduce using rule 158 (expression -> expression OR expression .) ]
  ! NE              [ reduce using rule 158 (expression -> expression OR expression .) ]
  ! EQL             [ reduce using rule 158 (expression -> expression OR expression .) ]
  ! NEL             [ reduce using rule 158 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 158 (expression -> expression OR expression .) ]
  ! XOR             [ reduce using rule 158 (expression -> expression OR expression .) ]
  ! XNOR            [ reduce using rule 158 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 159 ]
  ! LAND            [ shift and go to state 154 ]
  ! LOR             [ shift and go to state 138 ]
  ! COND            [ shift and go to state 139 ]


state 309

    (140) expression -> expression MOD expression .
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RBRACKET        reduce using rule 140 (expression -> expression MOD expression .)
    TIMES           reduce using rule 140 (expression -> expression MOD expression .)
    DIVIDE          reduce using rule 140 (expression -> expression MOD expression .)
    MOD             reduce using rule 140 (expression -> expression MOD expression .)
    PLUS            reduce using rule 140 (expression -> expression MOD expression .)
    MINUS           reduce using rule 140 (expression -> expression MOD expression .)
    LSHIFT          reduce using rule 140 (expression -> expression MOD expression .)
    RSHIFT          reduce using rule 140 (expression -> expression MOD expression .)
    LSHIFTA         reduce using rule 140 (expression -> expression MOD expression .)
    RSHIFTA         reduce using rule 140 (expression -> expression MOD expression .)
    LT              reduce using rule 140 (expression -> expression MOD expression .)
    GT              reduce using rule 140 (expression -> expression MOD expression .)
    LE              reduce using rule 140 (expression -> expression MOD expression .)
    GE              reduce using rule 140 (expression -> expression MOD expression .)
    EQ              reduce using rule 140 (expression -> expression MOD expression .)
    NE              reduce using rule 140 (expression -> expression MOD expression .)
    EQL             reduce using rule 140 (expression -> expression MOD expression .)
    NEL             reduce using rule 140 (expression -> expression MOD expression .)
    AND             reduce using rule 140 (expression -> expression MOD expression .)
    XOR             reduce using rule 140 (expression -> expression MOD expression .)
    XNOR            reduce using rule 140 (expression -> expression MOD expression .)
    OR              reduce using rule 140 (expression -> expression MOD expression .)
    LAND            reduce using rule 140 (expression -> expression MOD expression .)
    LOR             reduce using rule 140 (expression -> expression MOD expression .)
    COND            reduce using rule 140 (expression -> expression MOD expression .)
    RPAREN          reduce using rule 140 (expression -> expression MOD expression .)
    COLON           reduce using rule 140 (expression -> expression MOD expression .)
    PLUSCOLON       reduce using rule 140 (expression -> expression MOD expression .)
    MINUSCOLON      reduce using rule 140 (expression -> expression MOD expression .)
    SEMICOLON       reduce using rule 140 (expression -> expression MOD expression .)
    LBRACE          reduce using rule 140 (expression -> expression MOD expression .)
    RBRACE          reduce using rule 140 (expression -> expression MOD expression .)
    COMMA           reduce using rule 140 (expression -> expression MOD expression .)
    POWER           shift and go to state 143

  ! POWER           [ reduce using rule 140 (expression -> expression MOD expression .) ]
  ! TIMES           [ shift and go to state 271 ]
  ! DIVIDE          [ shift and go to state 151 ]
  ! MOD             [ shift and go to state 160 ]
  ! PLUS            [ shift and go to state 146 ]
  ! MINUS           [ shift and go to state 141 ]
  ! LSHIFT          [ shift and go to state 140 ]
  ! RSHIFT          [ shift and go to state 137 ]
  ! LSHIFTA         [ shift and go to state 158 ]
  ! RSHIFTA         [ shift and go to state 147 ]
  ! LT              [ shift and go to state 145 ]
  ! GT              [ shift and go to state 149 ]
  ! LE              [ shift and go to state 142 ]
  ! GE              [ shift and go to state 153 ]
  ! EQ              [ shift and go to state 156 ]
  ! NE              [ shift and go to state 144 ]
  ! EQL             [ shift and go to state 155 ]
  ! NEL             [ shift and go to state 136 ]
  ! AND             [ shift and go to state 157 ]
  ! XOR             [ shift and go to state 150 ]
  ! XNOR            [ shift and go to state 148 ]
  ! OR              [ shift and go to state 159 ]
  ! LAND            [ shift and go to state 154 ]
  ! LOR             [ shift and go to state 138 ]
  ! COND            [ shift and go to state 139 ]


state 310

    (90) realnamelist -> realnamelist COMMA . realname
    (92) realname -> . ID

    ID              shift and go to state 165

    realname                       shift and go to state 443

state 311

    (89) realdecl -> REAL realnamelist SEMICOLON .

    END             reduce using rule 89 (realdecl -> REAL realnamelist SEMICOLON .)
    INTEGER         reduce using rule 89 (realdecl -> REAL realnamelist SEMICOLON .)
    REAL            reduce using rule 89 (realdecl -> REAL realnamelist SEMICOLON .)
    PARAMETER       reduce using rule 89 (realdecl -> REAL realnamelist SEMICOLON .)
    LOCALPARAM      reduce using rule 89 (realdecl -> REAL realnamelist SEMICOLON .)
    IF              reduce using rule 89 (realdecl -> REAL realnamelist SEMICOLON .)
    CASE            reduce using rule 89 (realdecl -> REAL realnamelist SEMICOLON .)
    CASEX           reduce using rule 89 (realdecl -> REAL realnamelist SEMICOLON .)
    FOR             reduce using rule 89 (realdecl -> REAL realnamelist SEMICOLON .)
    WHILE           reduce using rule 89 (realdecl -> REAL realnamelist SEMICOLON .)
    WAIT            reduce using rule 89 (realdecl -> REAL realnamelist SEMICOLON .)
    FOREVER         reduce using rule 89 (realdecl -> REAL realnamelist SEMICOLON .)
    BEGIN           reduce using rule 89 (realdecl -> REAL realnamelist SEMICOLON .)
    FORK            reduce using rule 89 (realdecl -> REAL realnamelist SEMICOLON .)
    DELAY           reduce using rule 89 (realdecl -> REAL realnamelist SEMICOLON .)
    AT              reduce using rule 89 (realdecl -> REAL realnamelist SEMICOLON .)
    DOLLER          reduce using rule 89 (realdecl -> REAL realnamelist SEMICOLON .)
    DISABLE         reduce using rule 89 (realdecl -> REAL realnamelist SEMICOLON .)
    INPUT           reduce using rule 89 (realdecl -> REAL realnamelist SEMICOLON .)
    OUTPUT          reduce using rule 89 (realdecl -> REAL realnamelist SEMICOLON .)
    INOUT           reduce using rule 89 (realdecl -> REAL realnamelist SEMICOLON .)
    TRI             reduce using rule 89 (realdecl -> REAL realnamelist SEMICOLON .)
    REG             reduce using rule 89 (realdecl -> REAL realnamelist SEMICOLON .)
    WIRE            reduce using rule 89 (realdecl -> REAL realnamelist SEMICOLON .)
    SIGNED          reduce using rule 89 (realdecl -> REAL realnamelist SEMICOLON .)
    SUPPLY0         reduce using rule 89 (realdecl -> REAL realnamelist SEMICOLON .)
    SUPPLY1         reduce using rule 89 (realdecl -> REAL realnamelist SEMICOLON .)
    LBRACE          reduce using rule 89 (realdecl -> REAL realnamelist SEMICOLON .)
    ID              reduce using rule 89 (realdecl -> REAL realnamelist SEMICOLON .)
    SEMICOLON       reduce using rule 89 (realdecl -> REAL realnamelist SEMICOLON .)
    ELSE            reduce using rule 89 (realdecl -> REAL realnamelist SEMICOLON .)
    ENDGENERATE     reduce using rule 89 (realdecl -> REAL realnamelist SEMICOLON .)
    GENVAR          reduce using rule 89 (realdecl -> REAL realnamelist SEMICOLON .)
    ASSIGN          reduce using rule 89 (realdecl -> REAL realnamelist SEMICOLON .)
    ALWAYS          reduce using rule 89 (realdecl -> REAL realnamelist SEMICOLON .)
    INITIAL         reduce using rule 89 (realdecl -> REAL realnamelist SEMICOLON .)
    SENS_OR         reduce using rule 89 (realdecl -> REAL realnamelist SEMICOLON .)
    FUNCTION        reduce using rule 89 (realdecl -> REAL realnamelist SEMICOLON .)
    TASK            reduce using rule 89 (realdecl -> REAL realnamelist SEMICOLON .)
    LPAREN          reduce using rule 89 (realdecl -> REAL realnamelist SEMICOLON .)
    ENDMODULE       reduce using rule 89 (realdecl -> REAL realnamelist SEMICOLON .)
    GENERATE        reduce using rule 89 (realdecl -> REAL realnamelist SEMICOLON .)


state 312

    (254) parallelblock -> FORK block_statements . JOIN
    (241) block_statements -> block_statements . block_statement
    (243) block_statement -> . basic_statement
    (216) basic_statement -> . if_statement
    (217) basic_statement -> . case_statement
    (218) basic_statement -> . casex_statement
    (219) basic_statement -> . for_statement
    (220) basic_statement -> . while_statement
    (221) basic_statement -> . event_statement
    (222) basic_statement -> . wait_statement
    (223) basic_statement -> . forever_statement
    (224) basic_statement -> . block
    (225) basic_statement -> . namedblock
    (226) basic_statement -> . parallelblock
    (227) basic_statement -> . blocking_substitution
    (228) basic_statement -> . nonblocking_substitution
    (229) basic_statement -> . single_statement
    (256) if_statement -> . IF LPAREN cond RPAREN true_statement ELSE else_statement
    (257) if_statement -> . IF LPAREN cond RPAREN true_statement
    (258) if_statement -> . delays IF LPAREN cond RPAREN true_statement ELSE else_statement
    (259) if_statement -> . delays IF LPAREN cond RPAREN true_statement
    (274) case_statement -> . CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (275) casex_statement -> . CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (264) for_statement -> . FOR LPAREN forpre forcond forpost RPAREN forcontent_statement
    (272) while_statement -> . WHILE LPAREN cond RPAREN whilecontent_statement
    (285) event_statement -> . senslist SEMICOLON
    (286) wait_statement -> . WAIT LPAREN cond RPAREN waitcontent_statement
    (289) forever_statement -> . FOREVER basic_statement
    (239) block -> . BEGIN block_statements END
    (240) block -> . BEGIN END
    (244) namedblock -> . BEGIN COLON ID namedblock_statements END
    (245) namedblock -> . BEGIN COLON ID END
    (254) parallelblock -> . FORK block_statements JOIN
    (255) parallelblock -> . FORK JOIN
    (231) blocking_substitution -> . delays lvalue EQUALS delays rvalue SEMICOLON
    (233) nonblocking_substitution -> . delays lvalue LE delays rvalue SEMICOLON
    (390) single_statement -> . DELAY expression SEMICOLON
    (391) single_statement -> . systemcall SEMICOLON
    (392) single_statement -> . disable SEMICOLON
    (234) delays -> . DELAY LPAREN expression RPAREN
    (235) delays -> . DELAY identifier
    (236) delays -> . DELAY intnumber
    (237) delays -> . DELAY floatnumber
    (238) delays -> . empty
    (197) senslist -> . AT LPAREN edgesigs RPAREN
    (204) senslist -> . empty
    (205) senslist -> . AT levelsig
    (206) senslist -> . AT LPAREN levelsigs RPAREN
    (214) senslist -> . AT TIMES
    (215) senslist -> . AT LPAREN TIMES RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (389) disable -> . DISABLE ID
    (393) empty -> .

  ! shift/reduce conflict for IF resolved as shift
    JOIN            shift and go to state 445
    IF              shift and go to state 195
    CASE            shift and go to state 173
    CASEX           shift and go to state 178
    FOR             shift and go to state 187
    WHILE           shift and go to state 171
    WAIT            shift and go to state 168
    FOREVER         shift and go to state 167
    BEGIN           shift and go to state 175
    FORK            shift and go to state 166
    DELAY           shift and go to state 170
    AT              shift and go to state 193
    DOLLER          shift and go to state 54
    DISABLE         shift and go to state 180
    LBRACE          reduce using rule 393 (empty -> .)
    ID              reduce using rule 393 (empty -> .)
    SEMICOLON       reduce using rule 393 (empty -> .)

  ! IF              [ reduce using rule 393 (empty -> .) ]

    parallelblock                  shift and go to state 169
    blocking_substitution          shift and go to state 177
    forever_statement              shift and go to state 172
    casex_statement                shift and go to state 174
    delays                         shift and go to state 176
    block_statement                shift and go to state 444
    while_statement                shift and go to state 179
    systemcall                     shift and go to state 181
    if_statement                   shift and go to state 182
    nonblocking_substitution       shift and go to state 183
    empty                          shift and go to state 184
    basic_statement                shift and go to state 314
    for_statement                  shift and go to state 186
    event_statement                shift and go to state 189
    wait_statement                 shift and go to state 190
    case_statement                 shift and go to state 191
    disable                        shift and go to state 192
    namedblock                     shift and go to state 194
    senslist                       shift and go to state 196
    single_statement               shift and go to state 197
    block                          shift and go to state 198

state 313

    (242) block_statements -> block_statement .

    JOIN            reduce using rule 242 (block_statements -> block_statement .)
    IF              reduce using rule 242 (block_statements -> block_statement .)
    CASE            reduce using rule 242 (block_statements -> block_statement .)
    CASEX           reduce using rule 242 (block_statements -> block_statement .)
    FOR             reduce using rule 242 (block_statements -> block_statement .)
    WHILE           reduce using rule 242 (block_statements -> block_statement .)
    WAIT            reduce using rule 242 (block_statements -> block_statement .)
    FOREVER         reduce using rule 242 (block_statements -> block_statement .)
    BEGIN           reduce using rule 242 (block_statements -> block_statement .)
    FORK            reduce using rule 242 (block_statements -> block_statement .)
    DELAY           reduce using rule 242 (block_statements -> block_statement .)
    AT              reduce using rule 242 (block_statements -> block_statement .)
    DOLLER          reduce using rule 242 (block_statements -> block_statement .)
    DISABLE         reduce using rule 242 (block_statements -> block_statement .)
    LBRACE          reduce using rule 242 (block_statements -> block_statement .)
    ID              reduce using rule 242 (block_statements -> block_statement .)
    SEMICOLON       reduce using rule 242 (block_statements -> block_statement .)
    END             reduce using rule 242 (block_statements -> block_statement .)


state 314

    (243) block_statement -> basic_statement .

    END             reduce using rule 243 (block_statement -> basic_statement .)
    IF              reduce using rule 243 (block_statement -> basic_statement .)
    CASE            reduce using rule 243 (block_statement -> basic_statement .)
    CASEX           reduce using rule 243 (block_statement -> basic_statement .)
    FOR             reduce using rule 243 (block_statement -> basic_statement .)
    WHILE           reduce using rule 243 (block_statement -> basic_statement .)
    WAIT            reduce using rule 243 (block_statement -> basic_statement .)
    FOREVER         reduce using rule 243 (block_statement -> basic_statement .)
    BEGIN           reduce using rule 243 (block_statement -> basic_statement .)
    FORK            reduce using rule 243 (block_statement -> basic_statement .)
    DELAY           reduce using rule 243 (block_statement -> basic_statement .)
    AT              reduce using rule 243 (block_statement -> basic_statement .)
    DOLLER          reduce using rule 243 (block_statement -> basic_statement .)
    DISABLE         reduce using rule 243 (block_statement -> basic_statement .)
    LBRACE          reduce using rule 243 (block_statement -> basic_statement .)
    ID              reduce using rule 243 (block_statement -> basic_statement .)
    SEMICOLON       reduce using rule 243 (block_statement -> basic_statement .)
    JOIN            reduce using rule 243 (block_statement -> basic_statement .)


state 315

    (255) parallelblock -> FORK JOIN .

    ENDMODULE       reduce using rule 255 (parallelblock -> FORK JOIN .)
    GENERATE        reduce using rule 255 (parallelblock -> FORK JOIN .)
    INTEGER         reduce using rule 255 (parallelblock -> FORK JOIN .)
    REAL            reduce using rule 255 (parallelblock -> FORK JOIN .)
    PARAMETER       reduce using rule 255 (parallelblock -> FORK JOIN .)
    LOCALPARAM      reduce using rule 255 (parallelblock -> FORK JOIN .)
    GENVAR          reduce using rule 255 (parallelblock -> FORK JOIN .)
    ASSIGN          reduce using rule 255 (parallelblock -> FORK JOIN .)
    ALWAYS          reduce using rule 255 (parallelblock -> FORK JOIN .)
    INITIAL         reduce using rule 255 (parallelblock -> FORK JOIN .)
    ID              reduce using rule 255 (parallelblock -> FORK JOIN .)
    SENS_OR         reduce using rule 255 (parallelblock -> FORK JOIN .)
    FUNCTION        reduce using rule 255 (parallelblock -> FORK JOIN .)
    TASK            reduce using rule 255 (parallelblock -> FORK JOIN .)
    LPAREN          reduce using rule 255 (parallelblock -> FORK JOIN .)
    INPUT           reduce using rule 255 (parallelblock -> FORK JOIN .)
    OUTPUT          reduce using rule 255 (parallelblock -> FORK JOIN .)
    INOUT           reduce using rule 255 (parallelblock -> FORK JOIN .)
    TRI             reduce using rule 255 (parallelblock -> FORK JOIN .)
    REG             reduce using rule 255 (parallelblock -> FORK JOIN .)
    WIRE            reduce using rule 255 (parallelblock -> FORK JOIN .)
    SIGNED          reduce using rule 255 (parallelblock -> FORK JOIN .)
    SUPPLY0         reduce using rule 255 (parallelblock -> FORK JOIN .)
    SUPPLY1         reduce using rule 255 (parallelblock -> FORK JOIN .)
    ENDGENERATE     reduce using rule 255 (parallelblock -> FORK JOIN .)
    IF              reduce using rule 255 (parallelblock -> FORK JOIN .)
    FOR             reduce using rule 255 (parallelblock -> FORK JOIN .)
    ELSE            reduce using rule 255 (parallelblock -> FORK JOIN .)
    END             reduce using rule 255 (parallelblock -> FORK JOIN .)
    JOIN            reduce using rule 255 (parallelblock -> FORK JOIN .)
    CASE            reduce using rule 255 (parallelblock -> FORK JOIN .)
    CASEX           reduce using rule 255 (parallelblock -> FORK JOIN .)
    WHILE           reduce using rule 255 (parallelblock -> FORK JOIN .)
    WAIT            reduce using rule 255 (parallelblock -> FORK JOIN .)
    FOREVER         reduce using rule 255 (parallelblock -> FORK JOIN .)
    BEGIN           reduce using rule 255 (parallelblock -> FORK JOIN .)
    FORK            reduce using rule 255 (parallelblock -> FORK JOIN .)
    DELAY           reduce using rule 255 (parallelblock -> FORK JOIN .)
    AT              reduce using rule 255 (parallelblock -> FORK JOIN .)
    DOLLER          reduce using rule 255 (parallelblock -> FORK JOIN .)
    DISABLE         reduce using rule 255 (parallelblock -> FORK JOIN .)
    LBRACE          reduce using rule 255 (parallelblock -> FORK JOIN .)
    SEMICOLON       reduce using rule 255 (parallelblock -> FORK JOIN .)
    ENDTASK         reduce using rule 255 (parallelblock -> FORK JOIN .)
    ENDFUNCTION     reduce using rule 255 (parallelblock -> FORK JOIN .)
    ENDCASE         reduce using rule 255 (parallelblock -> FORK JOIN .)
    DEFAULT         reduce using rule 255 (parallelblock -> FORK JOIN .)
    MINUS           reduce using rule 255 (parallelblock -> FORK JOIN .)
    PLUS            reduce using rule 255 (parallelblock -> FORK JOIN .)
    LNOT            reduce using rule 255 (parallelblock -> FORK JOIN .)
    NOT             reduce using rule 255 (parallelblock -> FORK JOIN .)
    AND             reduce using rule 255 (parallelblock -> FORK JOIN .)
    NAND            reduce using rule 255 (parallelblock -> FORK JOIN .)
    NOR             reduce using rule 255 (parallelblock -> FORK JOIN .)
    OR              reduce using rule 255 (parallelblock -> FORK JOIN .)
    XOR             reduce using rule 255 (parallelblock -> FORK JOIN .)
    XNOR            reduce using rule 255 (parallelblock -> FORK JOIN .)
    INTNUMBER_DEC   reduce using rule 255 (parallelblock -> FORK JOIN .)
    SIGNED_INTNUMBER_DEC reduce using rule 255 (parallelblock -> FORK JOIN .)
    INTNUMBER_BIN   reduce using rule 255 (parallelblock -> FORK JOIN .)
    SIGNED_INTNUMBER_BIN reduce using rule 255 (parallelblock -> FORK JOIN .)
    INTNUMBER_OCT   reduce using rule 255 (parallelblock -> FORK JOIN .)
    SIGNED_INTNUMBER_OCT reduce using rule 255 (parallelblock -> FORK JOIN .)
    INTNUMBER_HEX   reduce using rule 255 (parallelblock -> FORK JOIN .)
    SIGNED_INTNUMBER_HEX reduce using rule 255 (parallelblock -> FORK JOIN .)
    FLOATNUMBER     reduce using rule 255 (parallelblock -> FORK JOIN .)
    STRING_LITERAL  reduce using rule 255 (parallelblock -> FORK JOIN .)


state 316

    (289) forever_statement -> FOREVER basic_statement .

    END             reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    INTEGER         reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    REAL            reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    PARAMETER       reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    LOCALPARAM      reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    IF              reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    CASE            reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    CASEX           reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    FOR             reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    WHILE           reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    WAIT            reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    FOREVER         reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    BEGIN           reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    FORK            reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    DELAY           reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    AT              reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    DOLLER          reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    DISABLE         reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    INPUT           reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    OUTPUT          reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    INOUT           reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    TRI             reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    REG             reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    WIRE            reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    SIGNED          reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    SUPPLY0         reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    SUPPLY1         reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    LBRACE          reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    ID              reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    SEMICOLON       reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    ENDMODULE       reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    GENERATE        reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    GENVAR          reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    ASSIGN          reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    ALWAYS          reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    INITIAL         reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    SENS_OR         reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    FUNCTION        reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    TASK            reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    LPAREN          reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    ENDGENERATE     reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    ELSE            reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    JOIN            reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    ENDTASK         reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    ENDFUNCTION     reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    ENDCASE         reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    DEFAULT         reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    MINUS           reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    PLUS            reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    LNOT            reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    NOT             reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    AND             reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    NAND            reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    NOR             reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    OR              reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    XOR             reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    XNOR            reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    INTNUMBER_DEC   reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    SIGNED_INTNUMBER_DEC reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    INTNUMBER_BIN   reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    SIGNED_INTNUMBER_BIN reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    INTNUMBER_OCT   reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    SIGNED_INTNUMBER_OCT reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    INTNUMBER_HEX   reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    SIGNED_INTNUMBER_HEX reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    FLOATNUMBER     reduce using rule 289 (forever_statement -> FOREVER basic_statement .)
    STRING_LITERAL  reduce using rule 289 (forever_statement -> FOREVER basic_statement .)


state 317

    (286) wait_statement -> WAIT LPAREN . cond RPAREN waitcontent_statement
    (260) cond -> . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    pointer                        shift and go to state 31
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    cond                           shift and go to state 446
    scope                          shift and go to state 44
    functioncall                   shift and go to state 55
    identifier                     shift and go to state 57
    expression                     shift and go to state 447
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 318

    (236) delays -> DELAY intnumber .
    (183) const_expression -> intnumber .

    IF              reduce using rule 236 (delays -> DELAY intnumber .)
    LBRACE          reduce using rule 236 (delays -> DELAY intnumber .)
    ID              reduce using rule 236 (delays -> DELAY intnumber .)
    SEMICOLON       reduce using rule 183 (const_expression -> intnumber .)
    POWER           reduce using rule 183 (const_expression -> intnumber .)
    TIMES           reduce using rule 183 (const_expression -> intnumber .)
    DIVIDE          reduce using rule 183 (const_expression -> intnumber .)
    MOD             reduce using rule 183 (const_expression -> intnumber .)
    PLUS            reduce using rule 183 (const_expression -> intnumber .)
    MINUS           reduce using rule 183 (const_expression -> intnumber .)
    LSHIFT          reduce using rule 183 (const_expression -> intnumber .)
    RSHIFT          reduce using rule 183 (const_expression -> intnumber .)
    LSHIFTA         reduce using rule 183 (const_expression -> intnumber .)
    RSHIFTA         reduce using rule 183 (const_expression -> intnumber .)
    LT              reduce using rule 183 (const_expression -> intnumber .)
    GT              reduce using rule 183 (const_expression -> intnumber .)
    LE              reduce using rule 183 (const_expression -> intnumber .)
    GE              reduce using rule 183 (const_expression -> intnumber .)
    EQ              reduce using rule 183 (const_expression -> intnumber .)
    NE              reduce using rule 183 (const_expression -> intnumber .)
    EQL             reduce using rule 183 (const_expression -> intnumber .)
    NEL             reduce using rule 183 (const_expression -> intnumber .)
    AND             reduce using rule 183 (const_expression -> intnumber .)
    XOR             reduce using rule 183 (const_expression -> intnumber .)
    XNOR            reduce using rule 183 (const_expression -> intnumber .)
    OR              reduce using rule 183 (const_expression -> intnumber .)
    LAND            reduce using rule 183 (const_expression -> intnumber .)
    LOR             reduce using rule 183 (const_expression -> intnumber .)
    COND            reduce using rule 183 (const_expression -> intnumber .)


state 319

    (234) delays -> DELAY LPAREN . expression RPAREN
    (162) expression -> LPAREN . expression RPAREN
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 448
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 320

    (237) delays -> DELAY floatnumber .
    (184) const_expression -> floatnumber .

    IF              reduce using rule 237 (delays -> DELAY floatnumber .)
    LBRACE          reduce using rule 237 (delays -> DELAY floatnumber .)
    ID              reduce using rule 237 (delays -> DELAY floatnumber .)
    SEMICOLON       reduce using rule 184 (const_expression -> floatnumber .)
    POWER           reduce using rule 184 (const_expression -> floatnumber .)
    TIMES           reduce using rule 184 (const_expression -> floatnumber .)
    DIVIDE          reduce using rule 184 (const_expression -> floatnumber .)
    MOD             reduce using rule 184 (const_expression -> floatnumber .)
    PLUS            reduce using rule 184 (const_expression -> floatnumber .)
    MINUS           reduce using rule 184 (const_expression -> floatnumber .)
    LSHIFT          reduce using rule 184 (const_expression -> floatnumber .)
    RSHIFT          reduce using rule 184 (const_expression -> floatnumber .)
    LSHIFTA         reduce using rule 184 (const_expression -> floatnumber .)
    RSHIFTA         reduce using rule 184 (const_expression -> floatnumber .)
    LT              reduce using rule 184 (const_expression -> floatnumber .)
    GT              reduce using rule 184 (const_expression -> floatnumber .)
    LE              reduce using rule 184 (const_expression -> floatnumber .)
    GE              reduce using rule 184 (const_expression -> floatnumber .)
    EQ              reduce using rule 184 (const_expression -> floatnumber .)
    NE              reduce using rule 184 (const_expression -> floatnumber .)
    EQL             reduce using rule 184 (const_expression -> floatnumber .)
    NEL             reduce using rule 184 (const_expression -> floatnumber .)
    AND             reduce using rule 184 (const_expression -> floatnumber .)
    XOR             reduce using rule 184 (const_expression -> floatnumber .)
    XNOR            reduce using rule 184 (const_expression -> floatnumber .)
    OR              reduce using rule 184 (const_expression -> floatnumber .)
    LAND            reduce using rule 184 (const_expression -> floatnumber .)
    LOR             reduce using rule 184 (const_expression -> floatnumber .)
    COND            reduce using rule 184 (const_expression -> floatnumber .)


state 321

    (235) delays -> DELAY identifier .
    (169) expression -> identifier .
    (175) partselect -> identifier . LBRACKET expression COLON expression RBRACKET
    (176) partselect -> identifier . LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> identifier . LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> identifier . LBRACKET expression RBRACKET
    (366) functioncall -> identifier . LPAREN func_args RPAREN
    (387) scope -> identifier . DOT

    IF              reduce using rule 235 (delays -> DELAY identifier .)
    LBRACE          reduce using rule 235 (delays -> DELAY identifier .)
    ID              reduce using rule 235 (delays -> DELAY identifier .)
    SEMICOLON       reduce using rule 169 (expression -> identifier .)
    POWER           reduce using rule 169 (expression -> identifier .)
    TIMES           reduce using rule 169 (expression -> identifier .)
    DIVIDE          reduce using rule 169 (expression -> identifier .)
    MOD             reduce using rule 169 (expression -> identifier .)
    PLUS            reduce using rule 169 (expression -> identifier .)
    MINUS           reduce using rule 169 (expression -> identifier .)
    LSHIFT          reduce using rule 169 (expression -> identifier .)
    RSHIFT          reduce using rule 169 (expression -> identifier .)
    LSHIFTA         reduce using rule 169 (expression -> identifier .)
    RSHIFTA         reduce using rule 169 (expression -> identifier .)
    LT              reduce using rule 169 (expression -> identifier .)
    GT              reduce using rule 169 (expression -> identifier .)
    LE              reduce using rule 169 (expression -> identifier .)
    GE              reduce using rule 169 (expression -> identifier .)
    EQ              reduce using rule 169 (expression -> identifier .)
    NE              reduce using rule 169 (expression -> identifier .)
    EQL             reduce using rule 169 (expression -> identifier .)
    NEL             reduce using rule 169 (expression -> identifier .)
    AND             reduce using rule 169 (expression -> identifier .)
    XOR             reduce using rule 169 (expression -> identifier .)
    XNOR            reduce using rule 169 (expression -> identifier .)
    OR              reduce using rule 169 (expression -> identifier .)
    LAND            reduce using rule 169 (expression -> identifier .)
    LOR             reduce using rule 169 (expression -> identifier .)
    COND            reduce using rule 169 (expression -> identifier .)
    LBRACKET        shift and go to state 133
    LPAREN          shift and go to state 134
    DOT             shift and go to state 135


state 322

    (390) single_statement -> DELAY expression . SEMICOLON
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    SEMICOLON       shift and go to state 449
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147
    LT              shift and go to state 145
    GT              shift and go to state 149
    LE              shift and go to state 142
    GE              shift and go to state 153
    EQ              shift and go to state 156
    NE              shift and go to state 144
    EQL             shift and go to state 155
    NEL             shift and go to state 136
    AND             shift and go to state 157
    XOR             shift and go to state 150
    XNOR            shift and go to state 148
    OR              shift and go to state 159
    LAND            shift and go to state 154
    LOR             shift and go to state 138
    COND            shift and go to state 139


state 323

    (272) while_statement -> WHILE LPAREN . cond RPAREN whilecontent_statement
    (260) cond -> . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    pointer                        shift and go to state 31
    const_expression               shift and go to state 29
    systemcall                     shift and go to state 27
    cond                           shift and go to state 450
    intnumber                      shift and go to state 37
    scope                          shift and go to state 44
    functioncall                   shift and go to state 55
    identifier                     shift and go to state 57
    expression                     shift and go to state 447
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 324

    (274) case_statement -> CASE LPAREN . case_comp RPAREN casecontent_statements ENDCASE
    (276) case_comp -> . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    pointer                        shift and go to state 31
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    case_comp                      shift and go to state 451
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    expression                     shift and go to state 452
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 325

    (244) namedblock -> BEGIN COLON . ID namedblock_statements END
    (245) namedblock -> BEGIN COLON . ID END

    ID              shift and go to state 453


state 326

    (239) block -> BEGIN block_statements . END
    (241) block_statements -> block_statements . block_statement
    (243) block_statement -> . basic_statement
    (216) basic_statement -> . if_statement
    (217) basic_statement -> . case_statement
    (218) basic_statement -> . casex_statement
    (219) basic_statement -> . for_statement
    (220) basic_statement -> . while_statement
    (221) basic_statement -> . event_statement
    (222) basic_statement -> . wait_statement
    (223) basic_statement -> . forever_statement
    (224) basic_statement -> . block
    (225) basic_statement -> . namedblock
    (226) basic_statement -> . parallelblock
    (227) basic_statement -> . blocking_substitution
    (228) basic_statement -> . nonblocking_substitution
    (229) basic_statement -> . single_statement
    (256) if_statement -> . IF LPAREN cond RPAREN true_statement ELSE else_statement
    (257) if_statement -> . IF LPAREN cond RPAREN true_statement
    (258) if_statement -> . delays IF LPAREN cond RPAREN true_statement ELSE else_statement
    (259) if_statement -> . delays IF LPAREN cond RPAREN true_statement
    (274) case_statement -> . CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (275) casex_statement -> . CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (264) for_statement -> . FOR LPAREN forpre forcond forpost RPAREN forcontent_statement
    (272) while_statement -> . WHILE LPAREN cond RPAREN whilecontent_statement
    (285) event_statement -> . senslist SEMICOLON
    (286) wait_statement -> . WAIT LPAREN cond RPAREN waitcontent_statement
    (289) forever_statement -> . FOREVER basic_statement
    (239) block -> . BEGIN block_statements END
    (240) block -> . BEGIN END
    (244) namedblock -> . BEGIN COLON ID namedblock_statements END
    (245) namedblock -> . BEGIN COLON ID END
    (254) parallelblock -> . FORK block_statements JOIN
    (255) parallelblock -> . FORK JOIN
    (231) blocking_substitution -> . delays lvalue EQUALS delays rvalue SEMICOLON
    (233) nonblocking_substitution -> . delays lvalue LE delays rvalue SEMICOLON
    (390) single_statement -> . DELAY expression SEMICOLON
    (391) single_statement -> . systemcall SEMICOLON
    (392) single_statement -> . disable SEMICOLON
    (234) delays -> . DELAY LPAREN expression RPAREN
    (235) delays -> . DELAY identifier
    (236) delays -> . DELAY intnumber
    (237) delays -> . DELAY floatnumber
    (238) delays -> . empty
    (197) senslist -> . AT LPAREN edgesigs RPAREN
    (204) senslist -> . empty
    (205) senslist -> . AT levelsig
    (206) senslist -> . AT LPAREN levelsigs RPAREN
    (214) senslist -> . AT TIMES
    (215) senslist -> . AT LPAREN TIMES RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (389) disable -> . DISABLE ID
    (393) empty -> .

  ! shift/reduce conflict for IF resolved as shift
    END             shift and go to state 454
    IF              shift and go to state 195
    CASE            shift and go to state 173
    CASEX           shift and go to state 178
    FOR             shift and go to state 187
    WHILE           shift and go to state 171
    WAIT            shift and go to state 168
    FOREVER         shift and go to state 167
    BEGIN           shift and go to state 175
    FORK            shift and go to state 166
    DELAY           shift and go to state 170
    AT              shift and go to state 193
    DOLLER          shift and go to state 54
    DISABLE         shift and go to state 180
    LBRACE          reduce using rule 393 (empty -> .)
    ID              reduce using rule 393 (empty -> .)
    SEMICOLON       reduce using rule 393 (empty -> .)

  ! IF              [ reduce using rule 393 (empty -> .) ]

    parallelblock                  shift and go to state 169
    blocking_substitution          shift and go to state 177
    forever_statement              shift and go to state 172
    casex_statement                shift and go to state 174
    delays                         shift and go to state 176
    block_statement                shift and go to state 444
    while_statement                shift and go to state 179
    systemcall                     shift and go to state 181
    if_statement                   shift and go to state 182
    nonblocking_substitution       shift and go to state 183
    empty                          shift and go to state 184
    basic_statement                shift and go to state 314
    for_statement                  shift and go to state 186
    event_statement                shift and go to state 189
    wait_statement                 shift and go to state 190
    case_statement                 shift and go to state 191
    disable                        shift and go to state 192
    namedblock                     shift and go to state 194
    senslist                       shift and go to state 196
    single_statement               shift and go to state 197
    block                          shift and go to state 198

state 327

    (240) block -> BEGIN END .

    END             reduce using rule 240 (block -> BEGIN END .)
    INTEGER         reduce using rule 240 (block -> BEGIN END .)
    REAL            reduce using rule 240 (block -> BEGIN END .)
    PARAMETER       reduce using rule 240 (block -> BEGIN END .)
    LOCALPARAM      reduce using rule 240 (block -> BEGIN END .)
    IF              reduce using rule 240 (block -> BEGIN END .)
    CASE            reduce using rule 240 (block -> BEGIN END .)
    CASEX           reduce using rule 240 (block -> BEGIN END .)
    FOR             reduce using rule 240 (block -> BEGIN END .)
    WHILE           reduce using rule 240 (block -> BEGIN END .)
    WAIT            reduce using rule 240 (block -> BEGIN END .)
    FOREVER         reduce using rule 240 (block -> BEGIN END .)
    BEGIN           reduce using rule 240 (block -> BEGIN END .)
    FORK            reduce using rule 240 (block -> BEGIN END .)
    DELAY           reduce using rule 240 (block -> BEGIN END .)
    AT              reduce using rule 240 (block -> BEGIN END .)
    DOLLER          reduce using rule 240 (block -> BEGIN END .)
    DISABLE         reduce using rule 240 (block -> BEGIN END .)
    INPUT           reduce using rule 240 (block -> BEGIN END .)
    OUTPUT          reduce using rule 240 (block -> BEGIN END .)
    INOUT           reduce using rule 240 (block -> BEGIN END .)
    TRI             reduce using rule 240 (block -> BEGIN END .)
    REG             reduce using rule 240 (block -> BEGIN END .)
    WIRE            reduce using rule 240 (block -> BEGIN END .)
    SIGNED          reduce using rule 240 (block -> BEGIN END .)
    SUPPLY0         reduce using rule 240 (block -> BEGIN END .)
    SUPPLY1         reduce using rule 240 (block -> BEGIN END .)
    LBRACE          reduce using rule 240 (block -> BEGIN END .)
    ID              reduce using rule 240 (block -> BEGIN END .)
    SEMICOLON       reduce using rule 240 (block -> BEGIN END .)
    ENDMODULE       reduce using rule 240 (block -> BEGIN END .)
    GENERATE        reduce using rule 240 (block -> BEGIN END .)
    GENVAR          reduce using rule 240 (block -> BEGIN END .)
    ASSIGN          reduce using rule 240 (block -> BEGIN END .)
    ALWAYS          reduce using rule 240 (block -> BEGIN END .)
    INITIAL         reduce using rule 240 (block -> BEGIN END .)
    SENS_OR         reduce using rule 240 (block -> BEGIN END .)
    FUNCTION        reduce using rule 240 (block -> BEGIN END .)
    TASK            reduce using rule 240 (block -> BEGIN END .)
    LPAREN          reduce using rule 240 (block -> BEGIN END .)
    ENDGENERATE     reduce using rule 240 (block -> BEGIN END .)
    ELSE            reduce using rule 240 (block -> BEGIN END .)
    JOIN            reduce using rule 240 (block -> BEGIN END .)
    ENDTASK         reduce using rule 240 (block -> BEGIN END .)
    ENDFUNCTION     reduce using rule 240 (block -> BEGIN END .)
    ENDCASE         reduce using rule 240 (block -> BEGIN END .)
    DEFAULT         reduce using rule 240 (block -> BEGIN END .)
    MINUS           reduce using rule 240 (block -> BEGIN END .)
    PLUS            reduce using rule 240 (block -> BEGIN END .)
    LNOT            reduce using rule 240 (block -> BEGIN END .)
    NOT             reduce using rule 240 (block -> BEGIN END .)
    AND             reduce using rule 240 (block -> BEGIN END .)
    NAND            reduce using rule 240 (block -> BEGIN END .)
    NOR             reduce using rule 240 (block -> BEGIN END .)
    OR              reduce using rule 240 (block -> BEGIN END .)
    XOR             reduce using rule 240 (block -> BEGIN END .)
    XNOR            reduce using rule 240 (block -> BEGIN END .)
    INTNUMBER_DEC   reduce using rule 240 (block -> BEGIN END .)
    SIGNED_INTNUMBER_DEC reduce using rule 240 (block -> BEGIN END .)
    INTNUMBER_BIN   reduce using rule 240 (block -> BEGIN END .)
    SIGNED_INTNUMBER_BIN reduce using rule 240 (block -> BEGIN END .)
    INTNUMBER_OCT   reduce using rule 240 (block -> BEGIN END .)
    SIGNED_INTNUMBER_OCT reduce using rule 240 (block -> BEGIN END .)
    INTNUMBER_HEX   reduce using rule 240 (block -> BEGIN END .)
    SIGNED_INTNUMBER_HEX reduce using rule 240 (block -> BEGIN END .)
    FLOATNUMBER     reduce using rule 240 (block -> BEGIN END .)
    STRING_LITERAL  reduce using rule 240 (block -> BEGIN END .)


state 328

    (231) blocking_substitution -> delays lvalue . EQUALS delays rvalue SEMICOLON
    (233) nonblocking_substitution -> delays lvalue . LE delays rvalue SEMICOLON

    EQUALS          shift and go to state 456
    LE              shift and go to state 455


state 329

    (258) if_statement -> delays IF . LPAREN cond RPAREN true_statement ELSE else_statement
    (259) if_statement -> delays IF . LPAREN cond RPAREN true_statement

    LPAREN          shift and go to state 457


state 330

    (275) casex_statement -> CASEX LPAREN . case_comp RPAREN casecontent_statements ENDCASE
    (276) case_comp -> . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    pointer                        shift and go to state 31
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    case_comp                      shift and go to state 458
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    expression                     shift and go to state 452
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 331

    (389) disable -> DISABLE ID .

    SEMICOLON       reduce using rule 389 (disable -> DISABLE ID .)


state 332

    (391) single_statement -> systemcall SEMICOLON .

    ENDMODULE       reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    GENERATE        reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    INTEGER         reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    REAL            reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    PARAMETER       reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    LOCALPARAM      reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    GENVAR          reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    ASSIGN          reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    ALWAYS          reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    INITIAL         reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    ID              reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    SENS_OR         reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    FUNCTION        reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    TASK            reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    LPAREN          reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    INPUT           reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    OUTPUT          reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    INOUT           reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    TRI             reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    REG             reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    WIRE            reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    SIGNED          reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    SUPPLY0         reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    SUPPLY1         reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    ENDGENERATE     reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    IF              reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    FOR             reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    ELSE            reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    END             reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    JOIN            reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    CASE            reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    CASEX           reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    WHILE           reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    WAIT            reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    FOREVER         reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    BEGIN           reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    FORK            reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    DELAY           reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    AT              reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    DOLLER          reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    DISABLE         reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    LBRACE          reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    SEMICOLON       reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    ENDTASK         reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    ENDFUNCTION     reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    ENDCASE         reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    DEFAULT         reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    MINUS           reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    PLUS            reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    LNOT            reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    NOT             reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    AND             reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    NAND            reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    NOR             reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    OR              reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    XOR             reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    XNOR            reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    INTNUMBER_DEC   reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    SIGNED_INTNUMBER_DEC reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    INTNUMBER_BIN   reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    SIGNED_INTNUMBER_BIN reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    INTNUMBER_OCT   reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    SIGNED_INTNUMBER_OCT reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    INTNUMBER_HEX   reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    SIGNED_INTNUMBER_HEX reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    FLOATNUMBER     reduce using rule 391 (single_statement -> systemcall SEMICOLON .)
    STRING_LITERAL  reduce using rule 391 (single_statement -> systemcall SEMICOLON .)


state 333

    (264) for_statement -> FOR LPAREN . forpre forcond forpost RPAREN forcontent_statement
    (265) forpre -> . blocking_substitution
    (266) forpre -> . SEMICOLON
    (231) blocking_substitution -> . delays lvalue EQUALS delays rvalue SEMICOLON
    (234) delays -> . DELAY LPAREN expression RPAREN
    (235) delays -> . DELAY identifier
    (236) delays -> . DELAY intnumber
    (237) delays -> . DELAY floatnumber
    (238) delays -> . empty
    (393) empty -> .

    SEMICOLON       shift and go to state 459
    DELAY           shift and go to state 230
    LBRACE          reduce using rule 393 (empty -> .)
    ID              reduce using rule 393 (empty -> .)

    delays                         shift and go to state 460
    blocking_substitution          shift and go to state 461
    forpre                         shift and go to state 462
    empty                          shift and go to state 228

state 334

    (392) single_statement -> disable SEMICOLON .

    ENDMODULE       reduce using rule 392 (single_statement -> disable SEMICOLON .)
    GENERATE        reduce using rule 392 (single_statement -> disable SEMICOLON .)
    INTEGER         reduce using rule 392 (single_statement -> disable SEMICOLON .)
    REAL            reduce using rule 392 (single_statement -> disable SEMICOLON .)
    PARAMETER       reduce using rule 392 (single_statement -> disable SEMICOLON .)
    LOCALPARAM      reduce using rule 392 (single_statement -> disable SEMICOLON .)
    GENVAR          reduce using rule 392 (single_statement -> disable SEMICOLON .)
    ASSIGN          reduce using rule 392 (single_statement -> disable SEMICOLON .)
    ALWAYS          reduce using rule 392 (single_statement -> disable SEMICOLON .)
    INITIAL         reduce using rule 392 (single_statement -> disable SEMICOLON .)
    ID              reduce using rule 392 (single_statement -> disable SEMICOLON .)
    SENS_OR         reduce using rule 392 (single_statement -> disable SEMICOLON .)
    FUNCTION        reduce using rule 392 (single_statement -> disable SEMICOLON .)
    TASK            reduce using rule 392 (single_statement -> disable SEMICOLON .)
    LPAREN          reduce using rule 392 (single_statement -> disable SEMICOLON .)
    INPUT           reduce using rule 392 (single_statement -> disable SEMICOLON .)
    OUTPUT          reduce using rule 392 (single_statement -> disable SEMICOLON .)
    INOUT           reduce using rule 392 (single_statement -> disable SEMICOLON .)
    TRI             reduce using rule 392 (single_statement -> disable SEMICOLON .)
    REG             reduce using rule 392 (single_statement -> disable SEMICOLON .)
    WIRE            reduce using rule 392 (single_statement -> disable SEMICOLON .)
    SIGNED          reduce using rule 392 (single_statement -> disable SEMICOLON .)
    SUPPLY0         reduce using rule 392 (single_statement -> disable SEMICOLON .)
    SUPPLY1         reduce using rule 392 (single_statement -> disable SEMICOLON .)
    ENDGENERATE     reduce using rule 392 (single_statement -> disable SEMICOLON .)
    IF              reduce using rule 392 (single_statement -> disable SEMICOLON .)
    FOR             reduce using rule 392 (single_statement -> disable SEMICOLON .)
    ELSE            reduce using rule 392 (single_statement -> disable SEMICOLON .)
    END             reduce using rule 392 (single_statement -> disable SEMICOLON .)
    JOIN            reduce using rule 392 (single_statement -> disable SEMICOLON .)
    CASE            reduce using rule 392 (single_statement -> disable SEMICOLON .)
    CASEX           reduce using rule 392 (single_statement -> disable SEMICOLON .)
    WHILE           reduce using rule 392 (single_statement -> disable SEMICOLON .)
    WAIT            reduce using rule 392 (single_statement -> disable SEMICOLON .)
    FOREVER         reduce using rule 392 (single_statement -> disable SEMICOLON .)
    BEGIN           reduce using rule 392 (single_statement -> disable SEMICOLON .)
    FORK            reduce using rule 392 (single_statement -> disable SEMICOLON .)
    DELAY           reduce using rule 392 (single_statement -> disable SEMICOLON .)
    AT              reduce using rule 392 (single_statement -> disable SEMICOLON .)
    DOLLER          reduce using rule 392 (single_statement -> disable SEMICOLON .)
    DISABLE         reduce using rule 392 (single_statement -> disable SEMICOLON .)
    LBRACE          reduce using rule 392 (single_statement -> disable SEMICOLON .)
    SEMICOLON       reduce using rule 392 (single_statement -> disable SEMICOLON .)
    ENDTASK         reduce using rule 392 (single_statement -> disable SEMICOLON .)
    ENDFUNCTION     reduce using rule 392 (single_statement -> disable SEMICOLON .)
    ENDCASE         reduce using rule 392 (single_statement -> disable SEMICOLON .)
    DEFAULT         reduce using rule 392 (single_statement -> disable SEMICOLON .)
    MINUS           reduce using rule 392 (single_statement -> disable SEMICOLON .)
    PLUS            reduce using rule 392 (single_statement -> disable SEMICOLON .)
    LNOT            reduce using rule 392 (single_statement -> disable SEMICOLON .)
    NOT             reduce using rule 392 (single_statement -> disable SEMICOLON .)
    AND             reduce using rule 392 (single_statement -> disable SEMICOLON .)
    NAND            reduce using rule 392 (single_statement -> disable SEMICOLON .)
    NOR             reduce using rule 392 (single_statement -> disable SEMICOLON .)
    OR              reduce using rule 392 (single_statement -> disable SEMICOLON .)
    XOR             reduce using rule 392 (single_statement -> disable SEMICOLON .)
    XNOR            reduce using rule 392 (single_statement -> disable SEMICOLON .)
    INTNUMBER_DEC   reduce using rule 392 (single_statement -> disable SEMICOLON .)
    SIGNED_INTNUMBER_DEC reduce using rule 392 (single_statement -> disable SEMICOLON .)
    INTNUMBER_BIN   reduce using rule 392 (single_statement -> disable SEMICOLON .)
    SIGNED_INTNUMBER_BIN reduce using rule 392 (single_statement -> disable SEMICOLON .)
    INTNUMBER_OCT   reduce using rule 392 (single_statement -> disable SEMICOLON .)
    SIGNED_INTNUMBER_OCT reduce using rule 392 (single_statement -> disable SEMICOLON .)
    INTNUMBER_HEX   reduce using rule 392 (single_statement -> disable SEMICOLON .)
    SIGNED_INTNUMBER_HEX reduce using rule 392 (single_statement -> disable SEMICOLON .)
    FLOATNUMBER     reduce using rule 392 (single_statement -> disable SEMICOLON .)
    STRING_LITERAL  reduce using rule 392 (single_statement -> disable SEMICOLON .)


state 335

    (210) levelsig_base -> partselect .

    RPAREN          reduce using rule 210 (levelsig_base -> partselect .)
    SENS_OR         reduce using rule 210 (levelsig_base -> partselect .)
    COMMA           reduce using rule 210 (levelsig_base -> partselect .)
    SEMICOLON       reduce using rule 210 (levelsig_base -> partselect .)
    IF              reduce using rule 210 (levelsig_base -> partselect .)
    CASE            reduce using rule 210 (levelsig_base -> partselect .)
    CASEX           reduce using rule 210 (levelsig_base -> partselect .)
    FOR             reduce using rule 210 (levelsig_base -> partselect .)
    WHILE           reduce using rule 210 (levelsig_base -> partselect .)
    WAIT            reduce using rule 210 (levelsig_base -> partselect .)
    FOREVER         reduce using rule 210 (levelsig_base -> partselect .)
    BEGIN           reduce using rule 210 (levelsig_base -> partselect .)
    FORK            reduce using rule 210 (levelsig_base -> partselect .)
    DELAY           reduce using rule 210 (levelsig_base -> partselect .)
    AT              reduce using rule 210 (levelsig_base -> partselect .)
    DOLLER          reduce using rule 210 (levelsig_base -> partselect .)
    DISABLE         reduce using rule 210 (levelsig_base -> partselect .)
    LBRACE          reduce using rule 210 (levelsig_base -> partselect .)
    ID              reduce using rule 210 (levelsig_base -> partselect .)


state 336

    (207) levelsig -> levelsig_base .

    RPAREN          reduce using rule 207 (levelsig -> levelsig_base .)
    SENS_OR         reduce using rule 207 (levelsig -> levelsig_base .)
    COMMA           reduce using rule 207 (levelsig -> levelsig_base .)
    SEMICOLON       reduce using rule 207 (levelsig -> levelsig_base .)
    IF              reduce using rule 207 (levelsig -> levelsig_base .)
    CASE            reduce using rule 207 (levelsig -> levelsig_base .)
    CASEX           reduce using rule 207 (levelsig -> levelsig_base .)
    FOR             reduce using rule 207 (levelsig -> levelsig_base .)
    WHILE           reduce using rule 207 (levelsig -> levelsig_base .)
    WAIT            reduce using rule 207 (levelsig -> levelsig_base .)
    FOREVER         reduce using rule 207 (levelsig -> levelsig_base .)
    BEGIN           reduce using rule 207 (levelsig -> levelsig_base .)
    FORK            reduce using rule 207 (levelsig -> levelsig_base .)
    DELAY           reduce using rule 207 (levelsig -> levelsig_base .)
    AT              reduce using rule 207 (levelsig -> levelsig_base .)
    DOLLER          reduce using rule 207 (levelsig -> levelsig_base .)
    DISABLE         reduce using rule 207 (levelsig -> levelsig_base .)
    LBRACE          reduce using rule 207 (levelsig -> levelsig_base .)
    ID              reduce using rule 207 (levelsig -> levelsig_base .)


state 337

    (205) senslist -> AT levelsig .

    SEMICOLON       reduce using rule 205 (senslist -> AT levelsig .)
    IF              reduce using rule 205 (senslist -> AT levelsig .)
    CASE            reduce using rule 205 (senslist -> AT levelsig .)
    CASEX           reduce using rule 205 (senslist -> AT levelsig .)
    FOR             reduce using rule 205 (senslist -> AT levelsig .)
    WHILE           reduce using rule 205 (senslist -> AT levelsig .)
    WAIT            reduce using rule 205 (senslist -> AT levelsig .)
    FOREVER         reduce using rule 205 (senslist -> AT levelsig .)
    BEGIN           reduce using rule 205 (senslist -> AT levelsig .)
    FORK            reduce using rule 205 (senslist -> AT levelsig .)
    DELAY           reduce using rule 205 (senslist -> AT levelsig .)
    AT              reduce using rule 205 (senslist -> AT levelsig .)
    DOLLER          reduce using rule 205 (senslist -> AT levelsig .)
    DISABLE         reduce using rule 205 (senslist -> AT levelsig .)
    LBRACE          reduce using rule 205 (senslist -> AT levelsig .)
    ID              reduce using rule 205 (senslist -> AT levelsig .)


state 338

    (214) senslist -> AT TIMES .

    SEMICOLON       reduce using rule 214 (senslist -> AT TIMES .)
    IF              reduce using rule 214 (senslist -> AT TIMES .)
    CASE            reduce using rule 214 (senslist -> AT TIMES .)
    CASEX           reduce using rule 214 (senslist -> AT TIMES .)
    FOR             reduce using rule 214 (senslist -> AT TIMES .)
    WHILE           reduce using rule 214 (senslist -> AT TIMES .)
    WAIT            reduce using rule 214 (senslist -> AT TIMES .)
    FOREVER         reduce using rule 214 (senslist -> AT TIMES .)
    BEGIN           reduce using rule 214 (senslist -> AT TIMES .)
    FORK            reduce using rule 214 (senslist -> AT TIMES .)
    DELAY           reduce using rule 214 (senslist -> AT TIMES .)
    AT              reduce using rule 214 (senslist -> AT TIMES .)
    DOLLER          reduce using rule 214 (senslist -> AT TIMES .)
    DISABLE         reduce using rule 214 (senslist -> AT TIMES .)
    LBRACE          reduce using rule 214 (senslist -> AT TIMES .)
    ID              reduce using rule 214 (senslist -> AT TIMES .)


state 339

    (197) senslist -> AT LPAREN . edgesigs RPAREN
    (206) senslist -> AT LPAREN . levelsigs RPAREN
    (215) senslist -> AT LPAREN . TIMES RPAREN
    (202) edgesigs -> . edgesigs SENS_OR edgesig
    (203) edgesigs -> . edgesig
    (211) levelsigs -> . levelsigs SENS_OR levelsig
    (212) levelsigs -> . levelsigs COMMA levelsig
    (213) levelsigs -> . levelsig
    (198) edgesig -> . POSEDGE edgesig_base
    (199) edgesig -> . NEGEDGE edgesig_base
    (207) levelsig -> . levelsig_base
    (208) levelsig_base -> . identifier
    (209) levelsig_base -> . pointer
    (210) levelsig_base -> . partselect
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT

    TIMES           shift and go to state 465
    POSEDGE         shift and go to state 469
    NEGEDGE         shift and go to state 467
    ID              shift and go to state 46

    edgesig                        shift and go to state 466
    partselect                     shift and go to state 335
    edgesigs                       shift and go to state 464
    levelsig_base                  shift and go to state 336
    levelsig                       shift and go to state 468
    levelsigs                      shift and go to state 463
    scope                          shift and go to state 44
    identifier                     shift and go to state 340
    pointer                        shift and go to state 341

state 340

    (208) levelsig_base -> identifier .
    (181) pointer -> identifier . LBRACKET expression RBRACKET
    (175) partselect -> identifier . LBRACKET expression COLON expression RBRACKET
    (176) partselect -> identifier . LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> identifier . LBRACKET expression MINUSCOLON expression RBRACKET
    (387) scope -> identifier . DOT

    RPAREN          reduce using rule 208 (levelsig_base -> identifier .)
    SENS_OR         reduce using rule 208 (levelsig_base -> identifier .)
    COMMA           reduce using rule 208 (levelsig_base -> identifier .)
    SEMICOLON       reduce using rule 208 (levelsig_base -> identifier .)
    IF              reduce using rule 208 (levelsig_base -> identifier .)
    CASE            reduce using rule 208 (levelsig_base -> identifier .)
    CASEX           reduce using rule 208 (levelsig_base -> identifier .)
    FOR             reduce using rule 208 (levelsig_base -> identifier .)
    WHILE           reduce using rule 208 (levelsig_base -> identifier .)
    WAIT            reduce using rule 208 (levelsig_base -> identifier .)
    FOREVER         reduce using rule 208 (levelsig_base -> identifier .)
    BEGIN           reduce using rule 208 (levelsig_base -> identifier .)
    FORK            reduce using rule 208 (levelsig_base -> identifier .)
    DELAY           reduce using rule 208 (levelsig_base -> identifier .)
    AT              reduce using rule 208 (levelsig_base -> identifier .)
    DOLLER          reduce using rule 208 (levelsig_base -> identifier .)
    DISABLE         reduce using rule 208 (levelsig_base -> identifier .)
    LBRACE          reduce using rule 208 (levelsig_base -> identifier .)
    ID              reduce using rule 208 (levelsig_base -> identifier .)
    LBRACKET        shift and go to state 470
    DOT             shift and go to state 135


state 341

    (209) levelsig_base -> pointer .
    (182) pointer -> pointer . LBRACKET expression RBRACKET
    (178) partselect -> pointer . LBRACKET expression COLON expression RBRACKET
    (179) partselect -> pointer . LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> pointer . LBRACKET expression MINUSCOLON expression RBRACKET
    (388) scope -> pointer . DOT

    RPAREN          reduce using rule 209 (levelsig_base -> pointer .)
    SENS_OR         reduce using rule 209 (levelsig_base -> pointer .)
    COMMA           reduce using rule 209 (levelsig_base -> pointer .)
    SEMICOLON       reduce using rule 209 (levelsig_base -> pointer .)
    IF              reduce using rule 209 (levelsig_base -> pointer .)
    CASE            reduce using rule 209 (levelsig_base -> pointer .)
    CASEX           reduce using rule 209 (levelsig_base -> pointer .)
    FOR             reduce using rule 209 (levelsig_base -> pointer .)
    WHILE           reduce using rule 209 (levelsig_base -> pointer .)
    WAIT            reduce using rule 209 (levelsig_base -> pointer .)
    FOREVER         reduce using rule 209 (levelsig_base -> pointer .)
    BEGIN           reduce using rule 209 (levelsig_base -> pointer .)
    FORK            reduce using rule 209 (levelsig_base -> pointer .)
    DELAY           reduce using rule 209 (levelsig_base -> pointer .)
    AT              reduce using rule 209 (levelsig_base -> pointer .)
    DOLLER          reduce using rule 209 (levelsig_base -> pointer .)
    DISABLE         reduce using rule 209 (levelsig_base -> pointer .)
    LBRACE          reduce using rule 209 (levelsig_base -> pointer .)
    ID              reduce using rule 209 (levelsig_base -> pointer .)
    LBRACKET        shift and go to state 471
    DOT             shift and go to state 119


state 342

    (256) if_statement -> IF LPAREN . cond RPAREN true_statement ELSE else_statement
    (257) if_statement -> IF LPAREN . cond RPAREN true_statement
    (260) cond -> . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    pointer                        shift and go to state 31
    systemcall                     shift and go to state 27
    stringliteral                  shift and go to state 53
    const_expression               shift and go to state 29
    cond                           shift and go to state 472
    scope                          shift and go to state 44
    functioncall                   shift and go to state 55
    identifier                     shift and go to state 57
    expression                     shift and go to state 447
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47

state 343

    (285) event_statement -> senslist SEMICOLON .

    ENDMODULE       reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    GENERATE        reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    INTEGER         reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    REAL            reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    PARAMETER       reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    LOCALPARAM      reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    GENVAR          reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    ASSIGN          reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    ALWAYS          reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    INITIAL         reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    ID              reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    SENS_OR         reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    FUNCTION        reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    TASK            reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    LPAREN          reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    INPUT           reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    OUTPUT          reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    INOUT           reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    TRI             reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    REG             reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    WIRE            reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    SIGNED          reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    SUPPLY0         reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    SUPPLY1         reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    ENDGENERATE     reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    IF              reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    FOR             reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    ELSE            reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    END             reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    JOIN            reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    CASE            reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    CASEX           reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    WHILE           reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    WAIT            reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    FOREVER         reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    BEGIN           reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    FORK            reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    DELAY           reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    AT              reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    DOLLER          reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    DISABLE         reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    LBRACE          reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    SEMICOLON       reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    ENDTASK         reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    ENDFUNCTION     reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    ENDCASE         reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    DEFAULT         reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    MINUS           reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    PLUS            reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    LNOT            reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    NOT             reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    AND             reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    NAND            reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    NOR             reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    OR              reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    XOR             reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    XNOR            reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    INTNUMBER_DEC   reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    SIGNED_INTNUMBER_DEC reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    INTNUMBER_BIN   reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    SIGNED_INTNUMBER_BIN reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    INTNUMBER_OCT   reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    SIGNED_INTNUMBER_OCT reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    INTNUMBER_HEX   reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    SIGNED_INTNUMBER_HEX reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    FLOATNUMBER     reduce using rule 285 (event_statement -> senslist SEMICOLON .)
    STRING_LITERAL  reduce using rule 285 (event_statement -> senslist SEMICOLON .)


state 344

    (230) always_statement -> basic_statement .

    ENDMODULE       reduce using rule 230 (always_statement -> basic_statement .)
    GENERATE        reduce using rule 230 (always_statement -> basic_statement .)
    INTEGER         reduce using rule 230 (always_statement -> basic_statement .)
    REAL            reduce using rule 230 (always_statement -> basic_statement .)
    PARAMETER       reduce using rule 230 (always_statement -> basic_statement .)
    LOCALPARAM      reduce using rule 230 (always_statement -> basic_statement .)
    GENVAR          reduce using rule 230 (always_statement -> basic_statement .)
    ASSIGN          reduce using rule 230 (always_statement -> basic_statement .)
    ALWAYS          reduce using rule 230 (always_statement -> basic_statement .)
    INITIAL         reduce using rule 230 (always_statement -> basic_statement .)
    ID              reduce using rule 230 (always_statement -> basic_statement .)
    SENS_OR         reduce using rule 230 (always_statement -> basic_statement .)
    FUNCTION        reduce using rule 230 (always_statement -> basic_statement .)
    TASK            reduce using rule 230 (always_statement -> basic_statement .)
    LPAREN          reduce using rule 230 (always_statement -> basic_statement .)
    INPUT           reduce using rule 230 (always_statement -> basic_statement .)
    OUTPUT          reduce using rule 230 (always_statement -> basic_statement .)
    INOUT           reduce using rule 230 (always_statement -> basic_statement .)
    TRI             reduce using rule 230 (always_statement -> basic_statement .)
    REG             reduce using rule 230 (always_statement -> basic_statement .)
    WIRE            reduce using rule 230 (always_statement -> basic_statement .)
    SIGNED          reduce using rule 230 (always_statement -> basic_statement .)
    SUPPLY0         reduce using rule 230 (always_statement -> basic_statement .)
    SUPPLY1         reduce using rule 230 (always_statement -> basic_statement .)
    ENDGENERATE     reduce using rule 230 (always_statement -> basic_statement .)
    IF              reduce using rule 230 (always_statement -> basic_statement .)
    FOR             reduce using rule 230 (always_statement -> basic_statement .)
    ELSE            reduce using rule 230 (always_statement -> basic_statement .)
    END             reduce using rule 230 (always_statement -> basic_statement .)


state 345

    (196) always -> ALWAYS senslist always_statement .

    END             reduce using rule 196 (always -> ALWAYS senslist always_statement .)
    IF              reduce using rule 196 (always -> ALWAYS senslist always_statement .)
    FOR             reduce using rule 196 (always -> ALWAYS senslist always_statement .)
    INTEGER         reduce using rule 196 (always -> ALWAYS senslist always_statement .)
    REAL            reduce using rule 196 (always -> ALWAYS senslist always_statement .)
    PARAMETER       reduce using rule 196 (always -> ALWAYS senslist always_statement .)
    LOCALPARAM      reduce using rule 196 (always -> ALWAYS senslist always_statement .)
    GENVAR          reduce using rule 196 (always -> ALWAYS senslist always_statement .)
    ASSIGN          reduce using rule 196 (always -> ALWAYS senslist always_statement .)
    ALWAYS          reduce using rule 196 (always -> ALWAYS senslist always_statement .)
    INITIAL         reduce using rule 196 (always -> ALWAYS senslist always_statement .)
    ID              reduce using rule 196 (always -> ALWAYS senslist always_statement .)
    SENS_OR         reduce using rule 196 (always -> ALWAYS senslist always_statement .)
    FUNCTION        reduce using rule 196 (always -> ALWAYS senslist always_statement .)
    TASK            reduce using rule 196 (always -> ALWAYS senslist always_statement .)
    LPAREN          reduce using rule 196 (always -> ALWAYS senslist always_statement .)
    INPUT           reduce using rule 196 (always -> ALWAYS senslist always_statement .)
    OUTPUT          reduce using rule 196 (always -> ALWAYS senslist always_statement .)
    INOUT           reduce using rule 196 (always -> ALWAYS senslist always_statement .)
    TRI             reduce using rule 196 (always -> ALWAYS senslist always_statement .)
    REG             reduce using rule 196 (always -> ALWAYS senslist always_statement .)
    WIRE            reduce using rule 196 (always -> ALWAYS senslist always_statement .)
    SIGNED          reduce using rule 196 (always -> ALWAYS senslist always_statement .)
    SUPPLY0         reduce using rule 196 (always -> ALWAYS senslist always_statement .)
    SUPPLY1         reduce using rule 196 (always -> ALWAYS senslist always_statement .)
    ELSE            reduce using rule 196 (always -> ALWAYS senslist always_statement .)
    ENDGENERATE     reduce using rule 196 (always -> ALWAYS senslist always_statement .)
    ENDMODULE       reduce using rule 196 (always -> ALWAYS senslist always_statement .)
    GENERATE        reduce using rule 196 (always -> ALWAYS senslist always_statement .)


state 346

    (323) genvarlist -> genvarlist COMMA . genvar
    (325) genvar -> . ID

    ID              shift and go to state 203

    genvar                         shift and go to state 473

state 347

    (322) genvardecl -> GENVAR genvarlist SEMICOLON .

    ELSE            reduce using rule 322 (genvardecl -> GENVAR genvarlist SEMICOLON .)
    ENDGENERATE     reduce using rule 322 (genvardecl -> GENVAR genvarlist SEMICOLON .)
    IF              reduce using rule 322 (genvardecl -> GENVAR genvarlist SEMICOLON .)
    FOR             reduce using rule 322 (genvardecl -> GENVAR genvarlist SEMICOLON .)
    INTEGER         reduce using rule 322 (genvardecl -> GENVAR genvarlist SEMICOLON .)
    REAL            reduce using rule 322 (genvardecl -> GENVAR genvarlist SEMICOLON .)
    PARAMETER       reduce using rule 322 (genvardecl -> GENVAR genvarlist SEMICOLON .)
    LOCALPARAM      reduce using rule 322 (genvardecl -> GENVAR genvarlist SEMICOLON .)
    GENVAR          reduce using rule 322 (genvardecl -> GENVAR genvarlist SEMICOLON .)
    ASSIGN          reduce using rule 322 (genvardecl -> GENVAR genvarlist SEMICOLON .)
    ALWAYS          reduce using rule 322 (genvardecl -> GENVAR genvarlist SEMICOLON .)
    INITIAL         reduce using rule 322 (genvardecl -> GENVAR genvarlist SEMICOLON .)
    ID              reduce using rule 322 (genvardecl -> GENVAR genvarlist SEMICOLON .)
    SENS_OR         reduce using rule 322 (genvardecl -> GENVAR genvarlist SEMICOLON .)
    FUNCTION        reduce using rule 322 (genvardecl -> GENVAR genvarlist SEMICOLON .)
    TASK            reduce using rule 322 (genvardecl -> GENVAR genvarlist SEMICOLON .)
    LPAREN          reduce using rule 322 (genvardecl -> GENVAR genvarlist SEMICOLON .)
    INPUT           reduce using rule 322 (genvardecl -> GENVAR genvarlist SEMICOLON .)
    OUTPUT          reduce using rule 322 (genvardecl -> GENVAR genvarlist SEMICOLON .)
    INOUT           reduce using rule 322 (genvardecl -> GENVAR genvarlist SEMICOLON .)
    TRI             reduce using rule 322 (genvardecl -> GENVAR genvarlist SEMICOLON .)
    REG             reduce using rule 322 (genvardecl -> GENVAR genvarlist SEMICOLON .)
    WIRE            reduce using rule 322 (genvardecl -> GENVAR genvarlist SEMICOLON .)
    SIGNED          reduce using rule 322 (genvardecl -> GENVAR genvarlist SEMICOLON .)
    SUPPLY0         reduce using rule 322 (genvardecl -> GENVAR genvarlist SEMICOLON .)
    SUPPLY1         reduce using rule 322 (genvardecl -> GENVAR genvarlist SEMICOLON .)
    END             reduce using rule 322 (genvardecl -> GENVAR genvarlist SEMICOLON .)
    ENDMODULE       reduce using rule 322 (genvardecl -> GENVAR genvarlist SEMICOLON .)
    GENERATE        reduce using rule 322 (genvardecl -> GENVAR genvarlist SEMICOLON .)


state 348

    (96) parameterdecl -> PARAMETER SIGNED width . param_substitution_list SEMICOLON
    (103) param_substitution_list -> . param_substitution_list COMMA param_substitution
    (104) param_substitution_list -> . param_substitution
    (105) param_substitution -> . ID EQUALS rvalue

    ID              shift and go to state 209

    param_substitution             shift and go to state 210
    param_substitution_list        shift and go to state 474

state 349

    (94) parameterdecl -> PARAMETER SIGNED param_substitution_list . SEMICOLON
    (103) param_substitution_list -> param_substitution_list . COMMA param_substitution

    SEMICOLON       shift and go to state 475
    COMMA           shift and go to state 352


state 350

    (53) width -> LBRACKET expression . COLON expression RBRACKET
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    COLON           shift and go to state 476
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147
    LT              shift and go to state 145
    GT              shift and go to state 149
    LE              shift and go to state 142
    GE              shift and go to state 153
    EQ              shift and go to state 156
    NE              shift and go to state 144
    EQL             shift and go to state 155
    NEL             shift and go to state 136
    AND             shift and go to state 157
    XOR             shift and go to state 150
    XNOR            shift and go to state 148
    OR              shift and go to state 159
    LAND            shift and go to state 154
    LOR             shift and go to state 138
    COND            shift and go to state 139


state 351

    (95) parameterdecl -> PARAMETER width param_substitution_list . SEMICOLON
    (103) param_substitution_list -> param_substitution_list . COMMA param_substitution

    SEMICOLON       shift and go to state 477
    COMMA           shift and go to state 352


state 352

    (103) param_substitution_list -> param_substitution_list COMMA . param_substitution
    (105) param_substitution -> . ID EQUALS rvalue

    ID              shift and go to state 209

    param_substitution             shift and go to state 478

state 353

    (93) parameterdecl -> PARAMETER param_substitution_list SEMICOLON .

    END             reduce using rule 93 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    INTEGER         reduce using rule 93 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    REAL            reduce using rule 93 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    PARAMETER       reduce using rule 93 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    LOCALPARAM      reduce using rule 93 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    IF              reduce using rule 93 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    CASE            reduce using rule 93 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    CASEX           reduce using rule 93 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    FOR             reduce using rule 93 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    WHILE           reduce using rule 93 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    WAIT            reduce using rule 93 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    FOREVER         reduce using rule 93 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    BEGIN           reduce using rule 93 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    FORK            reduce using rule 93 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    DELAY           reduce using rule 93 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    AT              reduce using rule 93 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    DOLLER          reduce using rule 93 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    DISABLE         reduce using rule 93 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    INPUT           reduce using rule 93 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    OUTPUT          reduce using rule 93 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    INOUT           reduce using rule 93 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    TRI             reduce using rule 93 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    REG             reduce using rule 93 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    WIRE            reduce using rule 93 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    SIGNED          reduce using rule 93 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    SUPPLY0         reduce using rule 93 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    SUPPLY1         reduce using rule 93 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    LBRACE          reduce using rule 93 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    ID              reduce using rule 93 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    SEMICOLON       reduce using rule 93 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    ELSE            reduce using rule 93 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    ENDGENERATE     reduce using rule 93 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    GENVAR          reduce using rule 93 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    ASSIGN          reduce using rule 93 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    ALWAYS          reduce using rule 93 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    INITIAL         reduce using rule 93 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    SENS_OR         reduce using rule 93 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    FUNCTION        reduce using rule 93 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    TASK            reduce using rule 93 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    LPAREN          reduce using rule 93 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    ENDMODULE       reduce using rule 93 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    GENERATE        reduce using rule 93 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)


state 354

    (97) parameterdecl -> PARAMETER INTEGER param_substitution_list . SEMICOLON
    (103) param_substitution_list -> param_substitution_list . COMMA param_substitution

    SEMICOLON       shift and go to state 479
    COMMA           shift and go to state 352


state 355

    (105) param_substitution -> ID EQUALS . rvalue
    (126) rvalue -> . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 481
    rvalue                         shift and go to state 480
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 356

    (328) generate_items -> generate_items generate_item .

    END             reduce using rule 328 (generate_items -> generate_items generate_item .)
    IF              reduce using rule 328 (generate_items -> generate_items generate_item .)
    FOR             reduce using rule 328 (generate_items -> generate_items generate_item .)
    INTEGER         reduce using rule 328 (generate_items -> generate_items generate_item .)
    REAL            reduce using rule 328 (generate_items -> generate_items generate_item .)
    PARAMETER       reduce using rule 328 (generate_items -> generate_items generate_item .)
    LOCALPARAM      reduce using rule 328 (generate_items -> generate_items generate_item .)
    GENVAR          reduce using rule 328 (generate_items -> generate_items generate_item .)
    ASSIGN          reduce using rule 328 (generate_items -> generate_items generate_item .)
    ALWAYS          reduce using rule 328 (generate_items -> generate_items generate_item .)
    INITIAL         reduce using rule 328 (generate_items -> generate_items generate_item .)
    ID              reduce using rule 328 (generate_items -> generate_items generate_item .)
    SENS_OR         reduce using rule 328 (generate_items -> generate_items generate_item .)
    FUNCTION        reduce using rule 328 (generate_items -> generate_items generate_item .)
    TASK            reduce using rule 328 (generate_items -> generate_items generate_item .)
    LPAREN          reduce using rule 328 (generate_items -> generate_items generate_item .)
    INPUT           reduce using rule 328 (generate_items -> generate_items generate_item .)
    OUTPUT          reduce using rule 328 (generate_items -> generate_items generate_item .)
    INOUT           reduce using rule 328 (generate_items -> generate_items generate_item .)
    TRI             reduce using rule 328 (generate_items -> generate_items generate_item .)
    REG             reduce using rule 328 (generate_items -> generate_items generate_item .)
    WIRE            reduce using rule 328 (generate_items -> generate_items generate_item .)
    SIGNED          reduce using rule 328 (generate_items -> generate_items generate_item .)
    SUPPLY0         reduce using rule 328 (generate_items -> generate_items generate_item .)
    SUPPLY1         reduce using rule 328 (generate_items -> generate_items generate_item .)
    ENDGENERATE     reduce using rule 328 (generate_items -> generate_items generate_item .)


state 357

    (326) generate -> GENERATE generate_items ENDGENERATE .

    ENDMODULE       reduce using rule 326 (generate -> GENERATE generate_items ENDGENERATE .)
    GENERATE        reduce using rule 326 (generate -> GENERATE generate_items ENDGENERATE .)
    INTEGER         reduce using rule 326 (generate -> GENERATE generate_items ENDGENERATE .)
    REAL            reduce using rule 326 (generate -> GENERATE generate_items ENDGENERATE .)
    PARAMETER       reduce using rule 326 (generate -> GENERATE generate_items ENDGENERATE .)
    LOCALPARAM      reduce using rule 326 (generate -> GENERATE generate_items ENDGENERATE .)
    GENVAR          reduce using rule 326 (generate -> GENERATE generate_items ENDGENERATE .)
    ASSIGN          reduce using rule 326 (generate -> GENERATE generate_items ENDGENERATE .)
    ALWAYS          reduce using rule 326 (generate -> GENERATE generate_items ENDGENERATE .)
    INITIAL         reduce using rule 326 (generate -> GENERATE generate_items ENDGENERATE .)
    ID              reduce using rule 326 (generate -> GENERATE generate_items ENDGENERATE .)
    SENS_OR         reduce using rule 326 (generate -> GENERATE generate_items ENDGENERATE .)
    FUNCTION        reduce using rule 326 (generate -> GENERATE generate_items ENDGENERATE .)
    TASK            reduce using rule 326 (generate -> GENERATE generate_items ENDGENERATE .)
    LPAREN          reduce using rule 326 (generate -> GENERATE generate_items ENDGENERATE .)
    INPUT           reduce using rule 326 (generate -> GENERATE generate_items ENDGENERATE .)
    OUTPUT          reduce using rule 326 (generate -> GENERATE generate_items ENDGENERATE .)
    INOUT           reduce using rule 326 (generate -> GENERATE generate_items ENDGENERATE .)
    TRI             reduce using rule 326 (generate -> GENERATE generate_items ENDGENERATE .)
    REG             reduce using rule 326 (generate -> GENERATE generate_items ENDGENERATE .)
    WIRE            reduce using rule 326 (generate -> GENERATE generate_items ENDGENERATE .)
    SIGNED          reduce using rule 326 (generate -> GENERATE generate_items ENDGENERATE .)
    SUPPLY0         reduce using rule 326 (generate -> GENERATE generate_items ENDGENERATE .)
    SUPPLY1         reduce using rule 326 (generate -> GENERATE generate_items ENDGENERATE .)


state 358

    (341) generate_for -> FOR LPAREN . forpre forcond forpost RPAREN generate_forcontent
    (265) forpre -> . blocking_substitution
    (266) forpre -> . SEMICOLON
    (231) blocking_substitution -> . delays lvalue EQUALS delays rvalue SEMICOLON
    (234) delays -> . DELAY LPAREN expression RPAREN
    (235) delays -> . DELAY identifier
    (236) delays -> . DELAY intnumber
    (237) delays -> . DELAY floatnumber
    (238) delays -> . empty
    (393) empty -> .

    SEMICOLON       shift and go to state 459
    DELAY           shift and go to state 230
    LBRACE          reduce using rule 393 (empty -> .)
    ID              reduce using rule 393 (empty -> .)

    delays                         shift and go to state 460
    blocking_substitution          shift and go to state 461
    forpre                         shift and go to state 482
    empty                          shift and go to state 228

state 359

    (335) generate_if -> IF LPAREN . cond RPAREN gif_true_item ELSE gif_false_item
    (336) generate_if -> IF LPAREN . cond RPAREN gif_true_item
    (260) cond -> . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    pointer                        shift and go to state 31
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    cond                           shift and go to state 483
    scope                          shift and go to state 44
    functioncall                   shift and go to state 55
    identifier                     shift and go to state 57
    expression                     shift and go to state 447
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 360

    (85) integerdecl -> INTEGER SIGNED integernamelist . SEMICOLON
    (86) integernamelist -> integernamelist . COMMA integername

    SEMICOLON       shift and go to state 484
    COMMA           shift and go to state 361


state 361

    (86) integernamelist -> integernamelist COMMA . integername
    (88) integername -> . ID

    ID              shift and go to state 222

    integername                    shift and go to state 485

state 362

    (84) integerdecl -> INTEGER integernamelist SEMICOLON .

    END             reduce using rule 84 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    IF              reduce using rule 84 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    FOR             reduce using rule 84 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    INTEGER         reduce using rule 84 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    REAL            reduce using rule 84 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    PARAMETER       reduce using rule 84 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    LOCALPARAM      reduce using rule 84 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    GENVAR          reduce using rule 84 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    ASSIGN          reduce using rule 84 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    ALWAYS          reduce using rule 84 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    INITIAL         reduce using rule 84 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    ID              reduce using rule 84 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    SENS_OR         reduce using rule 84 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    FUNCTION        reduce using rule 84 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    TASK            reduce using rule 84 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    LPAREN          reduce using rule 84 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    INPUT           reduce using rule 84 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    OUTPUT          reduce using rule 84 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    INOUT           reduce using rule 84 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    TRI             reduce using rule 84 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    REG             reduce using rule 84 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    WIRE            reduce using rule 84 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    SIGNED          reduce using rule 84 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    SUPPLY0         reduce using rule 84 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    SUPPLY1         reduce using rule 84 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    WHILE           reduce using rule 84 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    CASE            reduce using rule 84 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    CASEX           reduce using rule 84 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    BEGIN           reduce using rule 84 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    DELAY           reduce using rule 84 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    LBRACE          reduce using rule 84 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    ELSE            reduce using rule 84 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    ENDGENERATE     reduce using rule 84 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    ENDMODULE       reduce using rule 84 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    GENERATE        reduce using rule 84 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    WAIT            reduce using rule 84 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    FOREVER         reduce using rule 84 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    FORK            reduce using rule 84 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    AT              reduce using rule 84 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    DOLLER          reduce using rule 84 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    DISABLE         reduce using rule 84 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    SEMICOLON       reduce using rule 84 (integerdecl -> INTEGER integernamelist SEMICOLON .)


state 363

    (108) lpartselect -> pointer LBRACKET . expression COLON expression RBRACKET
    (109) lpartselect -> pointer LBRACKET . expression PLUSCOLON expression RBRACKET
    (110) lpartselect -> pointer LBRACKET . expression MINUSCOLON expression RBRACKET
    (182) pointer -> pointer LBRACKET . expression RBRACKET
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    pointer                        shift and go to state 31
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    expression                     shift and go to state 486
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 364

    (106) assignment -> ASSIGN lvalue EQUALS . rvalue SEMICOLON
    (126) rvalue -> . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    rvalue                         shift and go to state 487
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    pointer                        shift and go to state 31
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    expression                     shift and go to state 481
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 365

    (107) assignment -> ASSIGN delays lvalue . EQUALS delays rvalue SEMICOLON

    EQUALS          shift and go to state 488


state 366

    (388) scope -> pointer . DOT
    (182) pointer -> pointer . LBRACKET expression RBRACKET

    DOT             shift and go to state 119
    LBRACKET        shift and go to state 489


state 367

    (237) delays -> DELAY floatnumber .

    IF              reduce using rule 237 (delays -> DELAY floatnumber .)
    LBRACE          reduce using rule 237 (delays -> DELAY floatnumber .)
    ID              reduce using rule 237 (delays -> DELAY floatnumber .)
    MINUS           reduce using rule 237 (delays -> DELAY floatnumber .)
    PLUS            reduce using rule 237 (delays -> DELAY floatnumber .)
    LNOT            reduce using rule 237 (delays -> DELAY floatnumber .)
    NOT             reduce using rule 237 (delays -> DELAY floatnumber .)
    AND             reduce using rule 237 (delays -> DELAY floatnumber .)
    NAND            reduce using rule 237 (delays -> DELAY floatnumber .)
    NOR             reduce using rule 237 (delays -> DELAY floatnumber .)
    OR              reduce using rule 237 (delays -> DELAY floatnumber .)
    XOR             reduce using rule 237 (delays -> DELAY floatnumber .)
    XNOR            reduce using rule 237 (delays -> DELAY floatnumber .)
    LPAREN          reduce using rule 237 (delays -> DELAY floatnumber .)
    DOLLER          reduce using rule 237 (delays -> DELAY floatnumber .)
    INTNUMBER_DEC   reduce using rule 237 (delays -> DELAY floatnumber .)
    SIGNED_INTNUMBER_DEC reduce using rule 237 (delays -> DELAY floatnumber .)
    INTNUMBER_BIN   reduce using rule 237 (delays -> DELAY floatnumber .)
    SIGNED_INTNUMBER_BIN reduce using rule 237 (delays -> DELAY floatnumber .)
    INTNUMBER_OCT   reduce using rule 237 (delays -> DELAY floatnumber .)
    SIGNED_INTNUMBER_OCT reduce using rule 237 (delays -> DELAY floatnumber .)
    INTNUMBER_HEX   reduce using rule 237 (delays -> DELAY floatnumber .)
    SIGNED_INTNUMBER_HEX reduce using rule 237 (delays -> DELAY floatnumber .)
    FLOATNUMBER     reduce using rule 237 (delays -> DELAY floatnumber .)
    STRING_LITERAL  reduce using rule 237 (delays -> DELAY floatnumber .)


state 368

    (236) delays -> DELAY intnumber .

    IF              reduce using rule 236 (delays -> DELAY intnumber .)
    LBRACE          reduce using rule 236 (delays -> DELAY intnumber .)
    ID              reduce using rule 236 (delays -> DELAY intnumber .)
    MINUS           reduce using rule 236 (delays -> DELAY intnumber .)
    PLUS            reduce using rule 236 (delays -> DELAY intnumber .)
    LNOT            reduce using rule 236 (delays -> DELAY intnumber .)
    NOT             reduce using rule 236 (delays -> DELAY intnumber .)
    AND             reduce using rule 236 (delays -> DELAY intnumber .)
    NAND            reduce using rule 236 (delays -> DELAY intnumber .)
    NOR             reduce using rule 236 (delays -> DELAY intnumber .)
    OR              reduce using rule 236 (delays -> DELAY intnumber .)
    XOR             reduce using rule 236 (delays -> DELAY intnumber .)
    XNOR            reduce using rule 236 (delays -> DELAY intnumber .)
    LPAREN          reduce using rule 236 (delays -> DELAY intnumber .)
    DOLLER          reduce using rule 236 (delays -> DELAY intnumber .)
    INTNUMBER_DEC   reduce using rule 236 (delays -> DELAY intnumber .)
    SIGNED_INTNUMBER_DEC reduce using rule 236 (delays -> DELAY intnumber .)
    INTNUMBER_BIN   reduce using rule 236 (delays -> DELAY intnumber .)
    SIGNED_INTNUMBER_BIN reduce using rule 236 (delays -> DELAY intnumber .)
    INTNUMBER_OCT   reduce using rule 236 (delays -> DELAY intnumber .)
    SIGNED_INTNUMBER_OCT reduce using rule 236 (delays -> DELAY intnumber .)
    INTNUMBER_HEX   reduce using rule 236 (delays -> DELAY intnumber .)
    SIGNED_INTNUMBER_HEX reduce using rule 236 (delays -> DELAY intnumber .)
    FLOATNUMBER     reduce using rule 236 (delays -> DELAY intnumber .)
    STRING_LITERAL  reduce using rule 236 (delays -> DELAY intnumber .)


state 369

    (234) delays -> DELAY LPAREN . expression RPAREN
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 490
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 370

    (235) delays -> DELAY identifier .
    (387) scope -> identifier . DOT
    (181) pointer -> identifier . LBRACKET expression RBRACKET

    IF              reduce using rule 235 (delays -> DELAY identifier .)
    LBRACE          reduce using rule 235 (delays -> DELAY identifier .)
    ID              reduce using rule 235 (delays -> DELAY identifier .)
    MINUS           reduce using rule 235 (delays -> DELAY identifier .)
    PLUS            reduce using rule 235 (delays -> DELAY identifier .)
    LNOT            reduce using rule 235 (delays -> DELAY identifier .)
    NOT             reduce using rule 235 (delays -> DELAY identifier .)
    AND             reduce using rule 235 (delays -> DELAY identifier .)
    NAND            reduce using rule 235 (delays -> DELAY identifier .)
    NOR             reduce using rule 235 (delays -> DELAY identifier .)
    OR              reduce using rule 235 (delays -> DELAY identifier .)
    XOR             reduce using rule 235 (delays -> DELAY identifier .)
    XNOR            reduce using rule 235 (delays -> DELAY identifier .)
    LPAREN          reduce using rule 235 (delays -> DELAY identifier .)
    DOLLER          reduce using rule 235 (delays -> DELAY identifier .)
    INTNUMBER_DEC   reduce using rule 235 (delays -> DELAY identifier .)
    SIGNED_INTNUMBER_DEC reduce using rule 235 (delays -> DELAY identifier .)
    INTNUMBER_BIN   reduce using rule 235 (delays -> DELAY identifier .)
    SIGNED_INTNUMBER_BIN reduce using rule 235 (delays -> DELAY identifier .)
    INTNUMBER_OCT   reduce using rule 235 (delays -> DELAY identifier .)
    SIGNED_INTNUMBER_OCT reduce using rule 235 (delays -> DELAY identifier .)
    INTNUMBER_HEX   reduce using rule 235 (delays -> DELAY identifier .)
    SIGNED_INTNUMBER_HEX reduce using rule 235 (delays -> DELAY identifier .)
    FLOATNUMBER     reduce using rule 235 (delays -> DELAY identifier .)
    STRING_LITERAL  reduce using rule 235 (delays -> DELAY identifier .)
    DOT             shift and go to state 135
    LBRACKET        shift and go to state 491


state 371

    (119) lconcat_one -> lpartselect .

    RBRACE          reduce using rule 119 (lconcat_one -> lpartselect .)
    COMMA           reduce using rule 119 (lconcat_one -> lpartselect .)


state 372

    (121) lconcat_one -> lconcat .

    RBRACE          reduce using rule 121 (lconcat_one -> lconcat .)
    COMMA           reduce using rule 121 (lconcat_one -> lconcat .)


state 373

    (117) lconcatlist -> lconcat_one .

    RBRACE          reduce using rule 117 (lconcatlist -> lconcat_one .)
    COMMA           reduce using rule 117 (lconcatlist -> lconcat_one .)


state 374

    (120) lconcat_one -> lpointer .

    RBRACE          reduce using rule 120 (lconcat_one -> lpointer .)
    COMMA           reduce using rule 120 (lconcat_one -> lpointer .)


state 375

    (118) lconcat_one -> identifier .
    (111) lpartselect -> identifier . LBRACKET expression COLON expression RBRACKET
    (112) lpartselect -> identifier . LBRACKET expression PLUSCOLON expression RBRACKET
    (113) lpartselect -> identifier . LBRACKET expression MINUSCOLON expression RBRACKET
    (387) scope -> identifier . DOT
    (181) pointer -> identifier . LBRACKET expression RBRACKET

    RBRACE          reduce using rule 118 (lconcat_one -> identifier .)
    COMMA           reduce using rule 118 (lconcat_one -> identifier .)
    LBRACKET        shift and go to state 378
    DOT             shift and go to state 135


state 376

    (108) lpartselect -> pointer . LBRACKET expression COLON expression RBRACKET
    (109) lpartselect -> pointer . LBRACKET expression PLUSCOLON expression RBRACKET
    (110) lpartselect -> pointer . LBRACKET expression MINUSCOLON expression RBRACKET
    (114) lpointer -> pointer .
    (388) scope -> pointer . DOT
    (182) pointer -> pointer . LBRACKET expression RBRACKET

    LBRACKET        shift and go to state 363
    RBRACE          reduce using rule 114 (lpointer -> pointer .)
    COMMA           reduce using rule 114 (lpointer -> pointer .)
    DOT             shift and go to state 119


state 377

    (115) lconcat -> LBRACE lconcatlist . RBRACE
    (116) lconcatlist -> lconcatlist . COMMA lconcat_one

    RBRACE          shift and go to state 493
    COMMA           shift and go to state 492


state 378

    (111) lpartselect -> identifier LBRACKET . expression COLON expression RBRACKET
    (112) lpartselect -> identifier LBRACKET . expression PLUSCOLON expression RBRACKET
    (113) lpartselect -> identifier LBRACKET . expression MINUSCOLON expression RBRACKET
    (181) pointer -> identifier LBRACKET . expression RBRACKET
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 494
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 379

    (83) declassign_element -> delays ID . EQUALS delays rvalue

    EQUALS          shift and go to state 495


state 380

    (81) declassign -> sigtypes width declassign_element . SEMICOLON

    SEMICOLON       shift and go to state 496


state 381

    (75) decl -> sigtypes width declnamelist . SEMICOLON
    (76) declnamelist -> declnamelist . COMMA declname

    SEMICOLON       shift and go to state 497
    COMMA           shift and go to state 382


state 382

    (76) declnamelist -> declnamelist COMMA . declname
    (78) declname -> . ID
    (79) declname -> . ID length

    ID              shift and go to state 499

    declname                       shift and go to state 498

state 383

    (74) decl -> sigtypes declnamelist SEMICOLON .

    ENDMODULE       reduce using rule 74 (decl -> sigtypes declnamelist SEMICOLON .)
    GENERATE        reduce using rule 74 (decl -> sigtypes declnamelist SEMICOLON .)
    INTEGER         reduce using rule 74 (decl -> sigtypes declnamelist SEMICOLON .)
    REAL            reduce using rule 74 (decl -> sigtypes declnamelist SEMICOLON .)
    PARAMETER       reduce using rule 74 (decl -> sigtypes declnamelist SEMICOLON .)
    LOCALPARAM      reduce using rule 74 (decl -> sigtypes declnamelist SEMICOLON .)
    GENVAR          reduce using rule 74 (decl -> sigtypes declnamelist SEMICOLON .)
    ASSIGN          reduce using rule 74 (decl -> sigtypes declnamelist SEMICOLON .)
    ALWAYS          reduce using rule 74 (decl -> sigtypes declnamelist SEMICOLON .)
    INITIAL         reduce using rule 74 (decl -> sigtypes declnamelist SEMICOLON .)
    ID              reduce using rule 74 (decl -> sigtypes declnamelist SEMICOLON .)
    SENS_OR         reduce using rule 74 (decl -> sigtypes declnamelist SEMICOLON .)
    FUNCTION        reduce using rule 74 (decl -> sigtypes declnamelist SEMICOLON .)
    TASK            reduce using rule 74 (decl -> sigtypes declnamelist SEMICOLON .)
    LPAREN          reduce using rule 74 (decl -> sigtypes declnamelist SEMICOLON .)
    INPUT           reduce using rule 74 (decl -> sigtypes declnamelist SEMICOLON .)
    OUTPUT          reduce using rule 74 (decl -> sigtypes declnamelist SEMICOLON .)
    INOUT           reduce using rule 74 (decl -> sigtypes declnamelist SEMICOLON .)
    TRI             reduce using rule 74 (decl -> sigtypes declnamelist SEMICOLON .)
    REG             reduce using rule 74 (decl -> sigtypes declnamelist SEMICOLON .)
    WIRE            reduce using rule 74 (decl -> sigtypes declnamelist SEMICOLON .)
    SIGNED          reduce using rule 74 (decl -> sigtypes declnamelist SEMICOLON .)
    SUPPLY0         reduce using rule 74 (decl -> sigtypes declnamelist SEMICOLON .)
    SUPPLY1         reduce using rule 74 (decl -> sigtypes declnamelist SEMICOLON .)
    IF              reduce using rule 74 (decl -> sigtypes declnamelist SEMICOLON .)
    FOR             reduce using rule 74 (decl -> sigtypes declnamelist SEMICOLON .)
    WHILE           reduce using rule 74 (decl -> sigtypes declnamelist SEMICOLON .)
    CASE            reduce using rule 74 (decl -> sigtypes declnamelist SEMICOLON .)
    CASEX           reduce using rule 74 (decl -> sigtypes declnamelist SEMICOLON .)
    BEGIN           reduce using rule 74 (decl -> sigtypes declnamelist SEMICOLON .)
    DELAY           reduce using rule 74 (decl -> sigtypes declnamelist SEMICOLON .)
    LBRACE          reduce using rule 74 (decl -> sigtypes declnamelist SEMICOLON .)
    ELSE            reduce using rule 74 (decl -> sigtypes declnamelist SEMICOLON .)
    ENDGENERATE     reduce using rule 74 (decl -> sigtypes declnamelist SEMICOLON .)
    END             reduce using rule 74 (decl -> sigtypes declnamelist SEMICOLON .)
    WAIT            reduce using rule 74 (decl -> sigtypes declnamelist SEMICOLON .)
    FOREVER         reduce using rule 74 (decl -> sigtypes declnamelist SEMICOLON .)
    FORK            reduce using rule 74 (decl -> sigtypes declnamelist SEMICOLON .)
    AT              reduce using rule 74 (decl -> sigtypes declnamelist SEMICOLON .)
    DOLLER          reduce using rule 74 (decl -> sigtypes declnamelist SEMICOLON .)
    DISABLE         reduce using rule 74 (decl -> sigtypes declnamelist SEMICOLON .)
    SEMICOLON       reduce using rule 74 (decl -> sigtypes declnamelist SEMICOLON .)


state 384

    (80) declassign -> sigtypes declassign_element SEMICOLON .

    END             reduce using rule 80 (declassign -> sigtypes declassign_element SEMICOLON .)
    IF              reduce using rule 80 (declassign -> sigtypes declassign_element SEMICOLON .)
    FOR             reduce using rule 80 (declassign -> sigtypes declassign_element SEMICOLON .)
    INTEGER         reduce using rule 80 (declassign -> sigtypes declassign_element SEMICOLON .)
    REAL            reduce using rule 80 (declassign -> sigtypes declassign_element SEMICOLON .)
    PARAMETER       reduce using rule 80 (declassign -> sigtypes declassign_element SEMICOLON .)
    LOCALPARAM      reduce using rule 80 (declassign -> sigtypes declassign_element SEMICOLON .)
    GENVAR          reduce using rule 80 (declassign -> sigtypes declassign_element SEMICOLON .)
    ASSIGN          reduce using rule 80 (declassign -> sigtypes declassign_element SEMICOLON .)
    ALWAYS          reduce using rule 80 (declassign -> sigtypes declassign_element SEMICOLON .)
    INITIAL         reduce using rule 80 (declassign -> sigtypes declassign_element SEMICOLON .)
    ID              reduce using rule 80 (declassign -> sigtypes declassign_element SEMICOLON .)
    SENS_OR         reduce using rule 80 (declassign -> sigtypes declassign_element SEMICOLON .)
    FUNCTION        reduce using rule 80 (declassign -> sigtypes declassign_element SEMICOLON .)
    TASK            reduce using rule 80 (declassign -> sigtypes declassign_element SEMICOLON .)
    LPAREN          reduce using rule 80 (declassign -> sigtypes declassign_element SEMICOLON .)
    INPUT           reduce using rule 80 (declassign -> sigtypes declassign_element SEMICOLON .)
    OUTPUT          reduce using rule 80 (declassign -> sigtypes declassign_element SEMICOLON .)
    INOUT           reduce using rule 80 (declassign -> sigtypes declassign_element SEMICOLON .)
    TRI             reduce using rule 80 (declassign -> sigtypes declassign_element SEMICOLON .)
    REG             reduce using rule 80 (declassign -> sigtypes declassign_element SEMICOLON .)
    WIRE            reduce using rule 80 (declassign -> sigtypes declassign_element SEMICOLON .)
    SIGNED          reduce using rule 80 (declassign -> sigtypes declassign_element SEMICOLON .)
    SUPPLY0         reduce using rule 80 (declassign -> sigtypes declassign_element SEMICOLON .)
    SUPPLY1         reduce using rule 80 (declassign -> sigtypes declassign_element SEMICOLON .)
    ELSE            reduce using rule 80 (declassign -> sigtypes declassign_element SEMICOLON .)
    ENDGENERATE     reduce using rule 80 (declassign -> sigtypes declassign_element SEMICOLON .)
    ENDMODULE       reduce using rule 80 (declassign -> sigtypes declassign_element SEMICOLON .)
    GENERATE        reduce using rule 80 (declassign -> sigtypes declassign_element SEMICOLON .)


state 385

    (82) declassign_element -> ID EQUALS . rvalue
    (126) rvalue -> . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 481
    rvalue                         shift and go to state 500
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 386

    (54) length -> LBRACKET . expression COLON expression RBRACKET
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 501
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 387

    (79) declname -> ID length .

    SEMICOLON       reduce using rule 79 (declname -> ID length .)
    COMMA           reduce using rule 79 (declname -> ID length .)


state 388

    (370) task -> TASK ID SEMICOLON . task_statement ENDTASK
    (371) task_statement -> . taskvardecls task_calc
    (372) taskvardecls -> . taskvardecls taskvardecl
    (373) taskvardecls -> . taskvardecl
    (374) taskvardecls -> . empty
    (375) taskvardecl -> . decl
    (376) taskvardecl -> . integerdecl
    (393) empty -> .
    (74) decl -> . sigtypes declnamelist SEMICOLON
    (75) decl -> . sigtypes width declnamelist SEMICOLON
    (84) integerdecl -> . INTEGER integernamelist SEMICOLON
    (85) integerdecl -> . INTEGER SIGNED integernamelist SEMICOLON
    (35) sigtypes -> . sigtypes sigtype
    (36) sigtypes -> . sigtype
    (37) sigtype -> . INPUT
    (38) sigtype -> . OUTPUT
    (39) sigtype -> . INOUT
    (40) sigtype -> . TRI
    (41) sigtype -> . REG
    (42) sigtype -> . WIRE
    (43) sigtype -> . SIGNED
    (44) sigtype -> . SUPPLY0
    (45) sigtype -> . SUPPLY1

  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for OUTPUT resolved as shift
  ! shift/reduce conflict for INOUT resolved as shift
  ! shift/reduce conflict for TRI resolved as shift
  ! shift/reduce conflict for REG resolved as shift
  ! shift/reduce conflict for WIRE resolved as shift
  ! shift/reduce conflict for SIGNED resolved as shift
  ! shift/reduce conflict for SUPPLY0 resolved as shift
  ! shift/reduce conflict for SUPPLY1 resolved as shift
    IF              reduce using rule 393 (empty -> .)
    FOR             reduce using rule 393 (empty -> .)
    WHILE           reduce using rule 393 (empty -> .)
    CASE            reduce using rule 393 (empty -> .)
    CASEX           reduce using rule 393 (empty -> .)
    BEGIN           reduce using rule 393 (empty -> .)
    DELAY           reduce using rule 393 (empty -> .)
    LBRACE          reduce using rule 393 (empty -> .)
    ID              reduce using rule 393 (empty -> .)
    INTEGER         shift and go to state 83
    INPUT           shift and go to state 91
    OUTPUT          shift and go to state 96
    INOUT           shift and go to state 72
    TRI             shift and go to state 89
    REG             shift and go to state 67
    WIRE            shift and go to state 104
    SIGNED          shift and go to state 98
    SUPPLY0         shift and go to state 79
    SUPPLY1         shift and go to state 80

  ! INTEGER         [ reduce using rule 393 (empty -> .) ]
  ! INPUT           [ reduce using rule 393 (empty -> .) ]
  ! OUTPUT          [ reduce using rule 393 (empty -> .) ]
  ! INOUT           [ reduce using rule 393 (empty -> .) ]
  ! TRI             [ reduce using rule 393 (empty -> .) ]
  ! REG             [ reduce using rule 393 (empty -> .) ]
  ! WIRE            [ reduce using rule 393 (empty -> .) ]
  ! SIGNED          [ reduce using rule 393 (empty -> .) ]
  ! SUPPLY0         [ reduce using rule 393 (empty -> .) ]
  ! SUPPLY1         [ reduce using rule 393 (empty -> .) ]

    taskvardecls                   shift and go to state 506
    task_statement                 shift and go to state 507
    sigtypes                       shift and go to state 504
    taskvardecl                    shift and go to state 508
    sigtype                        shift and go to state 75
    decl                           shift and go to state 502
    integerdecl                    shift and go to state 503
    empty                          shift and go to state 505

state 389

    (298) instance_bodylist_noname -> instance_bodylist_noname COMMA . instance_body_noname
    (300) instance_body_noname -> . LPAREN instance_ports RPAREN

    LPAREN          shift and go to state 243

    instance_body_noname           shift and go to state 509

state 390

    (296) instance -> ID instance_bodylist_noname SEMICOLON .

    ENDMODULE       reduce using rule 296 (instance -> ID instance_bodylist_noname SEMICOLON .)
    GENERATE        reduce using rule 296 (instance -> ID instance_bodylist_noname SEMICOLON .)
    INTEGER         reduce using rule 296 (instance -> ID instance_bodylist_noname SEMICOLON .)
    REAL            reduce using rule 296 (instance -> ID instance_bodylist_noname SEMICOLON .)
    PARAMETER       reduce using rule 296 (instance -> ID instance_bodylist_noname SEMICOLON .)
    LOCALPARAM      reduce using rule 296 (instance -> ID instance_bodylist_noname SEMICOLON .)
    GENVAR          reduce using rule 296 (instance -> ID instance_bodylist_noname SEMICOLON .)
    ASSIGN          reduce using rule 296 (instance -> ID instance_bodylist_noname SEMICOLON .)
    ALWAYS          reduce using rule 296 (instance -> ID instance_bodylist_noname SEMICOLON .)
    INITIAL         reduce using rule 296 (instance -> ID instance_bodylist_noname SEMICOLON .)
    ID              reduce using rule 296 (instance -> ID instance_bodylist_noname SEMICOLON .)
    SENS_OR         reduce using rule 296 (instance -> ID instance_bodylist_noname SEMICOLON .)
    FUNCTION        reduce using rule 296 (instance -> ID instance_bodylist_noname SEMICOLON .)
    TASK            reduce using rule 296 (instance -> ID instance_bodylist_noname SEMICOLON .)
    LPAREN          reduce using rule 296 (instance -> ID instance_bodylist_noname SEMICOLON .)
    INPUT           reduce using rule 296 (instance -> ID instance_bodylist_noname SEMICOLON .)
    OUTPUT          reduce using rule 296 (instance -> ID instance_bodylist_noname SEMICOLON .)
    INOUT           reduce using rule 296 (instance -> ID instance_bodylist_noname SEMICOLON .)
    TRI             reduce using rule 296 (instance -> ID instance_bodylist_noname SEMICOLON .)
    REG             reduce using rule 296 (instance -> ID instance_bodylist_noname SEMICOLON .)
    WIRE            reduce using rule 296 (instance -> ID instance_bodylist_noname SEMICOLON .)
    SIGNED          reduce using rule 296 (instance -> ID instance_bodylist_noname SEMICOLON .)
    SUPPLY0         reduce using rule 296 (instance -> ID instance_bodylist_noname SEMICOLON .)
    SUPPLY1         reduce using rule 296 (instance -> ID instance_bodylist_noname SEMICOLON .)
    END             reduce using rule 296 (instance -> ID instance_bodylist_noname SEMICOLON .)
    IF              reduce using rule 296 (instance -> ID instance_bodylist_noname SEMICOLON .)
    FOR             reduce using rule 296 (instance -> ID instance_bodylist_noname SEMICOLON .)
    ELSE            reduce using rule 296 (instance -> ID instance_bodylist_noname SEMICOLON .)
    ENDGENERATE     reduce using rule 296 (instance -> ID instance_bodylist_noname SEMICOLON .)


state 391

    (290) instance -> ID parameterlist instance_bodylist . SEMICOLON
    (292) instance_bodylist -> instance_bodylist . COMMA instance_body

    SEMICOLON       shift and go to state 510
    COMMA           shift and go to state 511


state 392

    (293) instance_bodylist -> instance_body .

    SEMICOLON       reduce using rule 293 (instance_bodylist -> instance_body .)
    COMMA           reduce using rule 293 (instance_bodylist -> instance_body .)


state 393

    (294) instance_body -> ID . LPAREN instance_ports RPAREN
    (295) instance_body -> ID . width LPAREN instance_ports RPAREN
    (53) width -> . LBRACKET expression COLON expression RBRACKET

    LPAREN          shift and go to state 513
    LBRACKET        shift and go to state 205

    width                          shift and go to state 512

state 394

    (311) instance_ports -> instance_ports_list .
    (313) instance_ports_list -> instance_ports_list . COMMA instance_port_list

    RPAREN          reduce using rule 311 (instance_ports -> instance_ports_list .)
    COMMA           shift and go to state 514


state 395

    (319) instance_port_arg -> DOT . ID LPAREN identifier RPAREN
    (320) instance_port_arg -> DOT . ID LPAREN expression RPAREN
    (321) instance_port_arg -> DOT . ID LPAREN RPAREN

    ID              shift and go to state 515


state 396

    (312) instance_ports -> instance_ports_arg .
    (317) instance_ports_arg -> instance_ports_arg . COMMA instance_port_arg

    RPAREN          reduce using rule 312 (instance_ports -> instance_ports_arg .)
    COMMA           shift and go to state 516


state 397

    (300) instance_body_noname -> LPAREN instance_ports . RPAREN

    RPAREN          shift and go to state 517


state 398

    (315) instance_ports_list -> empty .

    COMMA           reduce using rule 315 (instance_ports_list -> empty .)
    RPAREN          reduce using rule 315 (instance_ports_list -> empty .)


state 399

    (314) instance_ports_list -> instance_port_list .

    COMMA           reduce using rule 314 (instance_ports_list -> instance_port_list .)
    RPAREN          reduce using rule 314 (instance_ports_list -> instance_port_list .)


state 400

    (318) instance_ports_arg -> instance_port_arg .

    COMMA           reduce using rule 318 (instance_ports_arg -> instance_port_arg .)
    RPAREN          reduce using rule 318 (instance_ports_arg -> instance_port_arg .)


state 401

    (316) instance_port_list -> expression .
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    COMMA           reduce using rule 316 (instance_port_list -> expression .)
    RPAREN          reduce using rule 316 (instance_port_list -> expression .)
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147
    LT              shift and go to state 145
    GT              shift and go to state 149
    LE              shift and go to state 142
    GE              shift and go to state 153
    EQ              shift and go to state 156
    NE              shift and go to state 144
    EQL             shift and go to state 155
    NEL             shift and go to state 136
    AND             shift and go to state 157
    XOR             shift and go to state 150
    XNOR            shift and go to state 148
    OR              shift and go to state 159
    LAND            shift and go to state 154
    LOR             shift and go to state 138
    COND            shift and go to state 139


state 402

    (301) parameterlist -> DELAY LPAREN . param_args RPAREN
    (302) parameterlist -> DELAY LPAREN . param_args_noname RPAREN
    (306) param_args -> . param_args COMMA param_arg
    (307) param_args -> . param_arg
    (308) param_args -> . empty
    (304) param_args_noname -> . param_args_noname COMMA param_arg_noname
    (305) param_args_noname -> . param_arg_noname
    (310) param_arg -> . DOT ID LPAREN expression RPAREN
    (393) empty -> .
    (309) param_arg_noname -> . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    DOT             shift and go to state 518
    RPAREN          reduce using rule 393 (empty -> .)
    COMMA           reduce using rule 393 (empty -> .)
    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    param_args_noname              shift and go to state 521
    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    param_arg                      shift and go to state 519
    concat                         shift and go to state 47
    pointer                        shift and go to state 31
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    param_args                     shift and go to state 522
    functioncall                   shift and go to state 55
    param_arg_noname               shift and go to state 523
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    expression                     shift and go to state 524
    intnumber                      shift and go to state 37
    empty                          shift and go to state 520
    stringliteral                  shift and go to state 53

state 403

    (351) function -> FUNCTION width ID . SEMICOLON function_statement ENDFUNCTION

    SEMICOLON       shift and go to state 525


state 404

    (352) function -> FUNCTION ID SEMICOLON . function_statement ENDFUNCTION
    (353) function_statement -> . funcvardecls function_calc
    (354) funcvardecls -> . funcvardecls funcvardecl
    (355) funcvardecls -> . funcvardecl
    (356) funcvardecl -> . decl
    (357) funcvardecl -> . integerdecl
    (74) decl -> . sigtypes declnamelist SEMICOLON
    (75) decl -> . sigtypes width declnamelist SEMICOLON
    (84) integerdecl -> . INTEGER integernamelist SEMICOLON
    (85) integerdecl -> . INTEGER SIGNED integernamelist SEMICOLON
    (35) sigtypes -> . sigtypes sigtype
    (36) sigtypes -> . sigtype
    (37) sigtype -> . INPUT
    (38) sigtype -> . OUTPUT
    (39) sigtype -> . INOUT
    (40) sigtype -> . TRI
    (41) sigtype -> . REG
    (42) sigtype -> . WIRE
    (43) sigtype -> . SIGNED
    (44) sigtype -> . SUPPLY0
    (45) sigtype -> . SUPPLY1

    INTEGER         shift and go to state 83
    INPUT           shift and go to state 91
    OUTPUT          shift and go to state 96
    INOUT           shift and go to state 72
    TRI             shift and go to state 89
    REG             shift and go to state 67
    WIRE            shift and go to state 104
    SIGNED          shift and go to state 98
    SUPPLY0         shift and go to state 79
    SUPPLY1         shift and go to state 80

    function_statement             shift and go to state 526
    decl                           shift and go to state 528
    sigtype                        shift and go to state 75
    funcvardecl                    shift and go to state 530
    funcvardecls                   shift and go to state 527
    sigtypes                       shift and go to state 504
    integerdecl                    shift and go to state 529

state 405

    (291) instance -> SENS_OR parameterlist instance_bodylist . SEMICOLON
    (292) instance_bodylist -> instance_bodylist . COMMA instance_body

    SEMICOLON       shift and go to state 531
    COMMA           shift and go to state 511


state 406

    (297) instance -> SENS_OR instance_bodylist_noname SEMICOLON .

    ENDMODULE       reduce using rule 297 (instance -> SENS_OR instance_bodylist_noname SEMICOLON .)
    GENERATE        reduce using rule 297 (instance -> SENS_OR instance_bodylist_noname SEMICOLON .)
    INTEGER         reduce using rule 297 (instance -> SENS_OR instance_bodylist_noname SEMICOLON .)
    REAL            reduce using rule 297 (instance -> SENS_OR instance_bodylist_noname SEMICOLON .)
    PARAMETER       reduce using rule 297 (instance -> SENS_OR instance_bodylist_noname SEMICOLON .)
    LOCALPARAM      reduce using rule 297 (instance -> SENS_OR instance_bodylist_noname SEMICOLON .)
    GENVAR          reduce using rule 297 (instance -> SENS_OR instance_bodylist_noname SEMICOLON .)
    ASSIGN          reduce using rule 297 (instance -> SENS_OR instance_bodylist_noname SEMICOLON .)
    ALWAYS          reduce using rule 297 (instance -> SENS_OR instance_bodylist_noname SEMICOLON .)
    INITIAL         reduce using rule 297 (instance -> SENS_OR instance_bodylist_noname SEMICOLON .)
    ID              reduce using rule 297 (instance -> SENS_OR instance_bodylist_noname SEMICOLON .)
    SENS_OR         reduce using rule 297 (instance -> SENS_OR instance_bodylist_noname SEMICOLON .)
    FUNCTION        reduce using rule 297 (instance -> SENS_OR instance_bodylist_noname SEMICOLON .)
    TASK            reduce using rule 297 (instance -> SENS_OR instance_bodylist_noname SEMICOLON .)
    LPAREN          reduce using rule 297 (instance -> SENS_OR instance_bodylist_noname SEMICOLON .)
    INPUT           reduce using rule 297 (instance -> SENS_OR instance_bodylist_noname SEMICOLON .)
    OUTPUT          reduce using rule 297 (instance -> SENS_OR instance_bodylist_noname SEMICOLON .)
    INOUT           reduce using rule 297 (instance -> SENS_OR instance_bodylist_noname SEMICOLON .)
    TRI             reduce using rule 297 (instance -> SENS_OR instance_bodylist_noname SEMICOLON .)
    REG             reduce using rule 297 (instance -> SENS_OR instance_bodylist_noname SEMICOLON .)
    WIRE            reduce using rule 297 (instance -> SENS_OR instance_bodylist_noname SEMICOLON .)
    SIGNED          reduce using rule 297 (instance -> SENS_OR instance_bodylist_noname SEMICOLON .)
    SUPPLY0         reduce using rule 297 (instance -> SENS_OR instance_bodylist_noname SEMICOLON .)
    SUPPLY1         reduce using rule 297 (instance -> SENS_OR instance_bodylist_noname SEMICOLON .)
    END             reduce using rule 297 (instance -> SENS_OR instance_bodylist_noname SEMICOLON .)
    IF              reduce using rule 297 (instance -> SENS_OR instance_bodylist_noname SEMICOLON .)
    FOR             reduce using rule 297 (instance -> SENS_OR instance_bodylist_noname SEMICOLON .)
    ELSE            reduce using rule 297 (instance -> SENS_OR instance_bodylist_noname SEMICOLON .)
    ENDGENERATE     reduce using rule 297 (instance -> SENS_OR instance_bodylist_noname SEMICOLON .)


state 407

    (101) localparamdecl -> LOCALPARAM SIGNED width . param_substitution_list SEMICOLON
    (103) param_substitution_list -> . param_substitution_list COMMA param_substitution
    (104) param_substitution_list -> . param_substitution
    (105) param_substitution -> . ID EQUALS rvalue

    ID              shift and go to state 209

    param_substitution             shift and go to state 210
    param_substitution_list        shift and go to state 532

state 408

    (99) localparamdecl -> LOCALPARAM SIGNED param_substitution_list . SEMICOLON
    (103) param_substitution_list -> param_substitution_list . COMMA param_substitution

    SEMICOLON       shift and go to state 533
    COMMA           shift and go to state 352


state 409

    (100) localparamdecl -> LOCALPARAM width param_substitution_list . SEMICOLON
    (103) param_substitution_list -> param_substitution_list . COMMA param_substitution

    SEMICOLON       shift and go to state 534
    COMMA           shift and go to state 352


state 410

    (98) localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .

    END             reduce using rule 98 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    IF              reduce using rule 98 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    FOR             reduce using rule 98 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    INTEGER         reduce using rule 98 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    REAL            reduce using rule 98 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    PARAMETER       reduce using rule 98 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    LOCALPARAM      reduce using rule 98 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    GENVAR          reduce using rule 98 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    ASSIGN          reduce using rule 98 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    ALWAYS          reduce using rule 98 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    INITIAL         reduce using rule 98 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    ID              reduce using rule 98 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    SENS_OR         reduce using rule 98 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    FUNCTION        reduce using rule 98 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    TASK            reduce using rule 98 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    LPAREN          reduce using rule 98 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    INPUT           reduce using rule 98 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    OUTPUT          reduce using rule 98 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    INOUT           reduce using rule 98 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    TRI             reduce using rule 98 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    REG             reduce using rule 98 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    WIRE            reduce using rule 98 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    SIGNED          reduce using rule 98 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    SUPPLY0         reduce using rule 98 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    SUPPLY1         reduce using rule 98 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    ELSE            reduce using rule 98 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    ENDGENERATE     reduce using rule 98 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    ENDMODULE       reduce using rule 98 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    GENERATE        reduce using rule 98 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    CASE            reduce using rule 98 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    CASEX           reduce using rule 98 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    WHILE           reduce using rule 98 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    WAIT            reduce using rule 98 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    FOREVER         reduce using rule 98 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    BEGIN           reduce using rule 98 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    FORK            reduce using rule 98 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    DELAY           reduce using rule 98 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    AT              reduce using rule 98 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    DOLLER          reduce using rule 98 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    DISABLE         reduce using rule 98 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    LBRACE          reduce using rule 98 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    SEMICOLON       reduce using rule 98 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)


state 411

    (102) localparamdecl -> LOCALPARAM INTEGER param_substitution_list . SEMICOLON
    (103) param_substitution_list -> param_substitution_list . COMMA param_substitution

    SEMICOLON       shift and go to state 535
    COMMA           shift and go to state 352


state 412

    (29) portlist -> LPAREN ioports RPAREN SEMICOLON .

    GENERATE        reduce using rule 29 (portlist -> LPAREN ioports RPAREN SEMICOLON .)
    INTEGER         reduce using rule 29 (portlist -> LPAREN ioports RPAREN SEMICOLON .)
    REAL            reduce using rule 29 (portlist -> LPAREN ioports RPAREN SEMICOLON .)
    PARAMETER       reduce using rule 29 (portlist -> LPAREN ioports RPAREN SEMICOLON .)
    LOCALPARAM      reduce using rule 29 (portlist -> LPAREN ioports RPAREN SEMICOLON .)
    GENVAR          reduce using rule 29 (portlist -> LPAREN ioports RPAREN SEMICOLON .)
    ASSIGN          reduce using rule 29 (portlist -> LPAREN ioports RPAREN SEMICOLON .)
    ALWAYS          reduce using rule 29 (portlist -> LPAREN ioports RPAREN SEMICOLON .)
    INITIAL         reduce using rule 29 (portlist -> LPAREN ioports RPAREN SEMICOLON .)
    ID              reduce using rule 29 (portlist -> LPAREN ioports RPAREN SEMICOLON .)
    SENS_OR         reduce using rule 29 (portlist -> LPAREN ioports RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 29 (portlist -> LPAREN ioports RPAREN SEMICOLON .)
    TASK            reduce using rule 29 (portlist -> LPAREN ioports RPAREN SEMICOLON .)
    LPAREN          reduce using rule 29 (portlist -> LPAREN ioports RPAREN SEMICOLON .)
    INPUT           reduce using rule 29 (portlist -> LPAREN ioports RPAREN SEMICOLON .)
    OUTPUT          reduce using rule 29 (portlist -> LPAREN ioports RPAREN SEMICOLON .)
    INOUT           reduce using rule 29 (portlist -> LPAREN ioports RPAREN SEMICOLON .)
    TRI             reduce using rule 29 (portlist -> LPAREN ioports RPAREN SEMICOLON .)
    REG             reduce using rule 29 (portlist -> LPAREN ioports RPAREN SEMICOLON .)
    WIRE            reduce using rule 29 (portlist -> LPAREN ioports RPAREN SEMICOLON .)
    SIGNED          reduce using rule 29 (portlist -> LPAREN ioports RPAREN SEMICOLON .)
    SUPPLY0         reduce using rule 29 (portlist -> LPAREN ioports RPAREN SEMICOLON .)
    SUPPLY1         reduce using rule 29 (portlist -> LPAREN ioports RPAREN SEMICOLON .)
    ENDMODULE       reduce using rule 29 (portlist -> LPAREN ioports RPAREN SEMICOLON .)


state 413

    (46) ioports -> ioports COMMA ioport .

    RPAREN          reduce using rule 46 (ioports -> ioports COMMA ioport .)
    COMMA           reduce using rule 46 (ioports -> ioports COMMA ioport .)


state 414

    (48) ioport -> sigtypes . portname
    (49) ioport -> sigtypes . width portname
    (35) sigtypes -> sigtypes . sigtype
    (34) portname -> . ID
    (53) width -> . LBRACKET expression COLON expression RBRACKET
    (37) sigtype -> . INPUT
    (38) sigtype -> . OUTPUT
    (39) sigtype -> . INOUT
    (40) sigtype -> . TRI
    (41) sigtype -> . REG
    (42) sigtype -> . WIRE
    (43) sigtype -> . SIGNED
    (44) sigtype -> . SUPPLY0
    (45) sigtype -> . SUPPLY1

    ID              shift and go to state 109
    LBRACKET        shift and go to state 205
    INPUT           shift and go to state 91
    OUTPUT          shift and go to state 96
    INOUT           shift and go to state 72
    TRI             shift and go to state 89
    REG             shift and go to state 67
    WIRE            shift and go to state 104
    SIGNED          shift and go to state 98
    SUPPLY0         shift and go to state 79
    SUPPLY1         shift and go to state 80

    portname                       shift and go to state 537
    width                          shift and go to state 536
    sigtype                        shift and go to state 234

state 415

    (52) ioport -> portname .

    RPAREN          reduce using rule 52 (ioport -> portname .)
    COMMA           reduce using rule 52 (ioport -> portname .)


state 416

    (51) ioport_head -> sigtypes width portname .

    RPAREN          reduce using rule 51 (ioport_head -> sigtypes width portname .)
    COMMA           reduce using rule 51 (ioport_head -> sigtypes width portname .)


state 417

    (28) portlist -> LPAREN ports RPAREN SEMICOLON .

    GENERATE        reduce using rule 28 (portlist -> LPAREN ports RPAREN SEMICOLON .)
    INTEGER         reduce using rule 28 (portlist -> LPAREN ports RPAREN SEMICOLON .)
    REAL            reduce using rule 28 (portlist -> LPAREN ports RPAREN SEMICOLON .)
    PARAMETER       reduce using rule 28 (portlist -> LPAREN ports RPAREN SEMICOLON .)
    LOCALPARAM      reduce using rule 28 (portlist -> LPAREN ports RPAREN SEMICOLON .)
    GENVAR          reduce using rule 28 (portlist -> LPAREN ports RPAREN SEMICOLON .)
    ASSIGN          reduce using rule 28 (portlist -> LPAREN ports RPAREN SEMICOLON .)
    ALWAYS          reduce using rule 28 (portlist -> LPAREN ports RPAREN SEMICOLON .)
    INITIAL         reduce using rule 28 (portlist -> LPAREN ports RPAREN SEMICOLON .)
    ID              reduce using rule 28 (portlist -> LPAREN ports RPAREN SEMICOLON .)
    SENS_OR         reduce using rule 28 (portlist -> LPAREN ports RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 28 (portlist -> LPAREN ports RPAREN SEMICOLON .)
    TASK            reduce using rule 28 (portlist -> LPAREN ports RPAREN SEMICOLON .)
    LPAREN          reduce using rule 28 (portlist -> LPAREN ports RPAREN SEMICOLON .)
    INPUT           reduce using rule 28 (portlist -> LPAREN ports RPAREN SEMICOLON .)
    OUTPUT          reduce using rule 28 (portlist -> LPAREN ports RPAREN SEMICOLON .)
    INOUT           reduce using rule 28 (portlist -> LPAREN ports RPAREN SEMICOLON .)
    TRI             reduce using rule 28 (portlist -> LPAREN ports RPAREN SEMICOLON .)
    REG             reduce using rule 28 (portlist -> LPAREN ports RPAREN SEMICOLON .)
    WIRE            reduce using rule 28 (portlist -> LPAREN ports RPAREN SEMICOLON .)
    SIGNED          reduce using rule 28 (portlist -> LPAREN ports RPAREN SEMICOLON .)
    SUPPLY0         reduce using rule 28 (portlist -> LPAREN ports RPAREN SEMICOLON .)
    SUPPLY1         reduce using rule 28 (portlist -> LPAREN ports RPAREN SEMICOLON .)
    ENDMODULE       reduce using rule 28 (portlist -> LPAREN ports RPAREN SEMICOLON .)


state 418

    (32) ports -> ports COMMA portname .

    RPAREN          reduce using rule 32 (ports -> ports COMMA portname .)
    COMMA           reduce using rule 32 (ports -> ports COMMA portname .)


state 419

    (26) param_end -> PARAMETER SIGNED width . param_substitution_list
    (21) param -> PARAMETER SIGNED width . param_substitution_list COMMA
    (103) param_substitution_list -> . param_substitution_list COMMA param_substitution
    (104) param_substitution_list -> . param_substitution
    (105) param_substitution -> . ID EQUALS rvalue

    ID              shift and go to state 209

    param_substitution             shift and go to state 210
    param_substitution_list        shift and go to state 538

state 420

    (24) param_end -> PARAMETER SIGNED param_substitution_list .
    (19) param -> PARAMETER SIGNED param_substitution_list . COMMA
    (103) param_substitution_list -> param_substitution_list . COMMA param_substitution

    RPAREN          reduce using rule 24 (param_end -> PARAMETER SIGNED param_substitution_list .)
    COMMA           shift and go to state 539


state 421

    (25) param_end -> PARAMETER width param_substitution_list .
    (20) param -> PARAMETER width param_substitution_list . COMMA
    (103) param_substitution_list -> param_substitution_list . COMMA param_substitution

    RPAREN          reduce using rule 25 (param_end -> PARAMETER width param_substitution_list .)
    COMMA           shift and go to state 540


state 422

    (18) param -> PARAMETER param_substitution_list COMMA .
    (103) param_substitution_list -> param_substitution_list COMMA . param_substitution
    (105) param_substitution -> . ID EQUALS rvalue

    PARAMETER       reduce using rule 18 (param -> PARAMETER param_substitution_list COMMA .)
    ID              shift and go to state 209

    param_substitution             shift and go to state 478

state 423

    (27) param_end -> PARAMETER INTEGER param_substitution_list .
    (22) param -> PARAMETER INTEGER param_substitution_list . COMMA
    (103) param_substitution_list -> param_substitution_list . COMMA param_substitution

    RPAREN          reduce using rule 27 (param_end -> PARAMETER INTEGER param_substitution_list .)
    COMMA           shift and go to state 541


state 424

    (178) partselect -> pointer LBRACKET expression COLON . expression RBRACKET
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    pointer                        shift and go to state 31
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    expression                     shift and go to state 542
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 425

    (179) partselect -> pointer LBRACKET expression PLUSCOLON . expression RBRACKET
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    pointer                        shift and go to state 31
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    expression                     shift and go to state 543
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 426

    (180) partselect -> pointer LBRACKET expression MINUSCOLON . expression RBRACKET
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    pointer                        shift and go to state 31
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    expression                     shift and go to state 544
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 427

    (182) pointer -> pointer LBRACKET expression RBRACKET .

    LBRACKET        reduce using rule 182 (pointer -> pointer LBRACKET expression RBRACKET .)
    DOT             reduce using rule 182 (pointer -> pointer LBRACKET expression RBRACKET .)
    EQUALS          reduce using rule 182 (pointer -> pointer LBRACKET expression RBRACKET .)
    POWER           reduce using rule 182 (pointer -> pointer LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 182 (pointer -> pointer LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 182 (pointer -> pointer LBRACKET expression RBRACKET .)
    MOD             reduce using rule 182 (pointer -> pointer LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 182 (pointer -> pointer LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 182 (pointer -> pointer LBRACKET expression RBRACKET .)
    LSHIFT          reduce using rule 182 (pointer -> pointer LBRACKET expression RBRACKET .)
    RSHIFT          reduce using rule 182 (pointer -> pointer LBRACKET expression RBRACKET .)
    LSHIFTA         reduce using rule 182 (pointer -> pointer LBRACKET expression RBRACKET .)
    RSHIFTA         reduce using rule 182 (pointer -> pointer LBRACKET expression RBRACKET .)
    LT              reduce using rule 182 (pointer -> pointer LBRACKET expression RBRACKET .)
    GT              reduce using rule 182 (pointer -> pointer LBRACKET expression RBRACKET .)
    LE              reduce using rule 182 (pointer -> pointer LBRACKET expression RBRACKET .)
    GE              reduce using rule 182 (pointer -> pointer LBRACKET expression RBRACKET .)
    EQ              reduce using rule 182 (pointer -> pointer LBRACKET expression RBRACKET .)
    NE              reduce using rule 182 (pointer -> pointer LBRACKET expression RBRACKET .)
    EQL             reduce using rule 182 (pointer -> pointer LBRACKET expression RBRACKET .)
    NEL             reduce using rule 182 (pointer -> pointer LBRACKET expression RBRACKET .)
    AND             reduce using rule 182 (pointer -> pointer LBRACKET expression RBRACKET .)
    XOR             reduce using rule 182 (pointer -> pointer LBRACKET expression RBRACKET .)
    XNOR            reduce using rule 182 (pointer -> pointer LBRACKET expression RBRACKET .)
    OR              reduce using rule 182 (pointer -> pointer LBRACKET expression RBRACKET .)
    LAND            reduce using rule 182 (pointer -> pointer LBRACKET expression RBRACKET .)
    LOR             reduce using rule 182 (pointer -> pointer LBRACKET expression RBRACKET .)
    COND            reduce using rule 182 (pointer -> pointer LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 182 (pointer -> pointer LBRACKET expression RBRACKET .)
    LBRACE          reduce using rule 182 (pointer -> pointer LBRACKET expression RBRACKET .)
    RBRACE          reduce using rule 182 (pointer -> pointer LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 182 (pointer -> pointer LBRACKET expression RBRACKET .)
    COLON           reduce using rule 182 (pointer -> pointer LBRACKET expression RBRACKET .)
    PLUSCOLON       reduce using rule 182 (pointer -> pointer LBRACKET expression RBRACKET .)
    MINUSCOLON      reduce using rule 182 (pointer -> pointer LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 182 (pointer -> pointer LBRACKET expression RBRACKET .)
    SEMICOLON       reduce using rule 182 (pointer -> pointer LBRACKET expression RBRACKET .)
    SENS_OR         reduce using rule 182 (pointer -> pointer LBRACKET expression RBRACKET .)
    IF              reduce using rule 182 (pointer -> pointer LBRACKET expression RBRACKET .)
    CASE            reduce using rule 182 (pointer -> pointer LBRACKET expression RBRACKET .)
    CASEX           reduce using rule 182 (pointer -> pointer LBRACKET expression RBRACKET .)
    FOR             reduce using rule 182 (pointer -> pointer LBRACKET expression RBRACKET .)
    WHILE           reduce using rule 182 (pointer -> pointer LBRACKET expression RBRACKET .)
    WAIT            reduce using rule 182 (pointer -> pointer LBRACKET expression RBRACKET .)
    FOREVER         reduce using rule 182 (pointer -> pointer LBRACKET expression RBRACKET .)
    BEGIN           reduce using rule 182 (pointer -> pointer LBRACKET expression RBRACKET .)
    FORK            reduce using rule 182 (pointer -> pointer LBRACKET expression RBRACKET .)
    DELAY           reduce using rule 182 (pointer -> pointer LBRACKET expression RBRACKET .)
    AT              reduce using rule 182 (pointer -> pointer LBRACKET expression RBRACKET .)
    DOLLER          reduce using rule 182 (pointer -> pointer LBRACKET expression RBRACKET .)
    DISABLE         reduce using rule 182 (pointer -> pointer LBRACKET expression RBRACKET .)
    ID              reduce using rule 182 (pointer -> pointer LBRACKET expression RBRACKET .)


state 428

    (172) concatlist -> concatlist COMMA expression .
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RBRACE          reduce using rule 172 (concatlist -> concatlist COMMA expression .)
    COMMA           reduce using rule 172 (concatlist -> concatlist COMMA expression .)
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147
    LT              shift and go to state 145
    GT              shift and go to state 149
    LE              shift and go to state 142
    GE              shift and go to state 153
    EQ              shift and go to state 156
    NE              shift and go to state 144
    EQL             shift and go to state 155
    NEL             shift and go to state 136
    AND             shift and go to state 157
    XOR             shift and go to state 150
    XNOR            shift and go to state 148
    OR              shift and go to state 159
    LAND            shift and go to state 154
    LOR             shift and go to state 138
    COND            shift and go to state 139


state 429

    (174) repeat -> LBRACE expression concat RBRACE .

    POWER           reduce using rule 174 (repeat -> LBRACE expression concat RBRACE .)
    TIMES           reduce using rule 174 (repeat -> LBRACE expression concat RBRACE .)
    DIVIDE          reduce using rule 174 (repeat -> LBRACE expression concat RBRACE .)
    MOD             reduce using rule 174 (repeat -> LBRACE expression concat RBRACE .)
    PLUS            reduce using rule 174 (repeat -> LBRACE expression concat RBRACE .)
    MINUS           reduce using rule 174 (repeat -> LBRACE expression concat RBRACE .)
    LSHIFT          reduce using rule 174 (repeat -> LBRACE expression concat RBRACE .)
    RSHIFT          reduce using rule 174 (repeat -> LBRACE expression concat RBRACE .)
    LSHIFTA         reduce using rule 174 (repeat -> LBRACE expression concat RBRACE .)
    RSHIFTA         reduce using rule 174 (repeat -> LBRACE expression concat RBRACE .)
    LT              reduce using rule 174 (repeat -> LBRACE expression concat RBRACE .)
    GT              reduce using rule 174 (repeat -> LBRACE expression concat RBRACE .)
    LE              reduce using rule 174 (repeat -> LBRACE expression concat RBRACE .)
    GE              reduce using rule 174 (repeat -> LBRACE expression concat RBRACE .)
    EQ              reduce using rule 174 (repeat -> LBRACE expression concat RBRACE .)
    NE              reduce using rule 174 (repeat -> LBRACE expression concat RBRACE .)
    EQL             reduce using rule 174 (repeat -> LBRACE expression concat RBRACE .)
    NEL             reduce using rule 174 (repeat -> LBRACE expression concat RBRACE .)
    AND             reduce using rule 174 (repeat -> LBRACE expression concat RBRACE .)
    XOR             reduce using rule 174 (repeat -> LBRACE expression concat RBRACE .)
    XNOR            reduce using rule 174 (repeat -> LBRACE expression concat RBRACE .)
    OR              reduce using rule 174 (repeat -> LBRACE expression concat RBRACE .)
    LAND            reduce using rule 174 (repeat -> LBRACE expression concat RBRACE .)
    LOR             reduce using rule 174 (repeat -> LBRACE expression concat RBRACE .)
    COND            reduce using rule 174 (repeat -> LBRACE expression concat RBRACE .)
    RPAREN          reduce using rule 174 (repeat -> LBRACE expression concat RBRACE .)
    LBRACE          reduce using rule 174 (repeat -> LBRACE expression concat RBRACE .)
    RBRACE          reduce using rule 174 (repeat -> LBRACE expression concat RBRACE .)
    COMMA           reduce using rule 174 (repeat -> LBRACE expression concat RBRACE .)
    COLON           reduce using rule 174 (repeat -> LBRACE expression concat RBRACE .)
    PLUSCOLON       reduce using rule 174 (repeat -> LBRACE expression concat RBRACE .)
    MINUSCOLON      reduce using rule 174 (repeat -> LBRACE expression concat RBRACE .)
    RBRACKET        reduce using rule 174 (repeat -> LBRACE expression concat RBRACE .)
    SEMICOLON       reduce using rule 174 (repeat -> LBRACE expression concat RBRACE .)


state 430

    (173) concatlist -> expression .
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RBRACE          reduce using rule 173 (concatlist -> expression .)
    COMMA           reduce using rule 173 (concatlist -> expression .)
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147
    LT              shift and go to state 145
    GT              shift and go to state 149
    LE              shift and go to state 142
    GE              shift and go to state 153
    EQ              shift and go to state 156
    NE              shift and go to state 144
    EQL             shift and go to state 155
    NEL             shift and go to state 136
    AND             shift and go to state 157
    XOR             shift and go to state 150
    XNOR            shift and go to state 148
    OR              shift and go to state 159
    LAND            shift and go to state 154
    LOR             shift and go to state 138
    COND            shift and go to state 139


state 431

    (348) sysargs -> sysarg .

    RPAREN          reduce using rule 348 (sysargs -> sysarg .)
    COMMA           reduce using rule 348 (sysargs -> sysarg .)


state 432

    (346) systemcall -> DOLLER SIGNED LPAREN sysargs . RPAREN
    (347) sysargs -> sysargs . COMMA sysarg

    RPAREN          shift and go to state 545
    COMMA           shift and go to state 546


state 433

    (349) sysargs -> empty .

    RPAREN          reduce using rule 349 (sysargs -> empty .)
    COMMA           reduce using rule 349 (sysargs -> empty .)


state 434

    (350) sysarg -> expression .
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RPAREN          reduce using rule 350 (sysarg -> expression .)
    COMMA           reduce using rule 350 (sysarg -> expression .)
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147
    LT              shift and go to state 145
    GT              shift and go to state 149
    LE              shift and go to state 142
    GE              shift and go to state 153
    EQ              shift and go to state 156
    NE              shift and go to state 144
    EQL             shift and go to state 155
    NEL             shift and go to state 136
    AND             shift and go to state 157
    XOR             shift and go to state 150
    XNOR            shift and go to state 148
    OR              shift and go to state 159
    LAND            shift and go to state 154
    LOR             shift and go to state 138
    COND            shift and go to state 139


state 435

    (345) systemcall -> DOLLER ID LPAREN sysargs . RPAREN
    (347) sysargs -> sysargs . COMMA sysarg

    RPAREN          shift and go to state 547
    COMMA           shift and go to state 546


state 436

    (175) partselect -> identifier LBRACKET expression COLON . expression RBRACKET
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 548
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 437

    (176) partselect -> identifier LBRACKET expression PLUSCOLON . expression RBRACKET
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 549
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 438

    (177) partselect -> identifier LBRACKET expression MINUSCOLON . expression RBRACKET
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 550
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 439

    (181) pointer -> identifier LBRACKET expression RBRACKET .

    LBRACKET        reduce using rule 181 (pointer -> identifier LBRACKET expression RBRACKET .)
    DOT             reduce using rule 181 (pointer -> identifier LBRACKET expression RBRACKET .)
    EQUALS          reduce using rule 181 (pointer -> identifier LBRACKET expression RBRACKET .)
    POWER           reduce using rule 181 (pointer -> identifier LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 181 (pointer -> identifier LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 181 (pointer -> identifier LBRACKET expression RBRACKET .)
    MOD             reduce using rule 181 (pointer -> identifier LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 181 (pointer -> identifier LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 181 (pointer -> identifier LBRACKET expression RBRACKET .)
    LSHIFT          reduce using rule 181 (pointer -> identifier LBRACKET expression RBRACKET .)
    RSHIFT          reduce using rule 181 (pointer -> identifier LBRACKET expression RBRACKET .)
    LSHIFTA         reduce using rule 181 (pointer -> identifier LBRACKET expression RBRACKET .)
    RSHIFTA         reduce using rule 181 (pointer -> identifier LBRACKET expression RBRACKET .)
    LT              reduce using rule 181 (pointer -> identifier LBRACKET expression RBRACKET .)
    GT              reduce using rule 181 (pointer -> identifier LBRACKET expression RBRACKET .)
    LE              reduce using rule 181 (pointer -> identifier LBRACKET expression RBRACKET .)
    GE              reduce using rule 181 (pointer -> identifier LBRACKET expression RBRACKET .)
    EQ              reduce using rule 181 (pointer -> identifier LBRACKET expression RBRACKET .)
    NE              reduce using rule 181 (pointer -> identifier LBRACKET expression RBRACKET .)
    EQL             reduce using rule 181 (pointer -> identifier LBRACKET expression RBRACKET .)
    NEL             reduce using rule 181 (pointer -> identifier LBRACKET expression RBRACKET .)
    AND             reduce using rule 181 (pointer -> identifier LBRACKET expression RBRACKET .)
    XOR             reduce using rule 181 (pointer -> identifier LBRACKET expression RBRACKET .)
    XNOR            reduce using rule 181 (pointer -> identifier LBRACKET expression RBRACKET .)
    OR              reduce using rule 181 (pointer -> identifier LBRACKET expression RBRACKET .)
    LAND            reduce using rule 181 (pointer -> identifier LBRACKET expression RBRACKET .)
    LOR             reduce using rule 181 (pointer -> identifier LBRACKET expression RBRACKET .)
    COND            reduce using rule 181 (pointer -> identifier LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 181 (pointer -> identifier LBRACKET expression RBRACKET .)
    LBRACE          reduce using rule 181 (pointer -> identifier LBRACKET expression RBRACKET .)
    RBRACE          reduce using rule 181 (pointer -> identifier LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 181 (pointer -> identifier LBRACKET expression RBRACKET .)
    COLON           reduce using rule 181 (pointer -> identifier LBRACKET expression RBRACKET .)
    PLUSCOLON       reduce using rule 181 (pointer -> identifier LBRACKET expression RBRACKET .)
    MINUSCOLON      reduce using rule 181 (pointer -> identifier LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 181 (pointer -> identifier LBRACKET expression RBRACKET .)
    SEMICOLON       reduce using rule 181 (pointer -> identifier LBRACKET expression RBRACKET .)
    SENS_OR         reduce using rule 181 (pointer -> identifier LBRACKET expression RBRACKET .)
    IF              reduce using rule 181 (pointer -> identifier LBRACKET expression RBRACKET .)
    CASE            reduce using rule 181 (pointer -> identifier LBRACKET expression RBRACKET .)
    CASEX           reduce using rule 181 (pointer -> identifier LBRACKET expression RBRACKET .)
    FOR             reduce using rule 181 (pointer -> identifier LBRACKET expression RBRACKET .)
    WHILE           reduce using rule 181 (pointer -> identifier LBRACKET expression RBRACKET .)
    WAIT            reduce using rule 181 (pointer -> identifier LBRACKET expression RBRACKET .)
    FOREVER         reduce using rule 181 (pointer -> identifier LBRACKET expression RBRACKET .)
    BEGIN           reduce using rule 181 (pointer -> identifier LBRACKET expression RBRACKET .)
    FORK            reduce using rule 181 (pointer -> identifier LBRACKET expression RBRACKET .)
    DELAY           reduce using rule 181 (pointer -> identifier LBRACKET expression RBRACKET .)
    AT              reduce using rule 181 (pointer -> identifier LBRACKET expression RBRACKET .)
    DOLLER          reduce using rule 181 (pointer -> identifier LBRACKET expression RBRACKET .)
    DISABLE         reduce using rule 181 (pointer -> identifier LBRACKET expression RBRACKET .)
    ID              reduce using rule 181 (pointer -> identifier LBRACKET expression RBRACKET .)


state 440

    (366) functioncall -> identifier LPAREN func_args RPAREN .

    RBRACKET        reduce using rule 366 (functioncall -> identifier LPAREN func_args RPAREN .)
    POWER           reduce using rule 366 (functioncall -> identifier LPAREN func_args RPAREN .)
    TIMES           reduce using rule 366 (functioncall -> identifier LPAREN func_args RPAREN .)
    DIVIDE          reduce using rule 366 (functioncall -> identifier LPAREN func_args RPAREN .)
    MOD             reduce using rule 366 (functioncall -> identifier LPAREN func_args RPAREN .)
    PLUS            reduce using rule 366 (functioncall -> identifier LPAREN func_args RPAREN .)
    MINUS           reduce using rule 366 (functioncall -> identifier LPAREN func_args RPAREN .)
    LSHIFT          reduce using rule 366 (functioncall -> identifier LPAREN func_args RPAREN .)
    RSHIFT          reduce using rule 366 (functioncall -> identifier LPAREN func_args RPAREN .)
    LSHIFTA         reduce using rule 366 (functioncall -> identifier LPAREN func_args RPAREN .)
    RSHIFTA         reduce using rule 366 (functioncall -> identifier LPAREN func_args RPAREN .)
    LT              reduce using rule 366 (functioncall -> identifier LPAREN func_args RPAREN .)
    GT              reduce using rule 366 (functioncall -> identifier LPAREN func_args RPAREN .)
    LE              reduce using rule 366 (functioncall -> identifier LPAREN func_args RPAREN .)
    GE              reduce using rule 366 (functioncall -> identifier LPAREN func_args RPAREN .)
    EQ              reduce using rule 366 (functioncall -> identifier LPAREN func_args RPAREN .)
    NE              reduce using rule 366 (functioncall -> identifier LPAREN func_args RPAREN .)
    EQL             reduce using rule 366 (functioncall -> identifier LPAREN func_args RPAREN .)
    NEL             reduce using rule 366 (functioncall -> identifier LPAREN func_args RPAREN .)
    AND             reduce using rule 366 (functioncall -> identifier LPAREN func_args RPAREN .)
    XOR             reduce using rule 366 (functioncall -> identifier LPAREN func_args RPAREN .)
    XNOR            reduce using rule 366 (functioncall -> identifier LPAREN func_args RPAREN .)
    OR              reduce using rule 366 (functioncall -> identifier LPAREN func_args RPAREN .)
    LAND            reduce using rule 366 (functioncall -> identifier LPAREN func_args RPAREN .)
    LOR             reduce using rule 366 (functioncall -> identifier LPAREN func_args RPAREN .)
    COND            reduce using rule 366 (functioncall -> identifier LPAREN func_args RPAREN .)
    COLON           reduce using rule 366 (functioncall -> identifier LPAREN func_args RPAREN .)
    PLUSCOLON       reduce using rule 366 (functioncall -> identifier LPAREN func_args RPAREN .)
    MINUSCOLON      reduce using rule 366 (functioncall -> identifier LPAREN func_args RPAREN .)
    RPAREN          reduce using rule 366 (functioncall -> identifier LPAREN func_args RPAREN .)
    LBRACE          reduce using rule 366 (functioncall -> identifier LPAREN func_args RPAREN .)
    RBRACE          reduce using rule 366 (functioncall -> identifier LPAREN func_args RPAREN .)
    COMMA           reduce using rule 366 (functioncall -> identifier LPAREN func_args RPAREN .)
    SEMICOLON       reduce using rule 366 (functioncall -> identifier LPAREN func_args RPAREN .)


state 441

    (367) func_args -> func_args COMMA . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 551
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    repeat                         shift and go to state 30
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 442

    (161) expression -> expression COND expression COLON . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 552
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 443

    (90) realnamelist -> realnamelist COMMA realname .

    SEMICOLON       reduce using rule 90 (realnamelist -> realnamelist COMMA realname .)
    COMMA           reduce using rule 90 (realnamelist -> realnamelist COMMA realname .)


state 444

    (241) block_statements -> block_statements block_statement .

    JOIN            reduce using rule 241 (block_statements -> block_statements block_statement .)
    IF              reduce using rule 241 (block_statements -> block_statements block_statement .)
    CASE            reduce using rule 241 (block_statements -> block_statements block_statement .)
    CASEX           reduce using rule 241 (block_statements -> block_statements block_statement .)
    FOR             reduce using rule 241 (block_statements -> block_statements block_statement .)
    WHILE           reduce using rule 241 (block_statements -> block_statements block_statement .)
    WAIT            reduce using rule 241 (block_statements -> block_statements block_statement .)
    FOREVER         reduce using rule 241 (block_statements -> block_statements block_statement .)
    BEGIN           reduce using rule 241 (block_statements -> block_statements block_statement .)
    FORK            reduce using rule 241 (block_statements -> block_statements block_statement .)
    DELAY           reduce using rule 241 (block_statements -> block_statements block_statement .)
    AT              reduce using rule 241 (block_statements -> block_statements block_statement .)
    DOLLER          reduce using rule 241 (block_statements -> block_statements block_statement .)
    DISABLE         reduce using rule 241 (block_statements -> block_statements block_statement .)
    LBRACE          reduce using rule 241 (block_statements -> block_statements block_statement .)
    ID              reduce using rule 241 (block_statements -> block_statements block_statement .)
    SEMICOLON       reduce using rule 241 (block_statements -> block_statements block_statement .)
    END             reduce using rule 241 (block_statements -> block_statements block_statement .)


state 445

    (254) parallelblock -> FORK block_statements JOIN .

    ENDMODULE       reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    GENERATE        reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    INTEGER         reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    REAL            reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    PARAMETER       reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    LOCALPARAM      reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    GENVAR          reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    ASSIGN          reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    ALWAYS          reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    INITIAL         reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    ID              reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    SENS_OR         reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    FUNCTION        reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    TASK            reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    LPAREN          reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    INPUT           reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    OUTPUT          reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    INOUT           reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    TRI             reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    REG             reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    WIRE            reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    SIGNED          reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    SUPPLY0         reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    SUPPLY1         reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    ENDGENERATE     reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    IF              reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    FOR             reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    ELSE            reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    END             reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    JOIN            reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    CASE            reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    CASEX           reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    WHILE           reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    WAIT            reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    FOREVER         reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    BEGIN           reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    FORK            reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    DELAY           reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    AT              reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    DOLLER          reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    DISABLE         reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    LBRACE          reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    SEMICOLON       reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    ENDTASK         reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    ENDFUNCTION     reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    ENDCASE         reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    DEFAULT         reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    MINUS           reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    PLUS            reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    LNOT            reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    NOT             reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    AND             reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    NAND            reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    NOR             reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    OR              reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    XOR             reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    XNOR            reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    INTNUMBER_DEC   reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    SIGNED_INTNUMBER_DEC reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    INTNUMBER_BIN   reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    SIGNED_INTNUMBER_BIN reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    INTNUMBER_OCT   reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    SIGNED_INTNUMBER_OCT reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    INTNUMBER_HEX   reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    SIGNED_INTNUMBER_HEX reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    FLOATNUMBER     reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)
    STRING_LITERAL  reduce using rule 254 (parallelblock -> FORK block_statements JOIN .)


state 446

    (286) wait_statement -> WAIT LPAREN cond . RPAREN waitcontent_statement

    RPAREN          shift and go to state 553


state 447

    (260) cond -> expression .
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RPAREN          reduce using rule 260 (cond -> expression .)
    SEMICOLON       reduce using rule 260 (cond -> expression .)
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147
    LT              shift and go to state 145
    GT              shift and go to state 149
    LE              shift and go to state 142
    GE              shift and go to state 153
    EQ              shift and go to state 156
    NE              shift and go to state 144
    EQL             shift and go to state 155
    NEL             shift and go to state 136
    AND             shift and go to state 157
    XOR             shift and go to state 150
    XNOR            shift and go to state 148
    OR              shift and go to state 159
    LAND            shift and go to state 154
    LOR             shift and go to state 138
    COND            shift and go to state 139


state 448

    (234) delays -> DELAY LPAREN expression . RPAREN
    (162) expression -> LPAREN expression . RPAREN
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RPAREN          shift and go to state 554
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147
    LT              shift and go to state 145
    GT              shift and go to state 149
    LE              shift and go to state 142
    GE              shift and go to state 153
    EQ              shift and go to state 156
    NE              shift and go to state 144
    EQL             shift and go to state 155
    NEL             shift and go to state 136
    AND             shift and go to state 157
    XOR             shift and go to state 150
    XNOR            shift and go to state 148
    OR              shift and go to state 159
    LAND            shift and go to state 154
    LOR             shift and go to state 138
    COND            shift and go to state 139


state 449

    (390) single_statement -> DELAY expression SEMICOLON .

    ENDMODULE       reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    GENERATE        reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    INTEGER         reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    REAL            reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    PARAMETER       reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    LOCALPARAM      reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    GENVAR          reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    ASSIGN          reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    ALWAYS          reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    INITIAL         reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    ID              reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    SENS_OR         reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    FUNCTION        reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    TASK            reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    LPAREN          reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    INPUT           reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    OUTPUT          reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    INOUT           reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    TRI             reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    REG             reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    WIRE            reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    SIGNED          reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    SUPPLY0         reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    SUPPLY1         reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    ENDGENERATE     reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    IF              reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    FOR             reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    ELSE            reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    END             reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    JOIN            reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    CASE            reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    CASEX           reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    WHILE           reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    WAIT            reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    FOREVER         reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    BEGIN           reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    FORK            reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    DELAY           reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    AT              reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    DOLLER          reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    DISABLE         reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    LBRACE          reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    SEMICOLON       reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    ENDTASK         reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    ENDFUNCTION     reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    ENDCASE         reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    DEFAULT         reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    MINUS           reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    PLUS            reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    LNOT            reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    NOT             reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    AND             reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    NAND            reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    NOR             reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    OR              reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    XOR             reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    XNOR            reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    INTNUMBER_DEC   reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    SIGNED_INTNUMBER_DEC reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    INTNUMBER_BIN   reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    SIGNED_INTNUMBER_BIN reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    INTNUMBER_OCT   reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    SIGNED_INTNUMBER_OCT reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    INTNUMBER_HEX   reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    SIGNED_INTNUMBER_HEX reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    FLOATNUMBER     reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)
    STRING_LITERAL  reduce using rule 390 (single_statement -> DELAY expression SEMICOLON .)


state 450

    (272) while_statement -> WHILE LPAREN cond . RPAREN whilecontent_statement

    RPAREN          shift and go to state 555


state 451

    (274) case_statement -> CASE LPAREN case_comp . RPAREN casecontent_statements ENDCASE

    RPAREN          shift and go to state 556


state 452

    (276) case_comp -> expression .
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RPAREN          reduce using rule 276 (case_comp -> expression .)
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147
    LT              shift and go to state 145
    GT              shift and go to state 149
    LE              shift and go to state 142
    GE              shift and go to state 153
    EQ              shift and go to state 156
    NE              shift and go to state 144
    EQL             shift and go to state 155
    NEL             shift and go to state 136
    AND             shift and go to state 157
    XOR             shift and go to state 150
    XNOR            shift and go to state 148
    OR              shift and go to state 159
    LAND            shift and go to state 154
    LOR             shift and go to state 138
    COND            shift and go to state 139


state 453

    (244) namedblock -> BEGIN COLON ID . namedblock_statements END
    (245) namedblock -> BEGIN COLON ID . END
    (246) namedblock_statements -> . namedblock_statements namedblock_statement
    (247) namedblock_statements -> . namedblock_statement
    (248) namedblock_statement -> . basic_statement
    (249) namedblock_statement -> . decl
    (250) namedblock_statement -> . integerdecl
    (251) namedblock_statement -> . realdecl
    (252) namedblock_statement -> . parameterdecl
    (253) namedblock_statement -> . localparamdecl
    (216) basic_statement -> . if_statement
    (217) basic_statement -> . case_statement
    (218) basic_statement -> . casex_statement
    (219) basic_statement -> . for_statement
    (220) basic_statement -> . while_statement
    (221) basic_statement -> . event_statement
    (222) basic_statement -> . wait_statement
    (223) basic_statement -> . forever_statement
    (224) basic_statement -> . block
    (225) basic_statement -> . namedblock
    (226) basic_statement -> . parallelblock
    (227) basic_statement -> . blocking_substitution
    (228) basic_statement -> . nonblocking_substitution
    (229) basic_statement -> . single_statement
    (74) decl -> . sigtypes declnamelist SEMICOLON
    (75) decl -> . sigtypes width declnamelist SEMICOLON
    (84) integerdecl -> . INTEGER integernamelist SEMICOLON
    (85) integerdecl -> . INTEGER SIGNED integernamelist SEMICOLON
    (89) realdecl -> . REAL realnamelist SEMICOLON
    (93) parameterdecl -> . PARAMETER param_substitution_list SEMICOLON
    (94) parameterdecl -> . PARAMETER SIGNED param_substitution_list SEMICOLON
    (95) parameterdecl -> . PARAMETER width param_substitution_list SEMICOLON
    (96) parameterdecl -> . PARAMETER SIGNED width param_substitution_list SEMICOLON
    (97) parameterdecl -> . PARAMETER INTEGER param_substitution_list SEMICOLON
    (98) localparamdecl -> . LOCALPARAM param_substitution_list SEMICOLON
    (99) localparamdecl -> . LOCALPARAM SIGNED param_substitution_list SEMICOLON
    (100) localparamdecl -> . LOCALPARAM width param_substitution_list SEMICOLON
    (101) localparamdecl -> . LOCALPARAM SIGNED width param_substitution_list SEMICOLON
    (102) localparamdecl -> . LOCALPARAM INTEGER param_substitution_list SEMICOLON
    (256) if_statement -> . IF LPAREN cond RPAREN true_statement ELSE else_statement
    (257) if_statement -> . IF LPAREN cond RPAREN true_statement
    (258) if_statement -> . delays IF LPAREN cond RPAREN true_statement ELSE else_statement
    (259) if_statement -> . delays IF LPAREN cond RPAREN true_statement
    (274) case_statement -> . CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (275) casex_statement -> . CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (264) for_statement -> . FOR LPAREN forpre forcond forpost RPAREN forcontent_statement
    (272) while_statement -> . WHILE LPAREN cond RPAREN whilecontent_statement
    (285) event_statement -> . senslist SEMICOLON
    (286) wait_statement -> . WAIT LPAREN cond RPAREN waitcontent_statement
    (289) forever_statement -> . FOREVER basic_statement
    (239) block -> . BEGIN block_statements END
    (240) block -> . BEGIN END
    (244) namedblock -> . BEGIN COLON ID namedblock_statements END
    (245) namedblock -> . BEGIN COLON ID END
    (254) parallelblock -> . FORK block_statements JOIN
    (255) parallelblock -> . FORK JOIN
    (231) blocking_substitution -> . delays lvalue EQUALS delays rvalue SEMICOLON
    (233) nonblocking_substitution -> . delays lvalue LE delays rvalue SEMICOLON
    (390) single_statement -> . DELAY expression SEMICOLON
    (391) single_statement -> . systemcall SEMICOLON
    (392) single_statement -> . disable SEMICOLON
    (35) sigtypes -> . sigtypes sigtype
    (36) sigtypes -> . sigtype
    (234) delays -> . DELAY LPAREN expression RPAREN
    (235) delays -> . DELAY identifier
    (236) delays -> . DELAY intnumber
    (237) delays -> . DELAY floatnumber
    (238) delays -> . empty
    (197) senslist -> . AT LPAREN edgesigs RPAREN
    (204) senslist -> . empty
    (205) senslist -> . AT levelsig
    (206) senslist -> . AT LPAREN levelsigs RPAREN
    (214) senslist -> . AT TIMES
    (215) senslist -> . AT LPAREN TIMES RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (389) disable -> . DISABLE ID
    (37) sigtype -> . INPUT
    (38) sigtype -> . OUTPUT
    (39) sigtype -> . INOUT
    (40) sigtype -> . TRI
    (41) sigtype -> . REG
    (42) sigtype -> . WIRE
    (43) sigtype -> . SIGNED
    (44) sigtype -> . SUPPLY0
    (45) sigtype -> . SUPPLY1
    (393) empty -> .

  ! shift/reduce conflict for IF resolved as shift
    END             shift and go to state 561
    INTEGER         shift and go to state 83
    REAL            shift and go to state 63
    PARAMETER       shift and go to state 70
    LOCALPARAM      shift and go to state 101
    IF              shift and go to state 195
    CASE            shift and go to state 173
    CASEX           shift and go to state 178
    FOR             shift and go to state 187
    WHILE           shift and go to state 171
    WAIT            shift and go to state 168
    FOREVER         shift and go to state 167
    BEGIN           shift and go to state 175
    FORK            shift and go to state 166
    DELAY           shift and go to state 170
    AT              shift and go to state 193
    DOLLER          shift and go to state 54
    DISABLE         shift and go to state 180
    INPUT           shift and go to state 91
    OUTPUT          shift and go to state 96
    INOUT           shift and go to state 72
    TRI             shift and go to state 89
    REG             shift and go to state 67
    WIRE            shift and go to state 104
    SIGNED          shift and go to state 98
    SUPPLY0         shift and go to state 79
    SUPPLY1         shift and go to state 80
    LBRACE          reduce using rule 393 (empty -> .)
    ID              reduce using rule 393 (empty -> .)
    SEMICOLON       reduce using rule 393 (empty -> .)

  ! IF              [ reduce using rule 393 (empty -> .) ]

    decl                           shift and go to state 557
    localparamdecl                 shift and go to state 558
    systemcall                     shift and go to state 181
    parallelblock                  shift and go to state 169
    integerdecl                    shift and go to state 559
    forever_statement              shift and go to state 172
    namedblock_statement           shift and go to state 563
    casex_statement                shift and go to state 174
    sigtype                        shift and go to state 75
    delays                         shift and go to state 176
    blocking_substitution          shift and go to state 177
    while_statement                shift and go to state 179
    sigtypes                       shift and go to state 504
    realdecl                       shift and go to state 564
    if_statement                   shift and go to state 182
    nonblocking_substitution       shift and go to state 183
    empty                          shift and go to state 184
    basic_statement                shift and go to state 565
    for_statement                  shift and go to state 186
    event_statement                shift and go to state 189
    wait_statement                 shift and go to state 190
    case_statement                 shift and go to state 191
    disable                        shift and go to state 192
    namedblock                     shift and go to state 194
    parameterdecl                  shift and go to state 560
    senslist                       shift and go to state 196
    single_statement               shift and go to state 197
    namedblock_statements          shift and go to state 562
    block                          shift and go to state 198

state 454

    (239) block -> BEGIN block_statements END .

    END             reduce using rule 239 (block -> BEGIN block_statements END .)
    INTEGER         reduce using rule 239 (block -> BEGIN block_statements END .)
    REAL            reduce using rule 239 (block -> BEGIN block_statements END .)
    PARAMETER       reduce using rule 239 (block -> BEGIN block_statements END .)
    LOCALPARAM      reduce using rule 239 (block -> BEGIN block_statements END .)
    IF              reduce using rule 239 (block -> BEGIN block_statements END .)
    CASE            reduce using rule 239 (block -> BEGIN block_statements END .)
    CASEX           reduce using rule 239 (block -> BEGIN block_statements END .)
    FOR             reduce using rule 239 (block -> BEGIN block_statements END .)
    WHILE           reduce using rule 239 (block -> BEGIN block_statements END .)
    WAIT            reduce using rule 239 (block -> BEGIN block_statements END .)
    FOREVER         reduce using rule 239 (block -> BEGIN block_statements END .)
    BEGIN           reduce using rule 239 (block -> BEGIN block_statements END .)
    FORK            reduce using rule 239 (block -> BEGIN block_statements END .)
    DELAY           reduce using rule 239 (block -> BEGIN block_statements END .)
    AT              reduce using rule 239 (block -> BEGIN block_statements END .)
    DOLLER          reduce using rule 239 (block -> BEGIN block_statements END .)
    DISABLE         reduce using rule 239 (block -> BEGIN block_statements END .)
    INPUT           reduce using rule 239 (block -> BEGIN block_statements END .)
    OUTPUT          reduce using rule 239 (block -> BEGIN block_statements END .)
    INOUT           reduce using rule 239 (block -> BEGIN block_statements END .)
    TRI             reduce using rule 239 (block -> BEGIN block_statements END .)
    REG             reduce using rule 239 (block -> BEGIN block_statements END .)
    WIRE            reduce using rule 239 (block -> BEGIN block_statements END .)
    SIGNED          reduce using rule 239 (block -> BEGIN block_statements END .)
    SUPPLY0         reduce using rule 239 (block -> BEGIN block_statements END .)
    SUPPLY1         reduce using rule 239 (block -> BEGIN block_statements END .)
    LBRACE          reduce using rule 239 (block -> BEGIN block_statements END .)
    ID              reduce using rule 239 (block -> BEGIN block_statements END .)
    SEMICOLON       reduce using rule 239 (block -> BEGIN block_statements END .)
    ENDMODULE       reduce using rule 239 (block -> BEGIN block_statements END .)
    GENERATE        reduce using rule 239 (block -> BEGIN block_statements END .)
    GENVAR          reduce using rule 239 (block -> BEGIN block_statements END .)
    ASSIGN          reduce using rule 239 (block -> BEGIN block_statements END .)
    ALWAYS          reduce using rule 239 (block -> BEGIN block_statements END .)
    INITIAL         reduce using rule 239 (block -> BEGIN block_statements END .)
    SENS_OR         reduce using rule 239 (block -> BEGIN block_statements END .)
    FUNCTION        reduce using rule 239 (block -> BEGIN block_statements END .)
    TASK            reduce using rule 239 (block -> BEGIN block_statements END .)
    LPAREN          reduce using rule 239 (block -> BEGIN block_statements END .)
    ENDGENERATE     reduce using rule 239 (block -> BEGIN block_statements END .)
    ELSE            reduce using rule 239 (block -> BEGIN block_statements END .)
    JOIN            reduce using rule 239 (block -> BEGIN block_statements END .)
    ENDTASK         reduce using rule 239 (block -> BEGIN block_statements END .)
    ENDFUNCTION     reduce using rule 239 (block -> BEGIN block_statements END .)
    ENDCASE         reduce using rule 239 (block -> BEGIN block_statements END .)
    DEFAULT         reduce using rule 239 (block -> BEGIN block_statements END .)
    MINUS           reduce using rule 239 (block -> BEGIN block_statements END .)
    PLUS            reduce using rule 239 (block -> BEGIN block_statements END .)
    LNOT            reduce using rule 239 (block -> BEGIN block_statements END .)
    NOT             reduce using rule 239 (block -> BEGIN block_statements END .)
    AND             reduce using rule 239 (block -> BEGIN block_statements END .)
    NAND            reduce using rule 239 (block -> BEGIN block_statements END .)
    NOR             reduce using rule 239 (block -> BEGIN block_statements END .)
    OR              reduce using rule 239 (block -> BEGIN block_statements END .)
    XOR             reduce using rule 239 (block -> BEGIN block_statements END .)
    XNOR            reduce using rule 239 (block -> BEGIN block_statements END .)
    INTNUMBER_DEC   reduce using rule 239 (block -> BEGIN block_statements END .)
    SIGNED_INTNUMBER_DEC reduce using rule 239 (block -> BEGIN block_statements END .)
    INTNUMBER_BIN   reduce using rule 239 (block -> BEGIN block_statements END .)
    SIGNED_INTNUMBER_BIN reduce using rule 239 (block -> BEGIN block_statements END .)
    INTNUMBER_OCT   reduce using rule 239 (block -> BEGIN block_statements END .)
    SIGNED_INTNUMBER_OCT reduce using rule 239 (block -> BEGIN block_statements END .)
    INTNUMBER_HEX   reduce using rule 239 (block -> BEGIN block_statements END .)
    SIGNED_INTNUMBER_HEX reduce using rule 239 (block -> BEGIN block_statements END .)
    FLOATNUMBER     reduce using rule 239 (block -> BEGIN block_statements END .)
    STRING_LITERAL  reduce using rule 239 (block -> BEGIN block_statements END .)


state 455

    (233) nonblocking_substitution -> delays lvalue LE . delays rvalue SEMICOLON
    (234) delays -> . DELAY LPAREN expression RPAREN
    (235) delays -> . DELAY identifier
    (236) delays -> . DELAY intnumber
    (237) delays -> . DELAY floatnumber
    (238) delays -> . empty
    (393) empty -> .

    DELAY           shift and go to state 230
    MINUS           reduce using rule 393 (empty -> .)
    PLUS            reduce using rule 393 (empty -> .)
    LNOT            reduce using rule 393 (empty -> .)
    NOT             reduce using rule 393 (empty -> .)
    AND             reduce using rule 393 (empty -> .)
    NAND            reduce using rule 393 (empty -> .)
    NOR             reduce using rule 393 (empty -> .)
    OR              reduce using rule 393 (empty -> .)
    XOR             reduce using rule 393 (empty -> .)
    XNOR            reduce using rule 393 (empty -> .)
    LPAREN          reduce using rule 393 (empty -> .)
    LBRACE          reduce using rule 393 (empty -> .)
    DOLLER          reduce using rule 393 (empty -> .)
    ID              reduce using rule 393 (empty -> .)
    INTNUMBER_DEC   reduce using rule 393 (empty -> .)
    SIGNED_INTNUMBER_DEC reduce using rule 393 (empty -> .)
    INTNUMBER_BIN   reduce using rule 393 (empty -> .)
    SIGNED_INTNUMBER_BIN reduce using rule 393 (empty -> .)
    INTNUMBER_OCT   reduce using rule 393 (empty -> .)
    SIGNED_INTNUMBER_OCT reduce using rule 393 (empty -> .)
    INTNUMBER_HEX   reduce using rule 393 (empty -> .)
    SIGNED_INTNUMBER_HEX reduce using rule 393 (empty -> .)
    FLOATNUMBER     reduce using rule 393 (empty -> .)
    STRING_LITERAL  reduce using rule 393 (empty -> .)

    delays                         shift and go to state 566
    empty                          shift and go to state 228

state 456

    (231) blocking_substitution -> delays lvalue EQUALS . delays rvalue SEMICOLON
    (234) delays -> . DELAY LPAREN expression RPAREN
    (235) delays -> . DELAY identifier
    (236) delays -> . DELAY intnumber
    (237) delays -> . DELAY floatnumber
    (238) delays -> . empty
    (393) empty -> .

    DELAY           shift and go to state 230
    MINUS           reduce using rule 393 (empty -> .)
    PLUS            reduce using rule 393 (empty -> .)
    LNOT            reduce using rule 393 (empty -> .)
    NOT             reduce using rule 393 (empty -> .)
    AND             reduce using rule 393 (empty -> .)
    NAND            reduce using rule 393 (empty -> .)
    NOR             reduce using rule 393 (empty -> .)
    OR              reduce using rule 393 (empty -> .)
    XOR             reduce using rule 393 (empty -> .)
    XNOR            reduce using rule 393 (empty -> .)
    LPAREN          reduce using rule 393 (empty -> .)
    LBRACE          reduce using rule 393 (empty -> .)
    DOLLER          reduce using rule 393 (empty -> .)
    ID              reduce using rule 393 (empty -> .)
    INTNUMBER_DEC   reduce using rule 393 (empty -> .)
    SIGNED_INTNUMBER_DEC reduce using rule 393 (empty -> .)
    INTNUMBER_BIN   reduce using rule 393 (empty -> .)
    SIGNED_INTNUMBER_BIN reduce using rule 393 (empty -> .)
    INTNUMBER_OCT   reduce using rule 393 (empty -> .)
    SIGNED_INTNUMBER_OCT reduce using rule 393 (empty -> .)
    INTNUMBER_HEX   reduce using rule 393 (empty -> .)
    SIGNED_INTNUMBER_HEX reduce using rule 393 (empty -> .)
    FLOATNUMBER     reduce using rule 393 (empty -> .)
    STRING_LITERAL  reduce using rule 393 (empty -> .)

    delays                         shift and go to state 567
    empty                          shift and go to state 228

state 457

    (258) if_statement -> delays IF LPAREN . cond RPAREN true_statement ELSE else_statement
    (259) if_statement -> delays IF LPAREN . cond RPAREN true_statement
    (260) cond -> . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    pointer                        shift and go to state 31
    systemcall                     shift and go to state 27
    stringliteral                  shift and go to state 53
    const_expression               shift and go to state 29
    cond                           shift and go to state 568
    intnumber                      shift and go to state 37
    scope                          shift and go to state 44
    functioncall                   shift and go to state 55
    identifier                     shift and go to state 57
    expression                     shift and go to state 447
    concat                         shift and go to state 47

state 458

    (275) casex_statement -> CASEX LPAREN case_comp . RPAREN casecontent_statements ENDCASE

    RPAREN          shift and go to state 569


state 459

    (266) forpre -> SEMICOLON .

    SEMICOLON       reduce using rule 266 (forpre -> SEMICOLON .)
    MINUS           reduce using rule 266 (forpre -> SEMICOLON .)
    PLUS            reduce using rule 266 (forpre -> SEMICOLON .)
    LNOT            reduce using rule 266 (forpre -> SEMICOLON .)
    NOT             reduce using rule 266 (forpre -> SEMICOLON .)
    AND             reduce using rule 266 (forpre -> SEMICOLON .)
    NAND            reduce using rule 266 (forpre -> SEMICOLON .)
    NOR             reduce using rule 266 (forpre -> SEMICOLON .)
    OR              reduce using rule 266 (forpre -> SEMICOLON .)
    XOR             reduce using rule 266 (forpre -> SEMICOLON .)
    XNOR            reduce using rule 266 (forpre -> SEMICOLON .)
    LPAREN          reduce using rule 266 (forpre -> SEMICOLON .)
    LBRACE          reduce using rule 266 (forpre -> SEMICOLON .)
    DOLLER          reduce using rule 266 (forpre -> SEMICOLON .)
    ID              reduce using rule 266 (forpre -> SEMICOLON .)
    INTNUMBER_DEC   reduce using rule 266 (forpre -> SEMICOLON .)
    SIGNED_INTNUMBER_DEC reduce using rule 266 (forpre -> SEMICOLON .)
    INTNUMBER_BIN   reduce using rule 266 (forpre -> SEMICOLON .)
    SIGNED_INTNUMBER_BIN reduce using rule 266 (forpre -> SEMICOLON .)
    INTNUMBER_OCT   reduce using rule 266 (forpre -> SEMICOLON .)
    SIGNED_INTNUMBER_OCT reduce using rule 266 (forpre -> SEMICOLON .)
    INTNUMBER_HEX   reduce using rule 266 (forpre -> SEMICOLON .)
    SIGNED_INTNUMBER_HEX reduce using rule 266 (forpre -> SEMICOLON .)
    FLOATNUMBER     reduce using rule 266 (forpre -> SEMICOLON .)
    STRING_LITERAL  reduce using rule 266 (forpre -> SEMICOLON .)


state 460

    (231) blocking_substitution -> delays . lvalue EQUALS delays rvalue SEMICOLON
    (122) lvalue -> . lpartselect
    (123) lvalue -> . lpointer
    (124) lvalue -> . lconcat
    (125) lvalue -> . identifier
    (108) lpartselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (109) lpartselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (110) lpartselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (111) lpartselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (112) lpartselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (113) lpartselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (114) lpointer -> . pointer
    (115) lconcat -> . LBRACE lconcatlist RBRACE
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT

    LBRACE          shift and go to state 231
    ID              shift and go to state 46

    lconcat                        shift and go to state 229
    lpartselect                    shift and go to state 225
    lvalue                         shift and go to state 570
    lpointer                       shift and go to state 223
    scope                          shift and go to state 44
    identifier                     shift and go to state 232
    pointer                        shift and go to state 224

state 461

    (265) forpre -> blocking_substitution .

    SEMICOLON       reduce using rule 265 (forpre -> blocking_substitution .)
    MINUS           reduce using rule 265 (forpre -> blocking_substitution .)
    PLUS            reduce using rule 265 (forpre -> blocking_substitution .)
    LNOT            reduce using rule 265 (forpre -> blocking_substitution .)
    NOT             reduce using rule 265 (forpre -> blocking_substitution .)
    AND             reduce using rule 265 (forpre -> blocking_substitution .)
    NAND            reduce using rule 265 (forpre -> blocking_substitution .)
    NOR             reduce using rule 265 (forpre -> blocking_substitution .)
    OR              reduce using rule 265 (forpre -> blocking_substitution .)
    XOR             reduce using rule 265 (forpre -> blocking_substitution .)
    XNOR            reduce using rule 265 (forpre -> blocking_substitution .)
    LPAREN          reduce using rule 265 (forpre -> blocking_substitution .)
    LBRACE          reduce using rule 265 (forpre -> blocking_substitution .)
    DOLLER          reduce using rule 265 (forpre -> blocking_substitution .)
    ID              reduce using rule 265 (forpre -> blocking_substitution .)
    INTNUMBER_DEC   reduce using rule 265 (forpre -> blocking_substitution .)
    SIGNED_INTNUMBER_DEC reduce using rule 265 (forpre -> blocking_substitution .)
    INTNUMBER_BIN   reduce using rule 265 (forpre -> blocking_substitution .)
    SIGNED_INTNUMBER_BIN reduce using rule 265 (forpre -> blocking_substitution .)
    INTNUMBER_OCT   reduce using rule 265 (forpre -> blocking_substitution .)
    SIGNED_INTNUMBER_OCT reduce using rule 265 (forpre -> blocking_substitution .)
    INTNUMBER_HEX   reduce using rule 265 (forpre -> blocking_substitution .)
    SIGNED_INTNUMBER_HEX reduce using rule 265 (forpre -> blocking_substitution .)
    FLOATNUMBER     reduce using rule 265 (forpre -> blocking_substitution .)
    STRING_LITERAL  reduce using rule 265 (forpre -> blocking_substitution .)


state 462

    (264) for_statement -> FOR LPAREN forpre . forcond forpost RPAREN forcontent_statement
    (267) forcond -> . cond SEMICOLON
    (268) forcond -> . SEMICOLON
    (260) cond -> . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    SEMICOLON       shift and go to state 573
    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    systemcall                     shift and go to state 27
    forcond                        shift and go to state 571
    const_expression               shift and go to state 29
    pointer                        shift and go to state 31
    cond                           shift and go to state 572
    scope                          shift and go to state 44
    functioncall                   shift and go to state 55
    identifier                     shift and go to state 57
    expression                     shift and go to state 447
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 463

    (206) senslist -> AT LPAREN levelsigs . RPAREN
    (211) levelsigs -> levelsigs . SENS_OR levelsig
    (212) levelsigs -> levelsigs . COMMA levelsig

    RPAREN          shift and go to state 574
    SENS_OR         shift and go to state 575
    COMMA           shift and go to state 576


state 464

    (197) senslist -> AT LPAREN edgesigs . RPAREN
    (202) edgesigs -> edgesigs . SENS_OR edgesig

    RPAREN          shift and go to state 577
    SENS_OR         shift and go to state 578


state 465

    (215) senslist -> AT LPAREN TIMES . RPAREN

    RPAREN          shift and go to state 579


state 466

    (203) edgesigs -> edgesig .

    RPAREN          reduce using rule 203 (edgesigs -> edgesig .)
    SENS_OR         reduce using rule 203 (edgesigs -> edgesig .)


state 467

    (199) edgesig -> NEGEDGE . edgesig_base
    (200) edgesig_base -> . identifier
    (201) edgesig_base -> . pointer
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT

    ID              shift and go to state 46

    scope                          shift and go to state 44
    edgesig_base                   shift and go to state 580
    identifier                     shift and go to state 581
    pointer                        shift and go to state 582

state 468

    (213) levelsigs -> levelsig .

    RPAREN          reduce using rule 213 (levelsigs -> levelsig .)
    SENS_OR         reduce using rule 213 (levelsigs -> levelsig .)
    COMMA           reduce using rule 213 (levelsigs -> levelsig .)


state 469

    (198) edgesig -> POSEDGE . edgesig_base
    (200) edgesig_base -> . identifier
    (201) edgesig_base -> . pointer
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT

    ID              shift and go to state 46

    scope                          shift and go to state 44
    edgesig_base                   shift and go to state 583
    identifier                     shift and go to state 581
    pointer                        shift and go to state 582

state 470

    (181) pointer -> identifier LBRACKET . expression RBRACKET
    (175) partselect -> identifier LBRACKET . expression COLON expression RBRACKET
    (176) partselect -> identifier LBRACKET . expression PLUSCOLON expression RBRACKET
    (177) partselect -> identifier LBRACKET . expression MINUSCOLON expression RBRACKET
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 584
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 471

    (182) pointer -> pointer LBRACKET . expression RBRACKET
    (178) partselect -> pointer LBRACKET . expression COLON expression RBRACKET
    (179) partselect -> pointer LBRACKET . expression PLUSCOLON expression RBRACKET
    (180) partselect -> pointer LBRACKET . expression MINUSCOLON expression RBRACKET
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    pointer                        shift and go to state 31
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    expression                     shift and go to state 585
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 472

    (256) if_statement -> IF LPAREN cond . RPAREN true_statement ELSE else_statement
    (257) if_statement -> IF LPAREN cond . RPAREN true_statement

    RPAREN          shift and go to state 586


state 473

    (323) genvarlist -> genvarlist COMMA genvar .

    SEMICOLON       reduce using rule 323 (genvarlist -> genvarlist COMMA genvar .)
    COMMA           reduce using rule 323 (genvarlist -> genvarlist COMMA genvar .)


state 474

    (96) parameterdecl -> PARAMETER SIGNED width param_substitution_list . SEMICOLON
    (103) param_substitution_list -> param_substitution_list . COMMA param_substitution

    SEMICOLON       shift and go to state 587
    COMMA           shift and go to state 352


state 475

    (94) parameterdecl -> PARAMETER SIGNED param_substitution_list SEMICOLON .

    END             reduce using rule 94 (parameterdecl -> PARAMETER SIGNED param_substitution_list SEMICOLON .)
    INTEGER         reduce using rule 94 (parameterdecl -> PARAMETER SIGNED param_substitution_list SEMICOLON .)
    REAL            reduce using rule 94 (parameterdecl -> PARAMETER SIGNED param_substitution_list SEMICOLON .)
    PARAMETER       reduce using rule 94 (parameterdecl -> PARAMETER SIGNED param_substitution_list SEMICOLON .)
    LOCALPARAM      reduce using rule 94 (parameterdecl -> PARAMETER SIGNED param_substitution_list SEMICOLON .)
    IF              reduce using rule 94 (parameterdecl -> PARAMETER SIGNED param_substitution_list SEMICOLON .)
    CASE            reduce using rule 94 (parameterdecl -> PARAMETER SIGNED param_substitution_list SEMICOLON .)
    CASEX           reduce using rule 94 (parameterdecl -> PARAMETER SIGNED param_substitution_list SEMICOLON .)
    FOR             reduce using rule 94 (parameterdecl -> PARAMETER SIGNED param_substitution_list SEMICOLON .)
    WHILE           reduce using rule 94 (parameterdecl -> PARAMETER SIGNED param_substitution_list SEMICOLON .)
    WAIT            reduce using rule 94 (parameterdecl -> PARAMETER SIGNED param_substitution_list SEMICOLON .)
    FOREVER         reduce using rule 94 (parameterdecl -> PARAMETER SIGNED param_substitution_list SEMICOLON .)
    BEGIN           reduce using rule 94 (parameterdecl -> PARAMETER SIGNED param_substitution_list SEMICOLON .)
    FORK            reduce using rule 94 (parameterdecl -> PARAMETER SIGNED param_substitution_list SEMICOLON .)
    DELAY           reduce using rule 94 (parameterdecl -> PARAMETER SIGNED param_substitution_list SEMICOLON .)
    AT              reduce using rule 94 (parameterdecl -> PARAMETER SIGNED param_substitution_list SEMICOLON .)
    DOLLER          reduce using rule 94 (parameterdecl -> PARAMETER SIGNED param_substitution_list SEMICOLON .)
    DISABLE         reduce using rule 94 (parameterdecl -> PARAMETER SIGNED param_substitution_list SEMICOLON .)
    INPUT           reduce using rule 94 (parameterdecl -> PARAMETER SIGNED param_substitution_list SEMICOLON .)
    OUTPUT          reduce using rule 94 (parameterdecl -> PARAMETER SIGNED param_substitution_list SEMICOLON .)
    INOUT           reduce using rule 94 (parameterdecl -> PARAMETER SIGNED param_substitution_list SEMICOLON .)
    TRI             reduce using rule 94 (parameterdecl -> PARAMETER SIGNED param_substitution_list SEMICOLON .)
    REG             reduce using rule 94 (parameterdecl -> PARAMETER SIGNED param_substitution_list SEMICOLON .)
    WIRE            reduce using rule 94 (parameterdecl -> PARAMETER SIGNED param_substitution_list SEMICOLON .)
    SIGNED          reduce using rule 94 (parameterdecl -> PARAMETER SIGNED param_substitution_list SEMICOLON .)
    SUPPLY0         reduce using rule 94 (parameterdecl -> PARAMETER SIGNED param_substitution_list SEMICOLON .)
    SUPPLY1         reduce using rule 94 (parameterdecl -> PARAMETER SIGNED param_substitution_list SEMICOLON .)
    LBRACE          reduce using rule 94 (parameterdecl -> PARAMETER SIGNED param_substitution_list SEMICOLON .)
    ID              reduce using rule 94 (parameterdecl -> PARAMETER SIGNED param_substitution_list SEMICOLON .)
    SEMICOLON       reduce using rule 94 (parameterdecl -> PARAMETER SIGNED param_substitution_list SEMICOLON .)
    ELSE            reduce using rule 94 (parameterdecl -> PARAMETER SIGNED param_substitution_list SEMICOLON .)
    ENDGENERATE     reduce using rule 94 (parameterdecl -> PARAMETER SIGNED param_substitution_list SEMICOLON .)
    GENVAR          reduce using rule 94 (parameterdecl -> PARAMETER SIGNED param_substitution_list SEMICOLON .)
    ASSIGN          reduce using rule 94 (parameterdecl -> PARAMETER SIGNED param_substitution_list SEMICOLON .)
    ALWAYS          reduce using rule 94 (parameterdecl -> PARAMETER SIGNED param_substitution_list SEMICOLON .)
    INITIAL         reduce using rule 94 (parameterdecl -> PARAMETER SIGNED param_substitution_list SEMICOLON .)
    SENS_OR         reduce using rule 94 (parameterdecl -> PARAMETER SIGNED param_substitution_list SEMICOLON .)
    FUNCTION        reduce using rule 94 (parameterdecl -> PARAMETER SIGNED param_substitution_list SEMICOLON .)
    TASK            reduce using rule 94 (parameterdecl -> PARAMETER SIGNED param_substitution_list SEMICOLON .)
    LPAREN          reduce using rule 94 (parameterdecl -> PARAMETER SIGNED param_substitution_list SEMICOLON .)
    ENDMODULE       reduce using rule 94 (parameterdecl -> PARAMETER SIGNED param_substitution_list SEMICOLON .)
    GENERATE        reduce using rule 94 (parameterdecl -> PARAMETER SIGNED param_substitution_list SEMICOLON .)


state 476

    (53) width -> LBRACKET expression COLON . expression RBRACKET
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 588
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 477

    (95) parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .

    END             reduce using rule 95 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    INTEGER         reduce using rule 95 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    REAL            reduce using rule 95 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    PARAMETER       reduce using rule 95 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    LOCALPARAM      reduce using rule 95 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    IF              reduce using rule 95 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    CASE            reduce using rule 95 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    CASEX           reduce using rule 95 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    FOR             reduce using rule 95 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    WHILE           reduce using rule 95 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    WAIT            reduce using rule 95 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    FOREVER         reduce using rule 95 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    BEGIN           reduce using rule 95 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    FORK            reduce using rule 95 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    DELAY           reduce using rule 95 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    AT              reduce using rule 95 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    DOLLER          reduce using rule 95 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    DISABLE         reduce using rule 95 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    INPUT           reduce using rule 95 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    OUTPUT          reduce using rule 95 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    INOUT           reduce using rule 95 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    TRI             reduce using rule 95 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    REG             reduce using rule 95 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    WIRE            reduce using rule 95 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    SIGNED          reduce using rule 95 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    SUPPLY0         reduce using rule 95 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    SUPPLY1         reduce using rule 95 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    LBRACE          reduce using rule 95 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    ID              reduce using rule 95 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    SEMICOLON       reduce using rule 95 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    ELSE            reduce using rule 95 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    ENDGENERATE     reduce using rule 95 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    GENVAR          reduce using rule 95 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    ASSIGN          reduce using rule 95 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    ALWAYS          reduce using rule 95 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    INITIAL         reduce using rule 95 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    SENS_OR         reduce using rule 95 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    FUNCTION        reduce using rule 95 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    TASK            reduce using rule 95 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    LPAREN          reduce using rule 95 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    ENDMODULE       reduce using rule 95 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    GENERATE        reduce using rule 95 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)


state 478

    (103) param_substitution_list -> param_substitution_list COMMA param_substitution .

    SEMICOLON       reduce using rule 103 (param_substitution_list -> param_substitution_list COMMA param_substitution .)
    COMMA           reduce using rule 103 (param_substitution_list -> param_substitution_list COMMA param_substitution .)
    RPAREN          reduce using rule 103 (param_substitution_list -> param_substitution_list COMMA param_substitution .)


state 479

    (97) parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .

    END             reduce using rule 97 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    INTEGER         reduce using rule 97 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    REAL            reduce using rule 97 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    PARAMETER       reduce using rule 97 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    LOCALPARAM      reduce using rule 97 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    IF              reduce using rule 97 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    CASE            reduce using rule 97 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    CASEX           reduce using rule 97 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    FOR             reduce using rule 97 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    WHILE           reduce using rule 97 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    WAIT            reduce using rule 97 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    FOREVER         reduce using rule 97 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    BEGIN           reduce using rule 97 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    FORK            reduce using rule 97 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    DELAY           reduce using rule 97 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    AT              reduce using rule 97 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    DOLLER          reduce using rule 97 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    DISABLE         reduce using rule 97 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    INPUT           reduce using rule 97 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    OUTPUT          reduce using rule 97 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    INOUT           reduce using rule 97 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    TRI             reduce using rule 97 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    REG             reduce using rule 97 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    WIRE            reduce using rule 97 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    SIGNED          reduce using rule 97 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    SUPPLY0         reduce using rule 97 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    SUPPLY1         reduce using rule 97 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    LBRACE          reduce using rule 97 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    ID              reduce using rule 97 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    SEMICOLON       reduce using rule 97 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    ELSE            reduce using rule 97 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    ENDGENERATE     reduce using rule 97 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    GENVAR          reduce using rule 97 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    ASSIGN          reduce using rule 97 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    ALWAYS          reduce using rule 97 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    INITIAL         reduce using rule 97 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    SENS_OR         reduce using rule 97 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    FUNCTION        reduce using rule 97 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    TASK            reduce using rule 97 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    LPAREN          reduce using rule 97 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    ENDMODULE       reduce using rule 97 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    GENERATE        reduce using rule 97 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)


state 480

    (105) param_substitution -> ID EQUALS rvalue .

    COMMA           reduce using rule 105 (param_substitution -> ID EQUALS rvalue .)
    RPAREN          reduce using rule 105 (param_substitution -> ID EQUALS rvalue .)
    SEMICOLON       reduce using rule 105 (param_substitution -> ID EQUALS rvalue .)


state 481

    (126) rvalue -> expression .
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    SEMICOLON       reduce using rule 126 (rvalue -> expression .)
    COMMA           reduce using rule 126 (rvalue -> expression .)
    RPAREN          reduce using rule 126 (rvalue -> expression .)
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147
    LT              shift and go to state 145
    GT              shift and go to state 149
    LE              shift and go to state 142
    GE              shift and go to state 153
    EQ              shift and go to state 156
    NE              shift and go to state 144
    EQL             shift and go to state 155
    NEL             shift and go to state 136
    AND             shift and go to state 157
    XOR             shift and go to state 150
    XNOR            shift and go to state 148
    OR              shift and go to state 159
    LAND            shift and go to state 154
    LOR             shift and go to state 138
    COND            shift and go to state 139


state 482

    (341) generate_for -> FOR LPAREN forpre . forcond forpost RPAREN generate_forcontent
    (267) forcond -> . cond SEMICOLON
    (268) forcond -> . SEMICOLON
    (260) cond -> . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    SEMICOLON       shift and go to state 573
    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 447
    systemcall                     shift and go to state 27
    forcond                        shift and go to state 589
    const_expression               shift and go to state 29
    pointer                        shift and go to state 31
    cond                           shift and go to state 572
    scope                          shift and go to state 44
    functioncall                   shift and go to state 55
    identifier                     shift and go to state 57
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 483

    (335) generate_if -> IF LPAREN cond . RPAREN gif_true_item ELSE gif_false_item
    (336) generate_if -> IF LPAREN cond . RPAREN gif_true_item

    RPAREN          shift and go to state 590


state 484

    (85) integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .

    END             reduce using rule 85 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    IF              reduce using rule 85 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    FOR             reduce using rule 85 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    INTEGER         reduce using rule 85 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    REAL            reduce using rule 85 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    PARAMETER       reduce using rule 85 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    LOCALPARAM      reduce using rule 85 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    GENVAR          reduce using rule 85 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    ASSIGN          reduce using rule 85 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    ALWAYS          reduce using rule 85 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    INITIAL         reduce using rule 85 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    ID              reduce using rule 85 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    SENS_OR         reduce using rule 85 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    FUNCTION        reduce using rule 85 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    TASK            reduce using rule 85 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    LPAREN          reduce using rule 85 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    INPUT           reduce using rule 85 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    OUTPUT          reduce using rule 85 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    INOUT           reduce using rule 85 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    TRI             reduce using rule 85 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    REG             reduce using rule 85 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    WIRE            reduce using rule 85 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    SIGNED          reduce using rule 85 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    SUPPLY0         reduce using rule 85 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    SUPPLY1         reduce using rule 85 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    WHILE           reduce using rule 85 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    CASE            reduce using rule 85 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    CASEX           reduce using rule 85 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    BEGIN           reduce using rule 85 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    DELAY           reduce using rule 85 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    LBRACE          reduce using rule 85 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    ELSE            reduce using rule 85 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    ENDGENERATE     reduce using rule 85 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    ENDMODULE       reduce using rule 85 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    GENERATE        reduce using rule 85 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    WAIT            reduce using rule 85 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    FOREVER         reduce using rule 85 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    FORK            reduce using rule 85 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    AT              reduce using rule 85 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    DOLLER          reduce using rule 85 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    DISABLE         reduce using rule 85 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    SEMICOLON       reduce using rule 85 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)


state 485

    (86) integernamelist -> integernamelist COMMA integername .

    SEMICOLON       reduce using rule 86 (integernamelist -> integernamelist COMMA integername .)
    COMMA           reduce using rule 86 (integernamelist -> integernamelist COMMA integername .)


state 486

    (108) lpartselect -> pointer LBRACKET expression . COLON expression RBRACKET
    (109) lpartselect -> pointer LBRACKET expression . PLUSCOLON expression RBRACKET
    (110) lpartselect -> pointer LBRACKET expression . MINUSCOLON expression RBRACKET
    (182) pointer -> pointer LBRACKET expression . RBRACKET
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    COLON           shift and go to state 591
    PLUSCOLON       shift and go to state 592
    MINUSCOLON      shift and go to state 593
    RBRACKET        shift and go to state 427
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147
    LT              shift and go to state 145
    GT              shift and go to state 149
    LE              shift and go to state 142
    GE              shift and go to state 153
    EQ              shift and go to state 156
    NE              shift and go to state 144
    EQL             shift and go to state 155
    NEL             shift and go to state 136
    AND             shift and go to state 157
    XOR             shift and go to state 150
    XNOR            shift and go to state 148
    OR              shift and go to state 159
    LAND            shift and go to state 154
    LOR             shift and go to state 138
    COND            shift and go to state 139


state 487

    (106) assignment -> ASSIGN lvalue EQUALS rvalue . SEMICOLON

    SEMICOLON       shift and go to state 594


state 488

    (107) assignment -> ASSIGN delays lvalue EQUALS . delays rvalue SEMICOLON
    (234) delays -> . DELAY LPAREN expression RPAREN
    (235) delays -> . DELAY identifier
    (236) delays -> . DELAY intnumber
    (237) delays -> . DELAY floatnumber
    (238) delays -> . empty
    (393) empty -> .

    DELAY           shift and go to state 230
    MINUS           reduce using rule 393 (empty -> .)
    PLUS            reduce using rule 393 (empty -> .)
    LNOT            reduce using rule 393 (empty -> .)
    NOT             reduce using rule 393 (empty -> .)
    AND             reduce using rule 393 (empty -> .)
    NAND            reduce using rule 393 (empty -> .)
    NOR             reduce using rule 393 (empty -> .)
    OR              reduce using rule 393 (empty -> .)
    XOR             reduce using rule 393 (empty -> .)
    XNOR            reduce using rule 393 (empty -> .)
    LPAREN          reduce using rule 393 (empty -> .)
    LBRACE          reduce using rule 393 (empty -> .)
    DOLLER          reduce using rule 393 (empty -> .)
    ID              reduce using rule 393 (empty -> .)
    INTNUMBER_DEC   reduce using rule 393 (empty -> .)
    SIGNED_INTNUMBER_DEC reduce using rule 393 (empty -> .)
    INTNUMBER_BIN   reduce using rule 393 (empty -> .)
    SIGNED_INTNUMBER_BIN reduce using rule 393 (empty -> .)
    INTNUMBER_OCT   reduce using rule 393 (empty -> .)
    SIGNED_INTNUMBER_OCT reduce using rule 393 (empty -> .)
    INTNUMBER_HEX   reduce using rule 393 (empty -> .)
    SIGNED_INTNUMBER_HEX reduce using rule 393 (empty -> .)
    FLOATNUMBER     reduce using rule 393 (empty -> .)
    STRING_LITERAL  reduce using rule 393 (empty -> .)

    delays                         shift and go to state 595
    empty                          shift and go to state 228

state 489

    (182) pointer -> pointer LBRACKET . expression RBRACKET
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    pointer                        shift and go to state 31
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    expression                     shift and go to state 596
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 490

    (234) delays -> DELAY LPAREN expression . RPAREN
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RPAREN          shift and go to state 597
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147
    LT              shift and go to state 145
    GT              shift and go to state 149
    LE              shift and go to state 142
    GE              shift and go to state 153
    EQ              shift and go to state 156
    NE              shift and go to state 144
    EQL             shift and go to state 155
    NEL             shift and go to state 136
    AND             shift and go to state 157
    XOR             shift and go to state 150
    XNOR            shift and go to state 148
    OR              shift and go to state 159
    LAND            shift and go to state 154
    LOR             shift and go to state 138
    COND            shift and go to state 139


state 491

    (181) pointer -> identifier LBRACKET . expression RBRACKET
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 598
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 492

    (116) lconcatlist -> lconcatlist COMMA . lconcat_one
    (118) lconcat_one -> . identifier
    (119) lconcat_one -> . lpartselect
    (120) lconcat_one -> . lpointer
    (121) lconcat_one -> . lconcat
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (108) lpartselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (109) lpartselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (110) lpartselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (111) lpartselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (112) lpartselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (113) lpartselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (114) lpointer -> . pointer
    (115) lconcat -> . LBRACE lconcatlist RBRACE
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET

    ID              shift and go to state 46
    LBRACE          shift and go to state 231

    lpartselect                    shift and go to state 371
    lconcat                        shift and go to state 372
    lconcat_one                    shift and go to state 599
    lpointer                       shift and go to state 374
    scope                          shift and go to state 44
    identifier                     shift and go to state 375
    pointer                        shift and go to state 376

state 493

    (115) lconcat -> LBRACE lconcatlist RBRACE .

    RBRACE          reduce using rule 115 (lconcat -> LBRACE lconcatlist RBRACE .)
    COMMA           reduce using rule 115 (lconcat -> LBRACE lconcatlist RBRACE .)
    EQUALS          reduce using rule 115 (lconcat -> LBRACE lconcatlist RBRACE .)
    LE              reduce using rule 115 (lconcat -> LBRACE lconcatlist RBRACE .)


state 494

    (111) lpartselect -> identifier LBRACKET expression . COLON expression RBRACKET
    (112) lpartselect -> identifier LBRACKET expression . PLUSCOLON expression RBRACKET
    (113) lpartselect -> identifier LBRACKET expression . MINUSCOLON expression RBRACKET
    (181) pointer -> identifier LBRACKET expression . RBRACKET
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    COLON           shift and go to state 600
    PLUSCOLON       shift and go to state 601
    MINUSCOLON      shift and go to state 602
    RBRACKET        shift and go to state 439
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147
    LT              shift and go to state 145
    GT              shift and go to state 149
    LE              shift and go to state 142
    GE              shift and go to state 153
    EQ              shift and go to state 156
    NE              shift and go to state 144
    EQL             shift and go to state 155
    NEL             shift and go to state 136
    AND             shift and go to state 157
    XOR             shift and go to state 150
    XNOR            shift and go to state 148
    OR              shift and go to state 159
    LAND            shift and go to state 154
    LOR             shift and go to state 138
    COND            shift and go to state 139


state 495

    (83) declassign_element -> delays ID EQUALS . delays rvalue
    (234) delays -> . DELAY LPAREN expression RPAREN
    (235) delays -> . DELAY identifier
    (236) delays -> . DELAY intnumber
    (237) delays -> . DELAY floatnumber
    (238) delays -> . empty
    (393) empty -> .

    DELAY           shift and go to state 230
    MINUS           reduce using rule 393 (empty -> .)
    PLUS            reduce using rule 393 (empty -> .)
    LNOT            reduce using rule 393 (empty -> .)
    NOT             reduce using rule 393 (empty -> .)
    AND             reduce using rule 393 (empty -> .)
    NAND            reduce using rule 393 (empty -> .)
    NOR             reduce using rule 393 (empty -> .)
    OR              reduce using rule 393 (empty -> .)
    XOR             reduce using rule 393 (empty -> .)
    XNOR            reduce using rule 393 (empty -> .)
    LPAREN          reduce using rule 393 (empty -> .)
    LBRACE          reduce using rule 393 (empty -> .)
    DOLLER          reduce using rule 393 (empty -> .)
    ID              reduce using rule 393 (empty -> .)
    INTNUMBER_DEC   reduce using rule 393 (empty -> .)
    SIGNED_INTNUMBER_DEC reduce using rule 393 (empty -> .)
    INTNUMBER_BIN   reduce using rule 393 (empty -> .)
    SIGNED_INTNUMBER_BIN reduce using rule 393 (empty -> .)
    INTNUMBER_OCT   reduce using rule 393 (empty -> .)
    SIGNED_INTNUMBER_OCT reduce using rule 393 (empty -> .)
    INTNUMBER_HEX   reduce using rule 393 (empty -> .)
    SIGNED_INTNUMBER_HEX reduce using rule 393 (empty -> .)
    FLOATNUMBER     reduce using rule 393 (empty -> .)
    STRING_LITERAL  reduce using rule 393 (empty -> .)

    delays                         shift and go to state 603
    empty                          shift and go to state 228

state 496

    (81) declassign -> sigtypes width declassign_element SEMICOLON .

    END             reduce using rule 81 (declassign -> sigtypes width declassign_element SEMICOLON .)
    IF              reduce using rule 81 (declassign -> sigtypes width declassign_element SEMICOLON .)
    FOR             reduce using rule 81 (declassign -> sigtypes width declassign_element SEMICOLON .)
    INTEGER         reduce using rule 81 (declassign -> sigtypes width declassign_element SEMICOLON .)
    REAL            reduce using rule 81 (declassign -> sigtypes width declassign_element SEMICOLON .)
    PARAMETER       reduce using rule 81 (declassign -> sigtypes width declassign_element SEMICOLON .)
    LOCALPARAM      reduce using rule 81 (declassign -> sigtypes width declassign_element SEMICOLON .)
    GENVAR          reduce using rule 81 (declassign -> sigtypes width declassign_element SEMICOLON .)
    ASSIGN          reduce using rule 81 (declassign -> sigtypes width declassign_element SEMICOLON .)
    ALWAYS          reduce using rule 81 (declassign -> sigtypes width declassign_element SEMICOLON .)
    INITIAL         reduce using rule 81 (declassign -> sigtypes width declassign_element SEMICOLON .)
    ID              reduce using rule 81 (declassign -> sigtypes width declassign_element SEMICOLON .)
    SENS_OR         reduce using rule 81 (declassign -> sigtypes width declassign_element SEMICOLON .)
    FUNCTION        reduce using rule 81 (declassign -> sigtypes width declassign_element SEMICOLON .)
    TASK            reduce using rule 81 (declassign -> sigtypes width declassign_element SEMICOLON .)
    LPAREN          reduce using rule 81 (declassign -> sigtypes width declassign_element SEMICOLON .)
    INPUT           reduce using rule 81 (declassign -> sigtypes width declassign_element SEMICOLON .)
    OUTPUT          reduce using rule 81 (declassign -> sigtypes width declassign_element SEMICOLON .)
    INOUT           reduce using rule 81 (declassign -> sigtypes width declassign_element SEMICOLON .)
    TRI             reduce using rule 81 (declassign -> sigtypes width declassign_element SEMICOLON .)
    REG             reduce using rule 81 (declassign -> sigtypes width declassign_element SEMICOLON .)
    WIRE            reduce using rule 81 (declassign -> sigtypes width declassign_element SEMICOLON .)
    SIGNED          reduce using rule 81 (declassign -> sigtypes width declassign_element SEMICOLON .)
    SUPPLY0         reduce using rule 81 (declassign -> sigtypes width declassign_element SEMICOLON .)
    SUPPLY1         reduce using rule 81 (declassign -> sigtypes width declassign_element SEMICOLON .)
    ELSE            reduce using rule 81 (declassign -> sigtypes width declassign_element SEMICOLON .)
    ENDGENERATE     reduce using rule 81 (declassign -> sigtypes width declassign_element SEMICOLON .)
    ENDMODULE       reduce using rule 81 (declassign -> sigtypes width declassign_element SEMICOLON .)
    GENERATE        reduce using rule 81 (declassign -> sigtypes width declassign_element SEMICOLON .)


state 497

    (75) decl -> sigtypes width declnamelist SEMICOLON .

    ENDMODULE       reduce using rule 75 (decl -> sigtypes width declnamelist SEMICOLON .)
    GENERATE        reduce using rule 75 (decl -> sigtypes width declnamelist SEMICOLON .)
    INTEGER         reduce using rule 75 (decl -> sigtypes width declnamelist SEMICOLON .)
    REAL            reduce using rule 75 (decl -> sigtypes width declnamelist SEMICOLON .)
    PARAMETER       reduce using rule 75 (decl -> sigtypes width declnamelist SEMICOLON .)
    LOCALPARAM      reduce using rule 75 (decl -> sigtypes width declnamelist SEMICOLON .)
    GENVAR          reduce using rule 75 (decl -> sigtypes width declnamelist SEMICOLON .)
    ASSIGN          reduce using rule 75 (decl -> sigtypes width declnamelist SEMICOLON .)
    ALWAYS          reduce using rule 75 (decl -> sigtypes width declnamelist SEMICOLON .)
    INITIAL         reduce using rule 75 (decl -> sigtypes width declnamelist SEMICOLON .)
    ID              reduce using rule 75 (decl -> sigtypes width declnamelist SEMICOLON .)
    SENS_OR         reduce using rule 75 (decl -> sigtypes width declnamelist SEMICOLON .)
    FUNCTION        reduce using rule 75 (decl -> sigtypes width declnamelist SEMICOLON .)
    TASK            reduce using rule 75 (decl -> sigtypes width declnamelist SEMICOLON .)
    LPAREN          reduce using rule 75 (decl -> sigtypes width declnamelist SEMICOLON .)
    INPUT           reduce using rule 75 (decl -> sigtypes width declnamelist SEMICOLON .)
    OUTPUT          reduce using rule 75 (decl -> sigtypes width declnamelist SEMICOLON .)
    INOUT           reduce using rule 75 (decl -> sigtypes width declnamelist SEMICOLON .)
    TRI             reduce using rule 75 (decl -> sigtypes width declnamelist SEMICOLON .)
    REG             reduce using rule 75 (decl -> sigtypes width declnamelist SEMICOLON .)
    WIRE            reduce using rule 75 (decl -> sigtypes width declnamelist SEMICOLON .)
    SIGNED          reduce using rule 75 (decl -> sigtypes width declnamelist SEMICOLON .)
    SUPPLY0         reduce using rule 75 (decl -> sigtypes width declnamelist SEMICOLON .)
    SUPPLY1         reduce using rule 75 (decl -> sigtypes width declnamelist SEMICOLON .)
    IF              reduce using rule 75 (decl -> sigtypes width declnamelist SEMICOLON .)
    FOR             reduce using rule 75 (decl -> sigtypes width declnamelist SEMICOLON .)
    WHILE           reduce using rule 75 (decl -> sigtypes width declnamelist SEMICOLON .)
    CASE            reduce using rule 75 (decl -> sigtypes width declnamelist SEMICOLON .)
    CASEX           reduce using rule 75 (decl -> sigtypes width declnamelist SEMICOLON .)
    BEGIN           reduce using rule 75 (decl -> sigtypes width declnamelist SEMICOLON .)
    DELAY           reduce using rule 75 (decl -> sigtypes width declnamelist SEMICOLON .)
    LBRACE          reduce using rule 75 (decl -> sigtypes width declnamelist SEMICOLON .)
    ELSE            reduce using rule 75 (decl -> sigtypes width declnamelist SEMICOLON .)
    ENDGENERATE     reduce using rule 75 (decl -> sigtypes width declnamelist SEMICOLON .)
    END             reduce using rule 75 (decl -> sigtypes width declnamelist SEMICOLON .)
    WAIT            reduce using rule 75 (decl -> sigtypes width declnamelist SEMICOLON .)
    FOREVER         reduce using rule 75 (decl -> sigtypes width declnamelist SEMICOLON .)
    FORK            reduce using rule 75 (decl -> sigtypes width declnamelist SEMICOLON .)
    AT              reduce using rule 75 (decl -> sigtypes width declnamelist SEMICOLON .)
    DOLLER          reduce using rule 75 (decl -> sigtypes width declnamelist SEMICOLON .)
    DISABLE         reduce using rule 75 (decl -> sigtypes width declnamelist SEMICOLON .)
    SEMICOLON       reduce using rule 75 (decl -> sigtypes width declnamelist SEMICOLON .)


state 498

    (76) declnamelist -> declnamelist COMMA declname .

    SEMICOLON       reduce using rule 76 (declnamelist -> declnamelist COMMA declname .)
    COMMA           reduce using rule 76 (declnamelist -> declnamelist COMMA declname .)


state 499

    (78) declname -> ID .
    (79) declname -> ID . length
    (54) length -> . LBRACKET expression COLON expression RBRACKET

    SEMICOLON       reduce using rule 78 (declname -> ID .)
    COMMA           reduce using rule 78 (declname -> ID .)
    LBRACKET        shift and go to state 386

    length                         shift and go to state 387

state 500

    (82) declassign_element -> ID EQUALS rvalue .

    SEMICOLON       reduce using rule 82 (declassign_element -> ID EQUALS rvalue .)


state 501

    (54) length -> LBRACKET expression . COLON expression RBRACKET
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    COLON           shift and go to state 604
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147
    LT              shift and go to state 145
    GT              shift and go to state 149
    LE              shift and go to state 142
    GE              shift and go to state 153
    EQ              shift and go to state 156
    NE              shift and go to state 144
    EQL             shift and go to state 155
    NEL             shift and go to state 136
    AND             shift and go to state 157
    XOR             shift and go to state 150
    XNOR            shift and go to state 148
    OR              shift and go to state 159
    LAND            shift and go to state 154
    LOR             shift and go to state 138
    COND            shift and go to state 139


state 502

    (375) taskvardecl -> decl .

    IF              reduce using rule 375 (taskvardecl -> decl .)
    FOR             reduce using rule 375 (taskvardecl -> decl .)
    WHILE           reduce using rule 375 (taskvardecl -> decl .)
    CASE            reduce using rule 375 (taskvardecl -> decl .)
    CASEX           reduce using rule 375 (taskvardecl -> decl .)
    BEGIN           reduce using rule 375 (taskvardecl -> decl .)
    INTEGER         reduce using rule 375 (taskvardecl -> decl .)
    DELAY           reduce using rule 375 (taskvardecl -> decl .)
    INPUT           reduce using rule 375 (taskvardecl -> decl .)
    OUTPUT          reduce using rule 375 (taskvardecl -> decl .)
    INOUT           reduce using rule 375 (taskvardecl -> decl .)
    TRI             reduce using rule 375 (taskvardecl -> decl .)
    REG             reduce using rule 375 (taskvardecl -> decl .)
    WIRE            reduce using rule 375 (taskvardecl -> decl .)
    SIGNED          reduce using rule 375 (taskvardecl -> decl .)
    SUPPLY0         reduce using rule 375 (taskvardecl -> decl .)
    SUPPLY1         reduce using rule 375 (taskvardecl -> decl .)
    LBRACE          reduce using rule 375 (taskvardecl -> decl .)
    ID              reduce using rule 375 (taskvardecl -> decl .)


state 503

    (376) taskvardecl -> integerdecl .

    IF              reduce using rule 376 (taskvardecl -> integerdecl .)
    FOR             reduce using rule 376 (taskvardecl -> integerdecl .)
    WHILE           reduce using rule 376 (taskvardecl -> integerdecl .)
    CASE            reduce using rule 376 (taskvardecl -> integerdecl .)
    CASEX           reduce using rule 376 (taskvardecl -> integerdecl .)
    BEGIN           reduce using rule 376 (taskvardecl -> integerdecl .)
    INTEGER         reduce using rule 376 (taskvardecl -> integerdecl .)
    DELAY           reduce using rule 376 (taskvardecl -> integerdecl .)
    INPUT           reduce using rule 376 (taskvardecl -> integerdecl .)
    OUTPUT          reduce using rule 376 (taskvardecl -> integerdecl .)
    INOUT           reduce using rule 376 (taskvardecl -> integerdecl .)
    TRI             reduce using rule 376 (taskvardecl -> integerdecl .)
    REG             reduce using rule 376 (taskvardecl -> integerdecl .)
    WIRE            reduce using rule 376 (taskvardecl -> integerdecl .)
    SIGNED          reduce using rule 376 (taskvardecl -> integerdecl .)
    SUPPLY0         reduce using rule 376 (taskvardecl -> integerdecl .)
    SUPPLY1         reduce using rule 376 (taskvardecl -> integerdecl .)
    LBRACE          reduce using rule 376 (taskvardecl -> integerdecl .)
    ID              reduce using rule 376 (taskvardecl -> integerdecl .)


state 504

    (74) decl -> sigtypes . declnamelist SEMICOLON
    (75) decl -> sigtypes . width declnamelist SEMICOLON
    (35) sigtypes -> sigtypes . sigtype
    (76) declnamelist -> . declnamelist COMMA declname
    (77) declnamelist -> . declname
    (53) width -> . LBRACKET expression COLON expression RBRACKET
    (37) sigtype -> . INPUT
    (38) sigtype -> . OUTPUT
    (39) sigtype -> . INOUT
    (40) sigtype -> . TRI
    (41) sigtype -> . REG
    (42) sigtype -> . WIRE
    (43) sigtype -> . SIGNED
    (44) sigtype -> . SUPPLY0
    (45) sigtype -> . SUPPLY1
    (78) declname -> . ID
    (79) declname -> . ID length

    LBRACKET        shift and go to state 205
    INPUT           shift and go to state 91
    OUTPUT          shift and go to state 96
    INOUT           shift and go to state 72
    TRI             shift and go to state 89
    REG             shift and go to state 67
    WIRE            shift and go to state 104
    SIGNED          shift and go to state 98
    SUPPLY0         shift and go to state 79
    SUPPLY1         shift and go to state 80
    ID              shift and go to state 499

    declname                       shift and go to state 233
    sigtype                        shift and go to state 234
    width                          shift and go to state 605
    declnamelist                   shift and go to state 237

state 505

    (374) taskvardecls -> empty .

    IF              reduce using rule 374 (taskvardecls -> empty .)
    FOR             reduce using rule 374 (taskvardecls -> empty .)
    WHILE           reduce using rule 374 (taskvardecls -> empty .)
    CASE            reduce using rule 374 (taskvardecls -> empty .)
    CASEX           reduce using rule 374 (taskvardecls -> empty .)
    BEGIN           reduce using rule 374 (taskvardecls -> empty .)
    INTEGER         reduce using rule 374 (taskvardecls -> empty .)
    DELAY           reduce using rule 374 (taskvardecls -> empty .)
    INPUT           reduce using rule 374 (taskvardecls -> empty .)
    OUTPUT          reduce using rule 374 (taskvardecls -> empty .)
    INOUT           reduce using rule 374 (taskvardecls -> empty .)
    TRI             reduce using rule 374 (taskvardecls -> empty .)
    REG             reduce using rule 374 (taskvardecls -> empty .)
    WIRE            reduce using rule 374 (taskvardecls -> empty .)
    SIGNED          reduce using rule 374 (taskvardecls -> empty .)
    SUPPLY0         reduce using rule 374 (taskvardecls -> empty .)
    SUPPLY1         reduce using rule 374 (taskvardecls -> empty .)
    LBRACE          reduce using rule 374 (taskvardecls -> empty .)
    ID              reduce using rule 374 (taskvardecls -> empty .)


state 506

    (371) task_statement -> taskvardecls . task_calc
    (372) taskvardecls -> taskvardecls . taskvardecl
    (377) task_calc -> . blocking_substitution
    (378) task_calc -> . if_statement
    (379) task_calc -> . for_statement
    (380) task_calc -> . while_statement
    (381) task_calc -> . case_statement
    (382) task_calc -> . casex_statement
    (383) task_calc -> . block
    (384) task_calc -> . namedblock
    (375) taskvardecl -> . decl
    (376) taskvardecl -> . integerdecl
    (231) blocking_substitution -> . delays lvalue EQUALS delays rvalue SEMICOLON
    (256) if_statement -> . IF LPAREN cond RPAREN true_statement ELSE else_statement
    (257) if_statement -> . IF LPAREN cond RPAREN true_statement
    (258) if_statement -> . delays IF LPAREN cond RPAREN true_statement ELSE else_statement
    (259) if_statement -> . delays IF LPAREN cond RPAREN true_statement
    (264) for_statement -> . FOR LPAREN forpre forcond forpost RPAREN forcontent_statement
    (272) while_statement -> . WHILE LPAREN cond RPAREN whilecontent_statement
    (274) case_statement -> . CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (275) casex_statement -> . CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (239) block -> . BEGIN block_statements END
    (240) block -> . BEGIN END
    (244) namedblock -> . BEGIN COLON ID namedblock_statements END
    (245) namedblock -> . BEGIN COLON ID END
    (74) decl -> . sigtypes declnamelist SEMICOLON
    (75) decl -> . sigtypes width declnamelist SEMICOLON
    (84) integerdecl -> . INTEGER integernamelist SEMICOLON
    (85) integerdecl -> . INTEGER SIGNED integernamelist SEMICOLON
    (234) delays -> . DELAY LPAREN expression RPAREN
    (235) delays -> . DELAY identifier
    (236) delays -> . DELAY intnumber
    (237) delays -> . DELAY floatnumber
    (238) delays -> . empty
    (35) sigtypes -> . sigtypes sigtype
    (36) sigtypes -> . sigtype
    (393) empty -> .
    (37) sigtype -> . INPUT
    (38) sigtype -> . OUTPUT
    (39) sigtype -> . INOUT
    (40) sigtype -> . TRI
    (41) sigtype -> . REG
    (42) sigtype -> . WIRE
    (43) sigtype -> . SIGNED
    (44) sigtype -> . SUPPLY0
    (45) sigtype -> . SUPPLY1

  ! shift/reduce conflict for IF resolved as shift
    IF              shift and go to state 195
    FOR             shift and go to state 187
    WHILE           shift and go to state 171
    CASE            shift and go to state 173
    CASEX           shift and go to state 178
    BEGIN           shift and go to state 175
    INTEGER         shift and go to state 83
    DELAY           shift and go to state 230
    LBRACE          reduce using rule 393 (empty -> .)
    ID              reduce using rule 393 (empty -> .)
    INPUT           shift and go to state 91
    OUTPUT          shift and go to state 96
    INOUT           shift and go to state 72
    TRI             shift and go to state 89
    REG             shift and go to state 67
    WIRE            shift and go to state 104
    SIGNED          shift and go to state 98
    SUPPLY0         shift and go to state 79
    SUPPLY1         shift and go to state 80

  ! IF              [ reduce using rule 393 (empty -> .) ]

    decl                           shift and go to state 502
    integerdecl                    shift and go to state 503
    casex_statement                shift and go to state 606
    sigtype                        shift and go to state 75
    delays                         shift and go to state 607
    blocking_substitution          shift and go to state 608
    while_statement                shift and go to state 609
    sigtypes                       shift and go to state 504
    if_statement                   shift and go to state 610
    empty                          shift and go to state 228
    task_calc                      shift and go to state 611
    for_statement                  shift and go to state 612
    case_statement                 shift and go to state 613
    namedblock                     shift and go to state 614
    taskvardecl                    shift and go to state 615
    block                          shift and go to state 616

state 507

    (370) task -> TASK ID SEMICOLON task_statement . ENDTASK

    ENDTASK         shift and go to state 617


state 508

    (373) taskvardecls -> taskvardecl .

    IF              reduce using rule 373 (taskvardecls -> taskvardecl .)
    FOR             reduce using rule 373 (taskvardecls -> taskvardecl .)
    WHILE           reduce using rule 373 (taskvardecls -> taskvardecl .)
    CASE            reduce using rule 373 (taskvardecls -> taskvardecl .)
    CASEX           reduce using rule 373 (taskvardecls -> taskvardecl .)
    BEGIN           reduce using rule 373 (taskvardecls -> taskvardecl .)
    INTEGER         reduce using rule 373 (taskvardecls -> taskvardecl .)
    DELAY           reduce using rule 373 (taskvardecls -> taskvardecl .)
    INPUT           reduce using rule 373 (taskvardecls -> taskvardecl .)
    OUTPUT          reduce using rule 373 (taskvardecls -> taskvardecl .)
    INOUT           reduce using rule 373 (taskvardecls -> taskvardecl .)
    TRI             reduce using rule 373 (taskvardecls -> taskvardecl .)
    REG             reduce using rule 373 (taskvardecls -> taskvardecl .)
    WIRE            reduce using rule 373 (taskvardecls -> taskvardecl .)
    SIGNED          reduce using rule 373 (taskvardecls -> taskvardecl .)
    SUPPLY0         reduce using rule 373 (taskvardecls -> taskvardecl .)
    SUPPLY1         reduce using rule 373 (taskvardecls -> taskvardecl .)
    LBRACE          reduce using rule 373 (taskvardecls -> taskvardecl .)
    ID              reduce using rule 373 (taskvardecls -> taskvardecl .)


state 509

    (298) instance_bodylist_noname -> instance_bodylist_noname COMMA instance_body_noname .

    SEMICOLON       reduce using rule 298 (instance_bodylist_noname -> instance_bodylist_noname COMMA instance_body_noname .)
    COMMA           reduce using rule 298 (instance_bodylist_noname -> instance_bodylist_noname COMMA instance_body_noname .)


state 510

    (290) instance -> ID parameterlist instance_bodylist SEMICOLON .

    ENDMODULE       reduce using rule 290 (instance -> ID parameterlist instance_bodylist SEMICOLON .)
    GENERATE        reduce using rule 290 (instance -> ID parameterlist instance_bodylist SEMICOLON .)
    INTEGER         reduce using rule 290 (instance -> ID parameterlist instance_bodylist SEMICOLON .)
    REAL            reduce using rule 290 (instance -> ID parameterlist instance_bodylist SEMICOLON .)
    PARAMETER       reduce using rule 290 (instance -> ID parameterlist instance_bodylist SEMICOLON .)
    LOCALPARAM      reduce using rule 290 (instance -> ID parameterlist instance_bodylist SEMICOLON .)
    GENVAR          reduce using rule 290 (instance -> ID parameterlist instance_bodylist SEMICOLON .)
    ASSIGN          reduce using rule 290 (instance -> ID parameterlist instance_bodylist SEMICOLON .)
    ALWAYS          reduce using rule 290 (instance -> ID parameterlist instance_bodylist SEMICOLON .)
    INITIAL         reduce using rule 290 (instance -> ID parameterlist instance_bodylist SEMICOLON .)
    ID              reduce using rule 290 (instance -> ID parameterlist instance_bodylist SEMICOLON .)
    SENS_OR         reduce using rule 290 (instance -> ID parameterlist instance_bodylist SEMICOLON .)
    FUNCTION        reduce using rule 290 (instance -> ID parameterlist instance_bodylist SEMICOLON .)
    TASK            reduce using rule 290 (instance -> ID parameterlist instance_bodylist SEMICOLON .)
    LPAREN          reduce using rule 290 (instance -> ID parameterlist instance_bodylist SEMICOLON .)
    INPUT           reduce using rule 290 (instance -> ID parameterlist instance_bodylist SEMICOLON .)
    OUTPUT          reduce using rule 290 (instance -> ID parameterlist instance_bodylist SEMICOLON .)
    INOUT           reduce using rule 290 (instance -> ID parameterlist instance_bodylist SEMICOLON .)
    TRI             reduce using rule 290 (instance -> ID parameterlist instance_bodylist SEMICOLON .)
    REG             reduce using rule 290 (instance -> ID parameterlist instance_bodylist SEMICOLON .)
    WIRE            reduce using rule 290 (instance -> ID parameterlist instance_bodylist SEMICOLON .)
    SIGNED          reduce using rule 290 (instance -> ID parameterlist instance_bodylist SEMICOLON .)
    SUPPLY0         reduce using rule 290 (instance -> ID parameterlist instance_bodylist SEMICOLON .)
    SUPPLY1         reduce using rule 290 (instance -> ID parameterlist instance_bodylist SEMICOLON .)
    END             reduce using rule 290 (instance -> ID parameterlist instance_bodylist SEMICOLON .)
    IF              reduce using rule 290 (instance -> ID parameterlist instance_bodylist SEMICOLON .)
    FOR             reduce using rule 290 (instance -> ID parameterlist instance_bodylist SEMICOLON .)
    ELSE            reduce using rule 290 (instance -> ID parameterlist instance_bodylist SEMICOLON .)
    ENDGENERATE     reduce using rule 290 (instance -> ID parameterlist instance_bodylist SEMICOLON .)


state 511

    (292) instance_bodylist -> instance_bodylist COMMA . instance_body
    (294) instance_body -> . ID LPAREN instance_ports RPAREN
    (295) instance_body -> . ID width LPAREN instance_ports RPAREN

    ID              shift and go to state 393

    instance_body                  shift and go to state 618

state 512

    (295) instance_body -> ID width . LPAREN instance_ports RPAREN

    LPAREN          shift and go to state 619


state 513

    (294) instance_body -> ID LPAREN . instance_ports RPAREN
    (311) instance_ports -> . instance_ports_list
    (312) instance_ports -> . instance_ports_arg
    (313) instance_ports_list -> . instance_ports_list COMMA instance_port_list
    (314) instance_ports_list -> . instance_port_list
    (315) instance_ports_list -> . empty
    (317) instance_ports_arg -> . instance_ports_arg COMMA instance_port_arg
    (318) instance_ports_arg -> . instance_port_arg
    (316) instance_port_list -> . expression
    (393) empty -> .
    (319) instance_port_arg -> . DOT ID LPAREN identifier RPAREN
    (320) instance_port_arg -> . DOT ID LPAREN expression RPAREN
    (321) instance_port_arg -> . DOT ID LPAREN RPAREN
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    COMMA           reduce using rule 393 (empty -> .)
    RPAREN          reduce using rule 393 (empty -> .)
    DOT             shift and go to state 395
    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    instance_ports_list            shift and go to state 394
    systemcall                     shift and go to state 27
    stringliteral                  shift and go to state 53
    pointer                        shift and go to state 31
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    instance_ports_arg             shift and go to state 396
    const_expression               shift and go to state 29
    scope                          shift and go to state 44
    instance_ports                 shift and go to state 620
    intnumber                      shift and go to state 37
    empty                          shift and go to state 398
    repeat                         shift and go to state 30
    instance_port_list             shift and go to state 399
    concat                         shift and go to state 47
    instance_port_arg              shift and go to state 400
    functioncall                   shift and go to state 55
    identifier                     shift and go to state 57
    expression                     shift and go to state 401

state 514

    (313) instance_ports_list -> instance_ports_list COMMA . instance_port_list
    (316) instance_port_list -> . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    pointer                        shift and go to state 31
    const_expression               shift and go to state 29
    systemcall                     shift and go to state 27
    instance_port_list             shift and go to state 621
    functioncall                   shift and go to state 55
    intnumber                      shift and go to state 37
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    expression                     shift and go to state 401
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 515

    (319) instance_port_arg -> DOT ID . LPAREN identifier RPAREN
    (320) instance_port_arg -> DOT ID . LPAREN expression RPAREN
    (321) instance_port_arg -> DOT ID . LPAREN RPAREN

    LPAREN          shift and go to state 622


state 516

    (317) instance_ports_arg -> instance_ports_arg COMMA . instance_port_arg
    (319) instance_port_arg -> . DOT ID LPAREN identifier RPAREN
    (320) instance_port_arg -> . DOT ID LPAREN expression RPAREN
    (321) instance_port_arg -> . DOT ID LPAREN RPAREN

    DOT             shift and go to state 395

    instance_port_arg              shift and go to state 623

state 517

    (300) instance_body_noname -> LPAREN instance_ports RPAREN .

    SEMICOLON       reduce using rule 300 (instance_body_noname -> LPAREN instance_ports RPAREN .)
    COMMA           reduce using rule 300 (instance_body_noname -> LPAREN instance_ports RPAREN .)


state 518

    (310) param_arg -> DOT . ID LPAREN expression RPAREN

    ID              shift and go to state 624


state 519

    (307) param_args -> param_arg .

    RPAREN          reduce using rule 307 (param_args -> param_arg .)
    COMMA           reduce using rule 307 (param_args -> param_arg .)


state 520

    (308) param_args -> empty .

    RPAREN          reduce using rule 308 (param_args -> empty .)
    COMMA           reduce using rule 308 (param_args -> empty .)


state 521

    (302) parameterlist -> DELAY LPAREN param_args_noname . RPAREN
    (304) param_args_noname -> param_args_noname . COMMA param_arg_noname

    RPAREN          shift and go to state 625
    COMMA           shift and go to state 626


state 522

    (301) parameterlist -> DELAY LPAREN param_args . RPAREN
    (306) param_args -> param_args . COMMA param_arg

    RPAREN          shift and go to state 627
    COMMA           shift and go to state 628


state 523

    (305) param_args_noname -> param_arg_noname .

    RPAREN          reduce using rule 305 (param_args_noname -> param_arg_noname .)
    COMMA           reduce using rule 305 (param_args_noname -> param_arg_noname .)


state 524

    (309) param_arg_noname -> expression .
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RPAREN          reduce using rule 309 (param_arg_noname -> expression .)
    COMMA           reduce using rule 309 (param_arg_noname -> expression .)
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147
    LT              shift and go to state 145
    GT              shift and go to state 149
    LE              shift and go to state 142
    GE              shift and go to state 153
    EQ              shift and go to state 156
    NE              shift and go to state 144
    EQL             shift and go to state 155
    NEL             shift and go to state 136
    AND             shift and go to state 157
    XOR             shift and go to state 150
    XNOR            shift and go to state 148
    OR              shift and go to state 159
    LAND            shift and go to state 154
    LOR             shift and go to state 138
    COND            shift and go to state 139


state 525

    (351) function -> FUNCTION width ID SEMICOLON . function_statement ENDFUNCTION
    (353) function_statement -> . funcvardecls function_calc
    (354) funcvardecls -> . funcvardecls funcvardecl
    (355) funcvardecls -> . funcvardecl
    (356) funcvardecl -> . decl
    (357) funcvardecl -> . integerdecl
    (74) decl -> . sigtypes declnamelist SEMICOLON
    (75) decl -> . sigtypes width declnamelist SEMICOLON
    (84) integerdecl -> . INTEGER integernamelist SEMICOLON
    (85) integerdecl -> . INTEGER SIGNED integernamelist SEMICOLON
    (35) sigtypes -> . sigtypes sigtype
    (36) sigtypes -> . sigtype
    (37) sigtype -> . INPUT
    (38) sigtype -> . OUTPUT
    (39) sigtype -> . INOUT
    (40) sigtype -> . TRI
    (41) sigtype -> . REG
    (42) sigtype -> . WIRE
    (43) sigtype -> . SIGNED
    (44) sigtype -> . SUPPLY0
    (45) sigtype -> . SUPPLY1

    INTEGER         shift and go to state 83
    INPUT           shift and go to state 91
    OUTPUT          shift and go to state 96
    INOUT           shift and go to state 72
    TRI             shift and go to state 89
    REG             shift and go to state 67
    WIRE            shift and go to state 104
    SIGNED          shift and go to state 98
    SUPPLY0         shift and go to state 79
    SUPPLY1         shift and go to state 80

    function_statement             shift and go to state 629
    decl                           shift and go to state 528
    sigtype                        shift and go to state 75
    funcvardecl                    shift and go to state 530
    funcvardecls                   shift and go to state 527
    sigtypes                       shift and go to state 504
    integerdecl                    shift and go to state 529

state 526

    (352) function -> FUNCTION ID SEMICOLON function_statement . ENDFUNCTION

    ENDFUNCTION     shift and go to state 630


state 527

    (353) function_statement -> funcvardecls . function_calc
    (354) funcvardecls -> funcvardecls . funcvardecl
    (358) function_calc -> . blocking_substitution
    (359) function_calc -> . if_statement
    (360) function_calc -> . for_statement
    (361) function_calc -> . while_statement
    (362) function_calc -> . case_statement
    (363) function_calc -> . casex_statement
    (364) function_calc -> . block
    (365) function_calc -> . namedblock
    (356) funcvardecl -> . decl
    (357) funcvardecl -> . integerdecl
    (231) blocking_substitution -> . delays lvalue EQUALS delays rvalue SEMICOLON
    (256) if_statement -> . IF LPAREN cond RPAREN true_statement ELSE else_statement
    (257) if_statement -> . IF LPAREN cond RPAREN true_statement
    (258) if_statement -> . delays IF LPAREN cond RPAREN true_statement ELSE else_statement
    (259) if_statement -> . delays IF LPAREN cond RPAREN true_statement
    (264) for_statement -> . FOR LPAREN forpre forcond forpost RPAREN forcontent_statement
    (272) while_statement -> . WHILE LPAREN cond RPAREN whilecontent_statement
    (274) case_statement -> . CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (275) casex_statement -> . CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (239) block -> . BEGIN block_statements END
    (240) block -> . BEGIN END
    (244) namedblock -> . BEGIN COLON ID namedblock_statements END
    (245) namedblock -> . BEGIN COLON ID END
    (74) decl -> . sigtypes declnamelist SEMICOLON
    (75) decl -> . sigtypes width declnamelist SEMICOLON
    (84) integerdecl -> . INTEGER integernamelist SEMICOLON
    (85) integerdecl -> . INTEGER SIGNED integernamelist SEMICOLON
    (234) delays -> . DELAY LPAREN expression RPAREN
    (235) delays -> . DELAY identifier
    (236) delays -> . DELAY intnumber
    (237) delays -> . DELAY floatnumber
    (238) delays -> . empty
    (35) sigtypes -> . sigtypes sigtype
    (36) sigtypes -> . sigtype
    (393) empty -> .
    (37) sigtype -> . INPUT
    (38) sigtype -> . OUTPUT
    (39) sigtype -> . INOUT
    (40) sigtype -> . TRI
    (41) sigtype -> . REG
    (42) sigtype -> . WIRE
    (43) sigtype -> . SIGNED
    (44) sigtype -> . SUPPLY0
    (45) sigtype -> . SUPPLY1

  ! shift/reduce conflict for IF resolved as shift
    IF              shift and go to state 195
    FOR             shift and go to state 187
    WHILE           shift and go to state 171
    CASE            shift and go to state 173
    CASEX           shift and go to state 178
    BEGIN           shift and go to state 175
    INTEGER         shift and go to state 83
    DELAY           shift and go to state 230
    LBRACE          reduce using rule 393 (empty -> .)
    ID              reduce using rule 393 (empty -> .)
    INPUT           shift and go to state 91
    OUTPUT          shift and go to state 96
    INOUT           shift and go to state 72
    TRI             shift and go to state 89
    REG             shift and go to state 67
    WIRE            shift and go to state 104
    SIGNED          shift and go to state 98
    SUPPLY0         shift and go to state 79
    SUPPLY1         shift and go to state 80

  ! IF              [ reduce using rule 393 (empty -> .) ]

    decl                           shift and go to state 528
    function_calc                  shift and go to state 631
    integerdecl                    shift and go to state 529
    casex_statement                shift and go to state 632
    sigtype                        shift and go to state 75
    delays                         shift and go to state 607
    blocking_substitution          shift and go to state 633
    while_statement                shift and go to state 634
    sigtypes                       shift and go to state 504
    if_statement                   shift and go to state 635
    empty                          shift and go to state 228
    for_statement                  shift and go to state 636
    case_statement                 shift and go to state 637
    namedblock                     shift and go to state 638
    funcvardecl                    shift and go to state 639
    block                          shift and go to state 640

state 528

    (356) funcvardecl -> decl .

    IF              reduce using rule 356 (funcvardecl -> decl .)
    FOR             reduce using rule 356 (funcvardecl -> decl .)
    WHILE           reduce using rule 356 (funcvardecl -> decl .)
    CASE            reduce using rule 356 (funcvardecl -> decl .)
    CASEX           reduce using rule 356 (funcvardecl -> decl .)
    BEGIN           reduce using rule 356 (funcvardecl -> decl .)
    INTEGER         reduce using rule 356 (funcvardecl -> decl .)
    DELAY           reduce using rule 356 (funcvardecl -> decl .)
    INPUT           reduce using rule 356 (funcvardecl -> decl .)
    OUTPUT          reduce using rule 356 (funcvardecl -> decl .)
    INOUT           reduce using rule 356 (funcvardecl -> decl .)
    TRI             reduce using rule 356 (funcvardecl -> decl .)
    REG             reduce using rule 356 (funcvardecl -> decl .)
    WIRE            reduce using rule 356 (funcvardecl -> decl .)
    SIGNED          reduce using rule 356 (funcvardecl -> decl .)
    SUPPLY0         reduce using rule 356 (funcvardecl -> decl .)
    SUPPLY1         reduce using rule 356 (funcvardecl -> decl .)
    LBRACE          reduce using rule 356 (funcvardecl -> decl .)
    ID              reduce using rule 356 (funcvardecl -> decl .)


state 529

    (357) funcvardecl -> integerdecl .

    IF              reduce using rule 357 (funcvardecl -> integerdecl .)
    FOR             reduce using rule 357 (funcvardecl -> integerdecl .)
    WHILE           reduce using rule 357 (funcvardecl -> integerdecl .)
    CASE            reduce using rule 357 (funcvardecl -> integerdecl .)
    CASEX           reduce using rule 357 (funcvardecl -> integerdecl .)
    BEGIN           reduce using rule 357 (funcvardecl -> integerdecl .)
    INTEGER         reduce using rule 357 (funcvardecl -> integerdecl .)
    DELAY           reduce using rule 357 (funcvardecl -> integerdecl .)
    INPUT           reduce using rule 357 (funcvardecl -> integerdecl .)
    OUTPUT          reduce using rule 357 (funcvardecl -> integerdecl .)
    INOUT           reduce using rule 357 (funcvardecl -> integerdecl .)
    TRI             reduce using rule 357 (funcvardecl -> integerdecl .)
    REG             reduce using rule 357 (funcvardecl -> integerdecl .)
    WIRE            reduce using rule 357 (funcvardecl -> integerdecl .)
    SIGNED          reduce using rule 357 (funcvardecl -> integerdecl .)
    SUPPLY0         reduce using rule 357 (funcvardecl -> integerdecl .)
    SUPPLY1         reduce using rule 357 (funcvardecl -> integerdecl .)
    LBRACE          reduce using rule 357 (funcvardecl -> integerdecl .)
    ID              reduce using rule 357 (funcvardecl -> integerdecl .)


state 530

    (355) funcvardecls -> funcvardecl .

    IF              reduce using rule 355 (funcvardecls -> funcvardecl .)
    FOR             reduce using rule 355 (funcvardecls -> funcvardecl .)
    WHILE           reduce using rule 355 (funcvardecls -> funcvardecl .)
    CASE            reduce using rule 355 (funcvardecls -> funcvardecl .)
    CASEX           reduce using rule 355 (funcvardecls -> funcvardecl .)
    BEGIN           reduce using rule 355 (funcvardecls -> funcvardecl .)
    INTEGER         reduce using rule 355 (funcvardecls -> funcvardecl .)
    DELAY           reduce using rule 355 (funcvardecls -> funcvardecl .)
    INPUT           reduce using rule 355 (funcvardecls -> funcvardecl .)
    OUTPUT          reduce using rule 355 (funcvardecls -> funcvardecl .)
    INOUT           reduce using rule 355 (funcvardecls -> funcvardecl .)
    TRI             reduce using rule 355 (funcvardecls -> funcvardecl .)
    REG             reduce using rule 355 (funcvardecls -> funcvardecl .)
    WIRE            reduce using rule 355 (funcvardecls -> funcvardecl .)
    SIGNED          reduce using rule 355 (funcvardecls -> funcvardecl .)
    SUPPLY0         reduce using rule 355 (funcvardecls -> funcvardecl .)
    SUPPLY1         reduce using rule 355 (funcvardecls -> funcvardecl .)
    LBRACE          reduce using rule 355 (funcvardecls -> funcvardecl .)
    ID              reduce using rule 355 (funcvardecls -> funcvardecl .)


state 531

    (291) instance -> SENS_OR parameterlist instance_bodylist SEMICOLON .

    ENDMODULE       reduce using rule 291 (instance -> SENS_OR parameterlist instance_bodylist SEMICOLON .)
    GENERATE        reduce using rule 291 (instance -> SENS_OR parameterlist instance_bodylist SEMICOLON .)
    INTEGER         reduce using rule 291 (instance -> SENS_OR parameterlist instance_bodylist SEMICOLON .)
    REAL            reduce using rule 291 (instance -> SENS_OR parameterlist instance_bodylist SEMICOLON .)
    PARAMETER       reduce using rule 291 (instance -> SENS_OR parameterlist instance_bodylist SEMICOLON .)
    LOCALPARAM      reduce using rule 291 (instance -> SENS_OR parameterlist instance_bodylist SEMICOLON .)
    GENVAR          reduce using rule 291 (instance -> SENS_OR parameterlist instance_bodylist SEMICOLON .)
    ASSIGN          reduce using rule 291 (instance -> SENS_OR parameterlist instance_bodylist SEMICOLON .)
    ALWAYS          reduce using rule 291 (instance -> SENS_OR parameterlist instance_bodylist SEMICOLON .)
    INITIAL         reduce using rule 291 (instance -> SENS_OR parameterlist instance_bodylist SEMICOLON .)
    ID              reduce using rule 291 (instance -> SENS_OR parameterlist instance_bodylist SEMICOLON .)
    SENS_OR         reduce using rule 291 (instance -> SENS_OR parameterlist instance_bodylist SEMICOLON .)
    FUNCTION        reduce using rule 291 (instance -> SENS_OR parameterlist instance_bodylist SEMICOLON .)
    TASK            reduce using rule 291 (instance -> SENS_OR parameterlist instance_bodylist SEMICOLON .)
    LPAREN          reduce using rule 291 (instance -> SENS_OR parameterlist instance_bodylist SEMICOLON .)
    INPUT           reduce using rule 291 (instance -> SENS_OR parameterlist instance_bodylist SEMICOLON .)
    OUTPUT          reduce using rule 291 (instance -> SENS_OR parameterlist instance_bodylist SEMICOLON .)
    INOUT           reduce using rule 291 (instance -> SENS_OR parameterlist instance_bodylist SEMICOLON .)
    TRI             reduce using rule 291 (instance -> SENS_OR parameterlist instance_bodylist SEMICOLON .)
    REG             reduce using rule 291 (instance -> SENS_OR parameterlist instance_bodylist SEMICOLON .)
    WIRE            reduce using rule 291 (instance -> SENS_OR parameterlist instance_bodylist SEMICOLON .)
    SIGNED          reduce using rule 291 (instance -> SENS_OR parameterlist instance_bodylist SEMICOLON .)
    SUPPLY0         reduce using rule 291 (instance -> SENS_OR parameterlist instance_bodylist SEMICOLON .)
    SUPPLY1         reduce using rule 291 (instance -> SENS_OR parameterlist instance_bodylist SEMICOLON .)
    END             reduce using rule 291 (instance -> SENS_OR parameterlist instance_bodylist SEMICOLON .)
    IF              reduce using rule 291 (instance -> SENS_OR parameterlist instance_bodylist SEMICOLON .)
    FOR             reduce using rule 291 (instance -> SENS_OR parameterlist instance_bodylist SEMICOLON .)
    ELSE            reduce using rule 291 (instance -> SENS_OR parameterlist instance_bodylist SEMICOLON .)
    ENDGENERATE     reduce using rule 291 (instance -> SENS_OR parameterlist instance_bodylist SEMICOLON .)


state 532

    (101) localparamdecl -> LOCALPARAM SIGNED width param_substitution_list . SEMICOLON
    (103) param_substitution_list -> param_substitution_list . COMMA param_substitution

    SEMICOLON       shift and go to state 641
    COMMA           shift and go to state 352


state 533

    (99) localparamdecl -> LOCALPARAM SIGNED param_substitution_list SEMICOLON .

    END             reduce using rule 99 (localparamdecl -> LOCALPARAM SIGNED param_substitution_list SEMICOLON .)
    IF              reduce using rule 99 (localparamdecl -> LOCALPARAM SIGNED param_substitution_list SEMICOLON .)
    FOR             reduce using rule 99 (localparamdecl -> LOCALPARAM SIGNED param_substitution_list SEMICOLON .)
    INTEGER         reduce using rule 99 (localparamdecl -> LOCALPARAM SIGNED param_substitution_list SEMICOLON .)
    REAL            reduce using rule 99 (localparamdecl -> LOCALPARAM SIGNED param_substitution_list SEMICOLON .)
    PARAMETER       reduce using rule 99 (localparamdecl -> LOCALPARAM SIGNED param_substitution_list SEMICOLON .)
    LOCALPARAM      reduce using rule 99 (localparamdecl -> LOCALPARAM SIGNED param_substitution_list SEMICOLON .)
    GENVAR          reduce using rule 99 (localparamdecl -> LOCALPARAM SIGNED param_substitution_list SEMICOLON .)
    ASSIGN          reduce using rule 99 (localparamdecl -> LOCALPARAM SIGNED param_substitution_list SEMICOLON .)
    ALWAYS          reduce using rule 99 (localparamdecl -> LOCALPARAM SIGNED param_substitution_list SEMICOLON .)
    INITIAL         reduce using rule 99 (localparamdecl -> LOCALPARAM SIGNED param_substitution_list SEMICOLON .)
    ID              reduce using rule 99 (localparamdecl -> LOCALPARAM SIGNED param_substitution_list SEMICOLON .)
    SENS_OR         reduce using rule 99 (localparamdecl -> LOCALPARAM SIGNED param_substitution_list SEMICOLON .)
    FUNCTION        reduce using rule 99 (localparamdecl -> LOCALPARAM SIGNED param_substitution_list SEMICOLON .)
    TASK            reduce using rule 99 (localparamdecl -> LOCALPARAM SIGNED param_substitution_list SEMICOLON .)
    LPAREN          reduce using rule 99 (localparamdecl -> LOCALPARAM SIGNED param_substitution_list SEMICOLON .)
    INPUT           reduce using rule 99 (localparamdecl -> LOCALPARAM SIGNED param_substitution_list SEMICOLON .)
    OUTPUT          reduce using rule 99 (localparamdecl -> LOCALPARAM SIGNED param_substitution_list SEMICOLON .)
    INOUT           reduce using rule 99 (localparamdecl -> LOCALPARAM SIGNED param_substitution_list SEMICOLON .)
    TRI             reduce using rule 99 (localparamdecl -> LOCALPARAM SIGNED param_substitution_list SEMICOLON .)
    REG             reduce using rule 99 (localparamdecl -> LOCALPARAM SIGNED param_substitution_list SEMICOLON .)
    WIRE            reduce using rule 99 (localparamdecl -> LOCALPARAM SIGNED param_substitution_list SEMICOLON .)
    SIGNED          reduce using rule 99 (localparamdecl -> LOCALPARAM SIGNED param_substitution_list SEMICOLON .)
    SUPPLY0         reduce using rule 99 (localparamdecl -> LOCALPARAM SIGNED param_substitution_list SEMICOLON .)
    SUPPLY1         reduce using rule 99 (localparamdecl -> LOCALPARAM SIGNED param_substitution_list SEMICOLON .)
    ELSE            reduce using rule 99 (localparamdecl -> LOCALPARAM SIGNED param_substitution_list SEMICOLON .)
    ENDGENERATE     reduce using rule 99 (localparamdecl -> LOCALPARAM SIGNED param_substitution_list SEMICOLON .)
    ENDMODULE       reduce using rule 99 (localparamdecl -> LOCALPARAM SIGNED param_substitution_list SEMICOLON .)
    GENERATE        reduce using rule 99 (localparamdecl -> LOCALPARAM SIGNED param_substitution_list SEMICOLON .)
    CASE            reduce using rule 99 (localparamdecl -> LOCALPARAM SIGNED param_substitution_list SEMICOLON .)
    CASEX           reduce using rule 99 (localparamdecl -> LOCALPARAM SIGNED param_substitution_list SEMICOLON .)
    WHILE           reduce using rule 99 (localparamdecl -> LOCALPARAM SIGNED param_substitution_list SEMICOLON .)
    WAIT            reduce using rule 99 (localparamdecl -> LOCALPARAM SIGNED param_substitution_list SEMICOLON .)
    FOREVER         reduce using rule 99 (localparamdecl -> LOCALPARAM SIGNED param_substitution_list SEMICOLON .)
    BEGIN           reduce using rule 99 (localparamdecl -> LOCALPARAM SIGNED param_substitution_list SEMICOLON .)
    FORK            reduce using rule 99 (localparamdecl -> LOCALPARAM SIGNED param_substitution_list SEMICOLON .)
    DELAY           reduce using rule 99 (localparamdecl -> LOCALPARAM SIGNED param_substitution_list SEMICOLON .)
    AT              reduce using rule 99 (localparamdecl -> LOCALPARAM SIGNED param_substitution_list SEMICOLON .)
    DOLLER          reduce using rule 99 (localparamdecl -> LOCALPARAM SIGNED param_substitution_list SEMICOLON .)
    DISABLE         reduce using rule 99 (localparamdecl -> LOCALPARAM SIGNED param_substitution_list SEMICOLON .)
    LBRACE          reduce using rule 99 (localparamdecl -> LOCALPARAM SIGNED param_substitution_list SEMICOLON .)
    SEMICOLON       reduce using rule 99 (localparamdecl -> LOCALPARAM SIGNED param_substitution_list SEMICOLON .)


state 534

    (100) localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .

    END             reduce using rule 100 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    IF              reduce using rule 100 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    FOR             reduce using rule 100 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    INTEGER         reduce using rule 100 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    REAL            reduce using rule 100 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    PARAMETER       reduce using rule 100 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    LOCALPARAM      reduce using rule 100 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    GENVAR          reduce using rule 100 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    ASSIGN          reduce using rule 100 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    ALWAYS          reduce using rule 100 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    INITIAL         reduce using rule 100 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    ID              reduce using rule 100 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    SENS_OR         reduce using rule 100 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    FUNCTION        reduce using rule 100 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    TASK            reduce using rule 100 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    LPAREN          reduce using rule 100 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    INPUT           reduce using rule 100 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    OUTPUT          reduce using rule 100 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    INOUT           reduce using rule 100 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    TRI             reduce using rule 100 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    REG             reduce using rule 100 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    WIRE            reduce using rule 100 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    SIGNED          reduce using rule 100 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    SUPPLY0         reduce using rule 100 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    SUPPLY1         reduce using rule 100 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    ELSE            reduce using rule 100 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    ENDGENERATE     reduce using rule 100 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    ENDMODULE       reduce using rule 100 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    GENERATE        reduce using rule 100 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    CASE            reduce using rule 100 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    CASEX           reduce using rule 100 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    WHILE           reduce using rule 100 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    WAIT            reduce using rule 100 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    FOREVER         reduce using rule 100 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    BEGIN           reduce using rule 100 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    FORK            reduce using rule 100 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    DELAY           reduce using rule 100 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    AT              reduce using rule 100 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    DOLLER          reduce using rule 100 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    DISABLE         reduce using rule 100 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    LBRACE          reduce using rule 100 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    SEMICOLON       reduce using rule 100 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)


state 535

    (102) localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .

    END             reduce using rule 102 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    IF              reduce using rule 102 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    FOR             reduce using rule 102 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    INTEGER         reduce using rule 102 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    REAL            reduce using rule 102 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    PARAMETER       reduce using rule 102 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    LOCALPARAM      reduce using rule 102 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    GENVAR          reduce using rule 102 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    ASSIGN          reduce using rule 102 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    ALWAYS          reduce using rule 102 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    INITIAL         reduce using rule 102 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    ID              reduce using rule 102 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    SENS_OR         reduce using rule 102 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    FUNCTION        reduce using rule 102 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    TASK            reduce using rule 102 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    LPAREN          reduce using rule 102 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    INPUT           reduce using rule 102 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    OUTPUT          reduce using rule 102 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    INOUT           reduce using rule 102 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    TRI             reduce using rule 102 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    REG             reduce using rule 102 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    WIRE            reduce using rule 102 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    SIGNED          reduce using rule 102 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    SUPPLY0         reduce using rule 102 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    SUPPLY1         reduce using rule 102 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    ELSE            reduce using rule 102 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    ENDGENERATE     reduce using rule 102 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    ENDMODULE       reduce using rule 102 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    GENERATE        reduce using rule 102 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    CASE            reduce using rule 102 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    CASEX           reduce using rule 102 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    WHILE           reduce using rule 102 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    WAIT            reduce using rule 102 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    FOREVER         reduce using rule 102 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    BEGIN           reduce using rule 102 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    FORK            reduce using rule 102 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    DELAY           reduce using rule 102 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    AT              reduce using rule 102 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    DOLLER          reduce using rule 102 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    DISABLE         reduce using rule 102 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    LBRACE          reduce using rule 102 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    SEMICOLON       reduce using rule 102 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)


state 536

    (49) ioport -> sigtypes width . portname
    (34) portname -> . ID

    ID              shift and go to state 109

    portname                       shift and go to state 642

state 537

    (48) ioport -> sigtypes portname .

    RPAREN          reduce using rule 48 (ioport -> sigtypes portname .)
    COMMA           reduce using rule 48 (ioport -> sigtypes portname .)


state 538

    (26) param_end -> PARAMETER SIGNED width param_substitution_list .
    (21) param -> PARAMETER SIGNED width param_substitution_list . COMMA
    (103) param_substitution_list -> param_substitution_list . COMMA param_substitution

    RPAREN          reduce using rule 26 (param_end -> PARAMETER SIGNED width param_substitution_list .)
    COMMA           shift and go to state 643


state 539

    (19) param -> PARAMETER SIGNED param_substitution_list COMMA .
    (103) param_substitution_list -> param_substitution_list COMMA . param_substitution
    (105) param_substitution -> . ID EQUALS rvalue

    PARAMETER       reduce using rule 19 (param -> PARAMETER SIGNED param_substitution_list COMMA .)
    ID              shift and go to state 209

    param_substitution             shift and go to state 478

state 540

    (20) param -> PARAMETER width param_substitution_list COMMA .
    (103) param_substitution_list -> param_substitution_list COMMA . param_substitution
    (105) param_substitution -> . ID EQUALS rvalue

    PARAMETER       reduce using rule 20 (param -> PARAMETER width param_substitution_list COMMA .)
    ID              shift and go to state 209

    param_substitution             shift and go to state 478

state 541

    (22) param -> PARAMETER INTEGER param_substitution_list COMMA .
    (103) param_substitution_list -> param_substitution_list COMMA . param_substitution
    (105) param_substitution -> . ID EQUALS rvalue

    PARAMETER       reduce using rule 22 (param -> PARAMETER INTEGER param_substitution_list COMMA .)
    ID              shift and go to state 209

    param_substitution             shift and go to state 478

state 542

    (178) partselect -> pointer LBRACKET expression COLON expression . RBRACKET
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RBRACKET        shift and go to state 644
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147
    LT              shift and go to state 145
    GT              shift and go to state 149
    LE              shift and go to state 142
    GE              shift and go to state 153
    EQ              shift and go to state 156
    NE              shift and go to state 144
    EQL             shift and go to state 155
    NEL             shift and go to state 136
    AND             shift and go to state 157
    XOR             shift and go to state 150
    XNOR            shift and go to state 148
    OR              shift and go to state 159
    LAND            shift and go to state 154
    LOR             shift and go to state 138
    COND            shift and go to state 139


state 543

    (179) partselect -> pointer LBRACKET expression PLUSCOLON expression . RBRACKET
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RBRACKET        shift and go to state 645
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147
    LT              shift and go to state 145
    GT              shift and go to state 149
    LE              shift and go to state 142
    GE              shift and go to state 153
    EQ              shift and go to state 156
    NE              shift and go to state 144
    EQL             shift and go to state 155
    NEL             shift and go to state 136
    AND             shift and go to state 157
    XOR             shift and go to state 150
    XNOR            shift and go to state 148
    OR              shift and go to state 159
    LAND            shift and go to state 154
    LOR             shift and go to state 138
    COND            shift and go to state 139


state 544

    (180) partselect -> pointer LBRACKET expression MINUSCOLON expression . RBRACKET
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RBRACKET        shift and go to state 646
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147
    LT              shift and go to state 145
    GT              shift and go to state 149
    LE              shift and go to state 142
    GE              shift and go to state 153
    EQ              shift and go to state 156
    NE              shift and go to state 144
    EQL             shift and go to state 155
    NEL             shift and go to state 136
    AND             shift and go to state 157
    XOR             shift and go to state 150
    XNOR            shift and go to state 148
    OR              shift and go to state 159
    LAND            shift and go to state 154
    LOR             shift and go to state 138
    COND            shift and go to state 139


state 545

    (346) systemcall -> DOLLER SIGNED LPAREN sysargs RPAREN .

    POWER           reduce using rule 346 (systemcall -> DOLLER SIGNED LPAREN sysargs RPAREN .)
    TIMES           reduce using rule 346 (systemcall -> DOLLER SIGNED LPAREN sysargs RPAREN .)
    DIVIDE          reduce using rule 346 (systemcall -> DOLLER SIGNED LPAREN sysargs RPAREN .)
    MOD             reduce using rule 346 (systemcall -> DOLLER SIGNED LPAREN sysargs RPAREN .)
    PLUS            reduce using rule 346 (systemcall -> DOLLER SIGNED LPAREN sysargs RPAREN .)
    MINUS           reduce using rule 346 (systemcall -> DOLLER SIGNED LPAREN sysargs RPAREN .)
    LSHIFT          reduce using rule 346 (systemcall -> DOLLER SIGNED LPAREN sysargs RPAREN .)
    RSHIFT          reduce using rule 346 (systemcall -> DOLLER SIGNED LPAREN sysargs RPAREN .)
    LSHIFTA         reduce using rule 346 (systemcall -> DOLLER SIGNED LPAREN sysargs RPAREN .)
    RSHIFTA         reduce using rule 346 (systemcall -> DOLLER SIGNED LPAREN sysargs RPAREN .)
    LT              reduce using rule 346 (systemcall -> DOLLER SIGNED LPAREN sysargs RPAREN .)
    GT              reduce using rule 346 (systemcall -> DOLLER SIGNED LPAREN sysargs RPAREN .)
    LE              reduce using rule 346 (systemcall -> DOLLER SIGNED LPAREN sysargs RPAREN .)
    GE              reduce using rule 346 (systemcall -> DOLLER SIGNED LPAREN sysargs RPAREN .)
    EQ              reduce using rule 346 (systemcall -> DOLLER SIGNED LPAREN sysargs RPAREN .)
    NE              reduce using rule 346 (systemcall -> DOLLER SIGNED LPAREN sysargs RPAREN .)
    EQL             reduce using rule 346 (systemcall -> DOLLER SIGNED LPAREN sysargs RPAREN .)
    NEL             reduce using rule 346 (systemcall -> DOLLER SIGNED LPAREN sysargs RPAREN .)
    AND             reduce using rule 346 (systemcall -> DOLLER SIGNED LPAREN sysargs RPAREN .)
    XOR             reduce using rule 346 (systemcall -> DOLLER SIGNED LPAREN sysargs RPAREN .)
    XNOR            reduce using rule 346 (systemcall -> DOLLER SIGNED LPAREN sysargs RPAREN .)
    OR              reduce using rule 346 (systemcall -> DOLLER SIGNED LPAREN sysargs RPAREN .)
    LAND            reduce using rule 346 (systemcall -> DOLLER SIGNED LPAREN sysargs RPAREN .)
    LOR             reduce using rule 346 (systemcall -> DOLLER SIGNED LPAREN sysargs RPAREN .)
    COND            reduce using rule 346 (systemcall -> DOLLER SIGNED LPAREN sysargs RPAREN .)
    RPAREN          reduce using rule 346 (systemcall -> DOLLER SIGNED LPAREN sysargs RPAREN .)
    LBRACE          reduce using rule 346 (systemcall -> DOLLER SIGNED LPAREN sysargs RPAREN .)
    RBRACE          reduce using rule 346 (systemcall -> DOLLER SIGNED LPAREN sysargs RPAREN .)
    COMMA           reduce using rule 346 (systemcall -> DOLLER SIGNED LPAREN sysargs RPAREN .)
    COLON           reduce using rule 346 (systemcall -> DOLLER SIGNED LPAREN sysargs RPAREN .)
    PLUSCOLON       reduce using rule 346 (systemcall -> DOLLER SIGNED LPAREN sysargs RPAREN .)
    MINUSCOLON      reduce using rule 346 (systemcall -> DOLLER SIGNED LPAREN sysargs RPAREN .)
    RBRACKET        reduce using rule 346 (systemcall -> DOLLER SIGNED LPAREN sysargs RPAREN .)
    SEMICOLON       reduce using rule 346 (systemcall -> DOLLER SIGNED LPAREN sysargs RPAREN .)


state 546

    (347) sysargs -> sysargs COMMA . sysarg
    (350) sysarg -> . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    systemcall                     shift and go to state 27
    stringliteral                  shift and go to state 53
    sysarg                         shift and go to state 647
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    expression                     shift and go to state 434
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    floatnumber                    shift and go to state 51

state 547

    (345) systemcall -> DOLLER ID LPAREN sysargs RPAREN .

    POWER           reduce using rule 345 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    TIMES           reduce using rule 345 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    DIVIDE          reduce using rule 345 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    MOD             reduce using rule 345 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    PLUS            reduce using rule 345 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    MINUS           reduce using rule 345 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    LSHIFT          reduce using rule 345 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    RSHIFT          reduce using rule 345 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    LSHIFTA         reduce using rule 345 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    RSHIFTA         reduce using rule 345 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    LT              reduce using rule 345 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    GT              reduce using rule 345 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    LE              reduce using rule 345 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    GE              reduce using rule 345 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    EQ              reduce using rule 345 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    NE              reduce using rule 345 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    EQL             reduce using rule 345 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    NEL             reduce using rule 345 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    AND             reduce using rule 345 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    XOR             reduce using rule 345 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    XNOR            reduce using rule 345 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    OR              reduce using rule 345 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    LAND            reduce using rule 345 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    LOR             reduce using rule 345 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    COND            reduce using rule 345 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    RPAREN          reduce using rule 345 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    LBRACE          reduce using rule 345 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    RBRACE          reduce using rule 345 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    COMMA           reduce using rule 345 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    COLON           reduce using rule 345 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    PLUSCOLON       reduce using rule 345 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    MINUSCOLON      reduce using rule 345 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    RBRACKET        reduce using rule 345 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    SEMICOLON       reduce using rule 345 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)


state 548

    (175) partselect -> identifier LBRACKET expression COLON expression . RBRACKET
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RBRACKET        shift and go to state 648
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147
    LT              shift and go to state 145
    GT              shift and go to state 149
    LE              shift and go to state 142
    GE              shift and go to state 153
    EQ              shift and go to state 156
    NE              shift and go to state 144
    EQL             shift and go to state 155
    NEL             shift and go to state 136
    AND             shift and go to state 157
    XOR             shift and go to state 150
    XNOR            shift and go to state 148
    OR              shift and go to state 159
    LAND            shift and go to state 154
    LOR             shift and go to state 138
    COND            shift and go to state 139


state 549

    (176) partselect -> identifier LBRACKET expression PLUSCOLON expression . RBRACKET
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RBRACKET        shift and go to state 649
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147
    LT              shift and go to state 145
    GT              shift and go to state 149
    LE              shift and go to state 142
    GE              shift and go to state 153
    EQ              shift and go to state 156
    NE              shift and go to state 144
    EQL             shift and go to state 155
    NEL             shift and go to state 136
    AND             shift and go to state 157
    XOR             shift and go to state 150
    XNOR            shift and go to state 148
    OR              shift and go to state 159
    LAND            shift and go to state 154
    LOR             shift and go to state 138
    COND            shift and go to state 139


state 550

    (177) partselect -> identifier LBRACKET expression MINUSCOLON expression . RBRACKET
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RBRACKET        shift and go to state 650
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147
    LT              shift and go to state 145
    GT              shift and go to state 149
    LE              shift and go to state 142
    GE              shift and go to state 153
    EQ              shift and go to state 156
    NE              shift and go to state 144
    EQL             shift and go to state 155
    NEL             shift and go to state 136
    AND             shift and go to state 157
    XOR             shift and go to state 150
    XNOR            shift and go to state 148
    OR              shift and go to state 159
    LAND            shift and go to state 154
    LOR             shift and go to state 138
    COND            shift and go to state 139


state 551

    (367) func_args -> func_args COMMA expression .
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RPAREN          reduce using rule 367 (func_args -> func_args COMMA expression .)
    COMMA           reduce using rule 367 (func_args -> func_args COMMA expression .)
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147
    LT              shift and go to state 145
    GT              shift and go to state 149
    LE              shift and go to state 142
    GE              shift and go to state 153
    EQ              shift and go to state 156
    NE              shift and go to state 144
    EQL             shift and go to state 155
    NEL             shift and go to state 136
    AND             shift and go to state 157
    XOR             shift and go to state 150
    XNOR            shift and go to state 148
    OR              shift and go to state 159
    LAND            shift and go to state 154
    LOR             shift and go to state 138
    COND            shift and go to state 139


state 552

    (161) expression -> expression COND expression COLON expression .
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LSHIFT resolved as shift
  ! shift/reduce conflict for RSHIFT resolved as shift
  ! shift/reduce conflict for LSHIFTA resolved as shift
  ! shift/reduce conflict for RSHIFTA resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for EQL resolved as shift
  ! shift/reduce conflict for NEL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for XNOR resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for COND resolved as shift
    RBRACKET        reduce using rule 161 (expression -> expression COND expression COLON expression .)
    RPAREN          reduce using rule 161 (expression -> expression COND expression COLON expression .)
    COLON           reduce using rule 161 (expression -> expression COND expression COLON expression .)
    PLUSCOLON       reduce using rule 161 (expression -> expression COND expression COLON expression .)
    MINUSCOLON      reduce using rule 161 (expression -> expression COND expression COLON expression .)
    SEMICOLON       reduce using rule 161 (expression -> expression COND expression COLON expression .)
    LBRACE          reduce using rule 161 (expression -> expression COND expression COLON expression .)
    RBRACE          reduce using rule 161 (expression -> expression COND expression COLON expression .)
    COMMA           reduce using rule 161 (expression -> expression COND expression COLON expression .)
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147
    LT              shift and go to state 145
    GT              shift and go to state 149
    LE              shift and go to state 142
    GE              shift and go to state 153
    EQ              shift and go to state 156
    NE              shift and go to state 144
    EQL             shift and go to state 155
    NEL             shift and go to state 136
    AND             shift and go to state 157
    XOR             shift and go to state 150
    XNOR            shift and go to state 148
    OR              shift and go to state 159
    LAND            shift and go to state 154
    LOR             shift and go to state 138
    COND            shift and go to state 139

  ! POWER           [ reduce using rule 161 (expression -> expression COND expression COLON expression .) ]
  ! TIMES           [ reduce using rule 161 (expression -> expression COND expression COLON expression .) ]
  ! DIVIDE          [ reduce using rule 161 (expression -> expression COND expression COLON expression .) ]
  ! MOD             [ reduce using rule 161 (expression -> expression COND expression COLON expression .) ]
  ! PLUS            [ reduce using rule 161 (expression -> expression COND expression COLON expression .) ]
  ! MINUS           [ reduce using rule 161 (expression -> expression COND expression COLON expression .) ]
  ! LSHIFT          [ reduce using rule 161 (expression -> expression COND expression COLON expression .) ]
  ! RSHIFT          [ reduce using rule 161 (expression -> expression COND expression COLON expression .) ]
  ! LSHIFTA         [ reduce using rule 161 (expression -> expression COND expression COLON expression .) ]
  ! RSHIFTA         [ reduce using rule 161 (expression -> expression COND expression COLON expression .) ]
  ! LT              [ reduce using rule 161 (expression -> expression COND expression COLON expression .) ]
  ! GT              [ reduce using rule 161 (expression -> expression COND expression COLON expression .) ]
  ! LE              [ reduce using rule 161 (expression -> expression COND expression COLON expression .) ]
  ! GE              [ reduce using rule 161 (expression -> expression COND expression COLON expression .) ]
  ! EQ              [ reduce using rule 161 (expression -> expression COND expression COLON expression .) ]
  ! NE              [ reduce using rule 161 (expression -> expression COND expression COLON expression .) ]
  ! EQL             [ reduce using rule 161 (expression -> expression COND expression COLON expression .) ]
  ! NEL             [ reduce using rule 161 (expression -> expression COND expression COLON expression .) ]
  ! AND             [ reduce using rule 161 (expression -> expression COND expression COLON expression .) ]
  ! XOR             [ reduce using rule 161 (expression -> expression COND expression COLON expression .) ]
  ! XNOR            [ reduce using rule 161 (expression -> expression COND expression COLON expression .) ]
  ! OR              [ reduce using rule 161 (expression -> expression COND expression COLON expression .) ]
  ! LAND            [ reduce using rule 161 (expression -> expression COND expression COLON expression .) ]
  ! LOR             [ reduce using rule 161 (expression -> expression COND expression COLON expression .) ]
  ! COND            [ reduce using rule 161 (expression -> expression COND expression COLON expression .) ]


state 553

    (286) wait_statement -> WAIT LPAREN cond RPAREN . waitcontent_statement
    (287) waitcontent_statement -> . basic_statement
    (288) waitcontent_statement -> . SEMICOLON
    (216) basic_statement -> . if_statement
    (217) basic_statement -> . case_statement
    (218) basic_statement -> . casex_statement
    (219) basic_statement -> . for_statement
    (220) basic_statement -> . while_statement
    (221) basic_statement -> . event_statement
    (222) basic_statement -> . wait_statement
    (223) basic_statement -> . forever_statement
    (224) basic_statement -> . block
    (225) basic_statement -> . namedblock
    (226) basic_statement -> . parallelblock
    (227) basic_statement -> . blocking_substitution
    (228) basic_statement -> . nonblocking_substitution
    (229) basic_statement -> . single_statement
    (256) if_statement -> . IF LPAREN cond RPAREN true_statement ELSE else_statement
    (257) if_statement -> . IF LPAREN cond RPAREN true_statement
    (258) if_statement -> . delays IF LPAREN cond RPAREN true_statement ELSE else_statement
    (259) if_statement -> . delays IF LPAREN cond RPAREN true_statement
    (274) case_statement -> . CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (275) casex_statement -> . CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (264) for_statement -> . FOR LPAREN forpre forcond forpost RPAREN forcontent_statement
    (272) while_statement -> . WHILE LPAREN cond RPAREN whilecontent_statement
    (285) event_statement -> . senslist SEMICOLON
    (286) wait_statement -> . WAIT LPAREN cond RPAREN waitcontent_statement
    (289) forever_statement -> . FOREVER basic_statement
    (239) block -> . BEGIN block_statements END
    (240) block -> . BEGIN END
    (244) namedblock -> . BEGIN COLON ID namedblock_statements END
    (245) namedblock -> . BEGIN COLON ID END
    (254) parallelblock -> . FORK block_statements JOIN
    (255) parallelblock -> . FORK JOIN
    (231) blocking_substitution -> . delays lvalue EQUALS delays rvalue SEMICOLON
    (233) nonblocking_substitution -> . delays lvalue LE delays rvalue SEMICOLON
    (390) single_statement -> . DELAY expression SEMICOLON
    (391) single_statement -> . systemcall SEMICOLON
    (392) single_statement -> . disable SEMICOLON
    (234) delays -> . DELAY LPAREN expression RPAREN
    (235) delays -> . DELAY identifier
    (236) delays -> . DELAY intnumber
    (237) delays -> . DELAY floatnumber
    (238) delays -> . empty
    (197) senslist -> . AT LPAREN edgesigs RPAREN
    (204) senslist -> . empty
    (205) senslist -> . AT levelsig
    (206) senslist -> . AT LPAREN levelsigs RPAREN
    (214) senslist -> . AT TIMES
    (215) senslist -> . AT LPAREN TIMES RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (389) disable -> . DISABLE ID
    (393) empty -> .

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 651
    IF              shift and go to state 195
    CASE            shift and go to state 173
    CASEX           shift and go to state 178
    FOR             shift and go to state 187
    WHILE           shift and go to state 171
    WAIT            shift and go to state 168
    FOREVER         shift and go to state 167
    BEGIN           shift and go to state 175
    FORK            shift and go to state 166
    DELAY           shift and go to state 170
    AT              shift and go to state 193
    DOLLER          shift and go to state 54
    DISABLE         shift and go to state 180
    LBRACE          reduce using rule 393 (empty -> .)
    ID              reduce using rule 393 (empty -> .)

  ! IF              [ reduce using rule 393 (empty -> .) ]
  ! SEMICOLON       [ reduce using rule 393 (empty -> .) ]

    parallelblock                  shift and go to state 169
    forever_statement              shift and go to state 172
    casex_statement                shift and go to state 174
    delays                         shift and go to state 176
    blocking_substitution          shift and go to state 177
    while_statement                shift and go to state 179
    waitcontent_statement          shift and go to state 652
    systemcall                     shift and go to state 181
    if_statement                   shift and go to state 182
    nonblocking_substitution       shift and go to state 183
    empty                          shift and go to state 184
    basic_statement                shift and go to state 653
    for_statement                  shift and go to state 186
    event_statement                shift and go to state 189
    wait_statement                 shift and go to state 190
    case_statement                 shift and go to state 191
    disable                        shift and go to state 192
    namedblock                     shift and go to state 194
    senslist                       shift and go to state 196
    block                          shift and go to state 198
    single_statement               shift and go to state 197

state 554

    (234) delays -> DELAY LPAREN expression RPAREN .
    (162) expression -> LPAREN expression RPAREN .

    IF              reduce using rule 234 (delays -> DELAY LPAREN expression RPAREN .)
    LBRACE          reduce using rule 234 (delays -> DELAY LPAREN expression RPAREN .)
    ID              reduce using rule 234 (delays -> DELAY LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 162 (expression -> LPAREN expression RPAREN .)
    POWER           reduce using rule 162 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 162 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 162 (expression -> LPAREN expression RPAREN .)
    MOD             reduce using rule 162 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 162 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 162 (expression -> LPAREN expression RPAREN .)
    LSHIFT          reduce using rule 162 (expression -> LPAREN expression RPAREN .)
    RSHIFT          reduce using rule 162 (expression -> LPAREN expression RPAREN .)
    LSHIFTA         reduce using rule 162 (expression -> LPAREN expression RPAREN .)
    RSHIFTA         reduce using rule 162 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 162 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 162 (expression -> LPAREN expression RPAREN .)
    LE              reduce using rule 162 (expression -> LPAREN expression RPAREN .)
    GE              reduce using rule 162 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 162 (expression -> LPAREN expression RPAREN .)
    NE              reduce using rule 162 (expression -> LPAREN expression RPAREN .)
    EQL             reduce using rule 162 (expression -> LPAREN expression RPAREN .)
    NEL             reduce using rule 162 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 162 (expression -> LPAREN expression RPAREN .)
    XOR             reduce using rule 162 (expression -> LPAREN expression RPAREN .)
    XNOR            reduce using rule 162 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 162 (expression -> LPAREN expression RPAREN .)
    LAND            reduce using rule 162 (expression -> LPAREN expression RPAREN .)
    LOR             reduce using rule 162 (expression -> LPAREN expression RPAREN .)
    COND            reduce using rule 162 (expression -> LPAREN expression RPAREN .)


state 555

    (272) while_statement -> WHILE LPAREN cond RPAREN . whilecontent_statement
    (273) whilecontent_statement -> . basic_statement
    (216) basic_statement -> . if_statement
    (217) basic_statement -> . case_statement
    (218) basic_statement -> . casex_statement
    (219) basic_statement -> . for_statement
    (220) basic_statement -> . while_statement
    (221) basic_statement -> . event_statement
    (222) basic_statement -> . wait_statement
    (223) basic_statement -> . forever_statement
    (224) basic_statement -> . block
    (225) basic_statement -> . namedblock
    (226) basic_statement -> . parallelblock
    (227) basic_statement -> . blocking_substitution
    (228) basic_statement -> . nonblocking_substitution
    (229) basic_statement -> . single_statement
    (256) if_statement -> . IF LPAREN cond RPAREN true_statement ELSE else_statement
    (257) if_statement -> . IF LPAREN cond RPAREN true_statement
    (258) if_statement -> . delays IF LPAREN cond RPAREN true_statement ELSE else_statement
    (259) if_statement -> . delays IF LPAREN cond RPAREN true_statement
    (274) case_statement -> . CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (275) casex_statement -> . CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (264) for_statement -> . FOR LPAREN forpre forcond forpost RPAREN forcontent_statement
    (272) while_statement -> . WHILE LPAREN cond RPAREN whilecontent_statement
    (285) event_statement -> . senslist SEMICOLON
    (286) wait_statement -> . WAIT LPAREN cond RPAREN waitcontent_statement
    (289) forever_statement -> . FOREVER basic_statement
    (239) block -> . BEGIN block_statements END
    (240) block -> . BEGIN END
    (244) namedblock -> . BEGIN COLON ID namedblock_statements END
    (245) namedblock -> . BEGIN COLON ID END
    (254) parallelblock -> . FORK block_statements JOIN
    (255) parallelblock -> . FORK JOIN
    (231) blocking_substitution -> . delays lvalue EQUALS delays rvalue SEMICOLON
    (233) nonblocking_substitution -> . delays lvalue LE delays rvalue SEMICOLON
    (390) single_statement -> . DELAY expression SEMICOLON
    (391) single_statement -> . systemcall SEMICOLON
    (392) single_statement -> . disable SEMICOLON
    (234) delays -> . DELAY LPAREN expression RPAREN
    (235) delays -> . DELAY identifier
    (236) delays -> . DELAY intnumber
    (237) delays -> . DELAY floatnumber
    (238) delays -> . empty
    (197) senslist -> . AT LPAREN edgesigs RPAREN
    (204) senslist -> . empty
    (205) senslist -> . AT levelsig
    (206) senslist -> . AT LPAREN levelsigs RPAREN
    (214) senslist -> . AT TIMES
    (215) senslist -> . AT LPAREN TIMES RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (389) disable -> . DISABLE ID
    (393) empty -> .

  ! shift/reduce conflict for IF resolved as shift
    IF              shift and go to state 195
    CASE            shift and go to state 173
    CASEX           shift and go to state 178
    FOR             shift and go to state 187
    WHILE           shift and go to state 171
    WAIT            shift and go to state 168
    FOREVER         shift and go to state 167
    BEGIN           shift and go to state 175
    FORK            shift and go to state 166
    DELAY           shift and go to state 170
    AT              shift and go to state 193
    DOLLER          shift and go to state 54
    DISABLE         shift and go to state 180
    LBRACE          reduce using rule 393 (empty -> .)
    ID              reduce using rule 393 (empty -> .)
    SEMICOLON       reduce using rule 393 (empty -> .)

  ! IF              [ reduce using rule 393 (empty -> .) ]

    parallelblock                  shift and go to state 169
    forever_statement              shift and go to state 172
    casex_statement                shift and go to state 174
    delays                         shift and go to state 176
    blocking_substitution          shift and go to state 177
    while_statement                shift and go to state 179
    systemcall                     shift and go to state 181
    if_statement                   shift and go to state 182
    nonblocking_substitution       shift and go to state 183
    empty                          shift and go to state 184
    basic_statement                shift and go to state 654
    for_statement                  shift and go to state 186
    event_statement                shift and go to state 189
    wait_statement                 shift and go to state 190
    case_statement                 shift and go to state 191
    whilecontent_statement         shift and go to state 655
    disable                        shift and go to state 192
    namedblock                     shift and go to state 194
    senslist                       shift and go to state 196
    block                          shift and go to state 198
    single_statement               shift and go to state 197

state 556

    (274) case_statement -> CASE LPAREN case_comp RPAREN . casecontent_statements ENDCASE
    (277) casecontent_statements -> . casecontent_statements casecontent_statement
    (278) casecontent_statements -> . casecontent_statement
    (279) casecontent_statement -> . casecontent_condition COLON basic_statement
    (282) casecontent_statement -> . DEFAULT COLON basic_statement
    (280) casecontent_condition -> . casecontent_condition COMMA expression
    (281) casecontent_condition -> . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    DEFAULT         shift and go to state 656
    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    casecontent_statement          shift and go to state 658
    pointer                        shift and go to state 31
    systemcall                     shift and go to state 27
    stringliteral                  shift and go to state 53
    intnumber                      shift and go to state 37
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    concat                         shift and go to state 47
    scope                          shift and go to state 44
    casecontent_condition          shift and go to state 657
    identifier                     shift and go to state 57
    expression                     shift and go to state 660
    casecontent_statements         shift and go to state 659

state 557

    (249) namedblock_statement -> decl .

    END             reduce using rule 249 (namedblock_statement -> decl .)
    INTEGER         reduce using rule 249 (namedblock_statement -> decl .)
    REAL            reduce using rule 249 (namedblock_statement -> decl .)
    PARAMETER       reduce using rule 249 (namedblock_statement -> decl .)
    LOCALPARAM      reduce using rule 249 (namedblock_statement -> decl .)
    IF              reduce using rule 249 (namedblock_statement -> decl .)
    CASE            reduce using rule 249 (namedblock_statement -> decl .)
    CASEX           reduce using rule 249 (namedblock_statement -> decl .)
    FOR             reduce using rule 249 (namedblock_statement -> decl .)
    WHILE           reduce using rule 249 (namedblock_statement -> decl .)
    WAIT            reduce using rule 249 (namedblock_statement -> decl .)
    FOREVER         reduce using rule 249 (namedblock_statement -> decl .)
    BEGIN           reduce using rule 249 (namedblock_statement -> decl .)
    FORK            reduce using rule 249 (namedblock_statement -> decl .)
    DELAY           reduce using rule 249 (namedblock_statement -> decl .)
    AT              reduce using rule 249 (namedblock_statement -> decl .)
    DOLLER          reduce using rule 249 (namedblock_statement -> decl .)
    DISABLE         reduce using rule 249 (namedblock_statement -> decl .)
    INPUT           reduce using rule 249 (namedblock_statement -> decl .)
    OUTPUT          reduce using rule 249 (namedblock_statement -> decl .)
    INOUT           reduce using rule 249 (namedblock_statement -> decl .)
    TRI             reduce using rule 249 (namedblock_statement -> decl .)
    REG             reduce using rule 249 (namedblock_statement -> decl .)
    WIRE            reduce using rule 249 (namedblock_statement -> decl .)
    SIGNED          reduce using rule 249 (namedblock_statement -> decl .)
    SUPPLY0         reduce using rule 249 (namedblock_statement -> decl .)
    SUPPLY1         reduce using rule 249 (namedblock_statement -> decl .)
    LBRACE          reduce using rule 249 (namedblock_statement -> decl .)
    ID              reduce using rule 249 (namedblock_statement -> decl .)
    SEMICOLON       reduce using rule 249 (namedblock_statement -> decl .)


state 558

    (253) namedblock_statement -> localparamdecl .

    END             reduce using rule 253 (namedblock_statement -> localparamdecl .)
    INTEGER         reduce using rule 253 (namedblock_statement -> localparamdecl .)
    REAL            reduce using rule 253 (namedblock_statement -> localparamdecl .)
    PARAMETER       reduce using rule 253 (namedblock_statement -> localparamdecl .)
    LOCALPARAM      reduce using rule 253 (namedblock_statement -> localparamdecl .)
    IF              reduce using rule 253 (namedblock_statement -> localparamdecl .)
    CASE            reduce using rule 253 (namedblock_statement -> localparamdecl .)
    CASEX           reduce using rule 253 (namedblock_statement -> localparamdecl .)
    FOR             reduce using rule 253 (namedblock_statement -> localparamdecl .)
    WHILE           reduce using rule 253 (namedblock_statement -> localparamdecl .)
    WAIT            reduce using rule 253 (namedblock_statement -> localparamdecl .)
    FOREVER         reduce using rule 253 (namedblock_statement -> localparamdecl .)
    BEGIN           reduce using rule 253 (namedblock_statement -> localparamdecl .)
    FORK            reduce using rule 253 (namedblock_statement -> localparamdecl .)
    DELAY           reduce using rule 253 (namedblock_statement -> localparamdecl .)
    AT              reduce using rule 253 (namedblock_statement -> localparamdecl .)
    DOLLER          reduce using rule 253 (namedblock_statement -> localparamdecl .)
    DISABLE         reduce using rule 253 (namedblock_statement -> localparamdecl .)
    INPUT           reduce using rule 253 (namedblock_statement -> localparamdecl .)
    OUTPUT          reduce using rule 253 (namedblock_statement -> localparamdecl .)
    INOUT           reduce using rule 253 (namedblock_statement -> localparamdecl .)
    TRI             reduce using rule 253 (namedblock_statement -> localparamdecl .)
    REG             reduce using rule 253 (namedblock_statement -> localparamdecl .)
    WIRE            reduce using rule 253 (namedblock_statement -> localparamdecl .)
    SIGNED          reduce using rule 253 (namedblock_statement -> localparamdecl .)
    SUPPLY0         reduce using rule 253 (namedblock_statement -> localparamdecl .)
    SUPPLY1         reduce using rule 253 (namedblock_statement -> localparamdecl .)
    LBRACE          reduce using rule 253 (namedblock_statement -> localparamdecl .)
    ID              reduce using rule 253 (namedblock_statement -> localparamdecl .)
    SEMICOLON       reduce using rule 253 (namedblock_statement -> localparamdecl .)


state 559

    (250) namedblock_statement -> integerdecl .

    END             reduce using rule 250 (namedblock_statement -> integerdecl .)
    INTEGER         reduce using rule 250 (namedblock_statement -> integerdecl .)
    REAL            reduce using rule 250 (namedblock_statement -> integerdecl .)
    PARAMETER       reduce using rule 250 (namedblock_statement -> integerdecl .)
    LOCALPARAM      reduce using rule 250 (namedblock_statement -> integerdecl .)
    IF              reduce using rule 250 (namedblock_statement -> integerdecl .)
    CASE            reduce using rule 250 (namedblock_statement -> integerdecl .)
    CASEX           reduce using rule 250 (namedblock_statement -> integerdecl .)
    FOR             reduce using rule 250 (namedblock_statement -> integerdecl .)
    WHILE           reduce using rule 250 (namedblock_statement -> integerdecl .)
    WAIT            reduce using rule 250 (namedblock_statement -> integerdecl .)
    FOREVER         reduce using rule 250 (namedblock_statement -> integerdecl .)
    BEGIN           reduce using rule 250 (namedblock_statement -> integerdecl .)
    FORK            reduce using rule 250 (namedblock_statement -> integerdecl .)
    DELAY           reduce using rule 250 (namedblock_statement -> integerdecl .)
    AT              reduce using rule 250 (namedblock_statement -> integerdecl .)
    DOLLER          reduce using rule 250 (namedblock_statement -> integerdecl .)
    DISABLE         reduce using rule 250 (namedblock_statement -> integerdecl .)
    INPUT           reduce using rule 250 (namedblock_statement -> integerdecl .)
    OUTPUT          reduce using rule 250 (namedblock_statement -> integerdecl .)
    INOUT           reduce using rule 250 (namedblock_statement -> integerdecl .)
    TRI             reduce using rule 250 (namedblock_statement -> integerdecl .)
    REG             reduce using rule 250 (namedblock_statement -> integerdecl .)
    WIRE            reduce using rule 250 (namedblock_statement -> integerdecl .)
    SIGNED          reduce using rule 250 (namedblock_statement -> integerdecl .)
    SUPPLY0         reduce using rule 250 (namedblock_statement -> integerdecl .)
    SUPPLY1         reduce using rule 250 (namedblock_statement -> integerdecl .)
    LBRACE          reduce using rule 250 (namedblock_statement -> integerdecl .)
    ID              reduce using rule 250 (namedblock_statement -> integerdecl .)
    SEMICOLON       reduce using rule 250 (namedblock_statement -> integerdecl .)


state 560

    (252) namedblock_statement -> parameterdecl .

    END             reduce using rule 252 (namedblock_statement -> parameterdecl .)
    INTEGER         reduce using rule 252 (namedblock_statement -> parameterdecl .)
    REAL            reduce using rule 252 (namedblock_statement -> parameterdecl .)
    PARAMETER       reduce using rule 252 (namedblock_statement -> parameterdecl .)
    LOCALPARAM      reduce using rule 252 (namedblock_statement -> parameterdecl .)
    IF              reduce using rule 252 (namedblock_statement -> parameterdecl .)
    CASE            reduce using rule 252 (namedblock_statement -> parameterdecl .)
    CASEX           reduce using rule 252 (namedblock_statement -> parameterdecl .)
    FOR             reduce using rule 252 (namedblock_statement -> parameterdecl .)
    WHILE           reduce using rule 252 (namedblock_statement -> parameterdecl .)
    WAIT            reduce using rule 252 (namedblock_statement -> parameterdecl .)
    FOREVER         reduce using rule 252 (namedblock_statement -> parameterdecl .)
    BEGIN           reduce using rule 252 (namedblock_statement -> parameterdecl .)
    FORK            reduce using rule 252 (namedblock_statement -> parameterdecl .)
    DELAY           reduce using rule 252 (namedblock_statement -> parameterdecl .)
    AT              reduce using rule 252 (namedblock_statement -> parameterdecl .)
    DOLLER          reduce using rule 252 (namedblock_statement -> parameterdecl .)
    DISABLE         reduce using rule 252 (namedblock_statement -> parameterdecl .)
    INPUT           reduce using rule 252 (namedblock_statement -> parameterdecl .)
    OUTPUT          reduce using rule 252 (namedblock_statement -> parameterdecl .)
    INOUT           reduce using rule 252 (namedblock_statement -> parameterdecl .)
    TRI             reduce using rule 252 (namedblock_statement -> parameterdecl .)
    REG             reduce using rule 252 (namedblock_statement -> parameterdecl .)
    WIRE            reduce using rule 252 (namedblock_statement -> parameterdecl .)
    SIGNED          reduce using rule 252 (namedblock_statement -> parameterdecl .)
    SUPPLY0         reduce using rule 252 (namedblock_statement -> parameterdecl .)
    SUPPLY1         reduce using rule 252 (namedblock_statement -> parameterdecl .)
    LBRACE          reduce using rule 252 (namedblock_statement -> parameterdecl .)
    ID              reduce using rule 252 (namedblock_statement -> parameterdecl .)
    SEMICOLON       reduce using rule 252 (namedblock_statement -> parameterdecl .)


state 561

    (245) namedblock -> BEGIN COLON ID END .

    ENDMODULE       reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    GENERATE        reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    INTEGER         reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    REAL            reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    PARAMETER       reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    LOCALPARAM      reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    GENVAR          reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    ASSIGN          reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    ALWAYS          reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    INITIAL         reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    ID              reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    SENS_OR         reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    FUNCTION        reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    TASK            reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    LPAREN          reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    INPUT           reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    OUTPUT          reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    INOUT           reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    TRI             reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    REG             reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    WIRE            reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    SIGNED          reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    SUPPLY0         reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    SUPPLY1         reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    ENDGENERATE     reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    IF              reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    FOR             reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    ELSE            reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    END             reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    JOIN            reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    CASE            reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    CASEX           reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    WHILE           reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    WAIT            reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    FOREVER         reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    BEGIN           reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    FORK            reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    DELAY           reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    AT              reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    DOLLER          reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    DISABLE         reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    LBRACE          reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    SEMICOLON       reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    ENDTASK         reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    ENDFUNCTION     reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    ENDCASE         reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    DEFAULT         reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    MINUS           reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    PLUS            reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    LNOT            reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    NOT             reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    AND             reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    NAND            reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    NOR             reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    OR              reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    XOR             reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    XNOR            reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    INTNUMBER_DEC   reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    SIGNED_INTNUMBER_DEC reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    INTNUMBER_BIN   reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    SIGNED_INTNUMBER_BIN reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    INTNUMBER_OCT   reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    SIGNED_INTNUMBER_OCT reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    INTNUMBER_HEX   reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    SIGNED_INTNUMBER_HEX reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    FLOATNUMBER     reduce using rule 245 (namedblock -> BEGIN COLON ID END .)
    STRING_LITERAL  reduce using rule 245 (namedblock -> BEGIN COLON ID END .)


state 562

    (244) namedblock -> BEGIN COLON ID namedblock_statements . END
    (246) namedblock_statements -> namedblock_statements . namedblock_statement
    (248) namedblock_statement -> . basic_statement
    (249) namedblock_statement -> . decl
    (250) namedblock_statement -> . integerdecl
    (251) namedblock_statement -> . realdecl
    (252) namedblock_statement -> . parameterdecl
    (253) namedblock_statement -> . localparamdecl
    (216) basic_statement -> . if_statement
    (217) basic_statement -> . case_statement
    (218) basic_statement -> . casex_statement
    (219) basic_statement -> . for_statement
    (220) basic_statement -> . while_statement
    (221) basic_statement -> . event_statement
    (222) basic_statement -> . wait_statement
    (223) basic_statement -> . forever_statement
    (224) basic_statement -> . block
    (225) basic_statement -> . namedblock
    (226) basic_statement -> . parallelblock
    (227) basic_statement -> . blocking_substitution
    (228) basic_statement -> . nonblocking_substitution
    (229) basic_statement -> . single_statement
    (74) decl -> . sigtypes declnamelist SEMICOLON
    (75) decl -> . sigtypes width declnamelist SEMICOLON
    (84) integerdecl -> . INTEGER integernamelist SEMICOLON
    (85) integerdecl -> . INTEGER SIGNED integernamelist SEMICOLON
    (89) realdecl -> . REAL realnamelist SEMICOLON
    (93) parameterdecl -> . PARAMETER param_substitution_list SEMICOLON
    (94) parameterdecl -> . PARAMETER SIGNED param_substitution_list SEMICOLON
    (95) parameterdecl -> . PARAMETER width param_substitution_list SEMICOLON
    (96) parameterdecl -> . PARAMETER SIGNED width param_substitution_list SEMICOLON
    (97) parameterdecl -> . PARAMETER INTEGER param_substitution_list SEMICOLON
    (98) localparamdecl -> . LOCALPARAM param_substitution_list SEMICOLON
    (99) localparamdecl -> . LOCALPARAM SIGNED param_substitution_list SEMICOLON
    (100) localparamdecl -> . LOCALPARAM width param_substitution_list SEMICOLON
    (101) localparamdecl -> . LOCALPARAM SIGNED width param_substitution_list SEMICOLON
    (102) localparamdecl -> . LOCALPARAM INTEGER param_substitution_list SEMICOLON
    (256) if_statement -> . IF LPAREN cond RPAREN true_statement ELSE else_statement
    (257) if_statement -> . IF LPAREN cond RPAREN true_statement
    (258) if_statement -> . delays IF LPAREN cond RPAREN true_statement ELSE else_statement
    (259) if_statement -> . delays IF LPAREN cond RPAREN true_statement
    (274) case_statement -> . CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (275) casex_statement -> . CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (264) for_statement -> . FOR LPAREN forpre forcond forpost RPAREN forcontent_statement
    (272) while_statement -> . WHILE LPAREN cond RPAREN whilecontent_statement
    (285) event_statement -> . senslist SEMICOLON
    (286) wait_statement -> . WAIT LPAREN cond RPAREN waitcontent_statement
    (289) forever_statement -> . FOREVER basic_statement
    (239) block -> . BEGIN block_statements END
    (240) block -> . BEGIN END
    (244) namedblock -> . BEGIN COLON ID namedblock_statements END
    (245) namedblock -> . BEGIN COLON ID END
    (254) parallelblock -> . FORK block_statements JOIN
    (255) parallelblock -> . FORK JOIN
    (231) blocking_substitution -> . delays lvalue EQUALS delays rvalue SEMICOLON
    (233) nonblocking_substitution -> . delays lvalue LE delays rvalue SEMICOLON
    (390) single_statement -> . DELAY expression SEMICOLON
    (391) single_statement -> . systemcall SEMICOLON
    (392) single_statement -> . disable SEMICOLON
    (35) sigtypes -> . sigtypes sigtype
    (36) sigtypes -> . sigtype
    (234) delays -> . DELAY LPAREN expression RPAREN
    (235) delays -> . DELAY identifier
    (236) delays -> . DELAY intnumber
    (237) delays -> . DELAY floatnumber
    (238) delays -> . empty
    (197) senslist -> . AT LPAREN edgesigs RPAREN
    (204) senslist -> . empty
    (205) senslist -> . AT levelsig
    (206) senslist -> . AT LPAREN levelsigs RPAREN
    (214) senslist -> . AT TIMES
    (215) senslist -> . AT LPAREN TIMES RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (389) disable -> . DISABLE ID
    (37) sigtype -> . INPUT
    (38) sigtype -> . OUTPUT
    (39) sigtype -> . INOUT
    (40) sigtype -> . TRI
    (41) sigtype -> . REG
    (42) sigtype -> . WIRE
    (43) sigtype -> . SIGNED
    (44) sigtype -> . SUPPLY0
    (45) sigtype -> . SUPPLY1
    (393) empty -> .

  ! shift/reduce conflict for IF resolved as shift
    END             shift and go to state 661
    INTEGER         shift and go to state 83
    REAL            shift and go to state 63
    PARAMETER       shift and go to state 70
    LOCALPARAM      shift and go to state 101
    IF              shift and go to state 195
    CASE            shift and go to state 173
    CASEX           shift and go to state 178
    FOR             shift and go to state 187
    WHILE           shift and go to state 171
    WAIT            shift and go to state 168
    FOREVER         shift and go to state 167
    BEGIN           shift and go to state 175
    FORK            shift and go to state 166
    DELAY           shift and go to state 170
    AT              shift and go to state 193
    DOLLER          shift and go to state 54
    DISABLE         shift and go to state 180
    INPUT           shift and go to state 91
    OUTPUT          shift and go to state 96
    INOUT           shift and go to state 72
    TRI             shift and go to state 89
    REG             shift and go to state 67
    WIRE            shift and go to state 104
    SIGNED          shift and go to state 98
    SUPPLY0         shift and go to state 79
    SUPPLY1         shift and go to state 80
    LBRACE          reduce using rule 393 (empty -> .)
    ID              reduce using rule 393 (empty -> .)
    SEMICOLON       reduce using rule 393 (empty -> .)

  ! IF              [ reduce using rule 393 (empty -> .) ]

    decl                           shift and go to state 557
    localparamdecl                 shift and go to state 558
    systemcall                     shift and go to state 181
    parallelblock                  shift and go to state 169
    integerdecl                    shift and go to state 559
    forever_statement              shift and go to state 172
    namedblock_statement           shift and go to state 662
    casex_statement                shift and go to state 174
    sigtype                        shift and go to state 75
    delays                         shift and go to state 176
    blocking_substitution          shift and go to state 177
    while_statement                shift and go to state 179
    sigtypes                       shift and go to state 504
    realdecl                       shift and go to state 564
    if_statement                   shift and go to state 182
    nonblocking_substitution       shift and go to state 183
    empty                          shift and go to state 184
    basic_statement                shift and go to state 565
    for_statement                  shift and go to state 186
    event_statement                shift and go to state 189
    wait_statement                 shift and go to state 190
    case_statement                 shift and go to state 191
    disable                        shift and go to state 192
    namedblock                     shift and go to state 194
    parameterdecl                  shift and go to state 560
    senslist                       shift and go to state 196
    single_statement               shift and go to state 197
    block                          shift and go to state 198

state 563

    (247) namedblock_statements -> namedblock_statement .

    END             reduce using rule 247 (namedblock_statements -> namedblock_statement .)
    INTEGER         reduce using rule 247 (namedblock_statements -> namedblock_statement .)
    REAL            reduce using rule 247 (namedblock_statements -> namedblock_statement .)
    PARAMETER       reduce using rule 247 (namedblock_statements -> namedblock_statement .)
    LOCALPARAM      reduce using rule 247 (namedblock_statements -> namedblock_statement .)
    IF              reduce using rule 247 (namedblock_statements -> namedblock_statement .)
    CASE            reduce using rule 247 (namedblock_statements -> namedblock_statement .)
    CASEX           reduce using rule 247 (namedblock_statements -> namedblock_statement .)
    FOR             reduce using rule 247 (namedblock_statements -> namedblock_statement .)
    WHILE           reduce using rule 247 (namedblock_statements -> namedblock_statement .)
    WAIT            reduce using rule 247 (namedblock_statements -> namedblock_statement .)
    FOREVER         reduce using rule 247 (namedblock_statements -> namedblock_statement .)
    BEGIN           reduce using rule 247 (namedblock_statements -> namedblock_statement .)
    FORK            reduce using rule 247 (namedblock_statements -> namedblock_statement .)
    DELAY           reduce using rule 247 (namedblock_statements -> namedblock_statement .)
    AT              reduce using rule 247 (namedblock_statements -> namedblock_statement .)
    DOLLER          reduce using rule 247 (namedblock_statements -> namedblock_statement .)
    DISABLE         reduce using rule 247 (namedblock_statements -> namedblock_statement .)
    INPUT           reduce using rule 247 (namedblock_statements -> namedblock_statement .)
    OUTPUT          reduce using rule 247 (namedblock_statements -> namedblock_statement .)
    INOUT           reduce using rule 247 (namedblock_statements -> namedblock_statement .)
    TRI             reduce using rule 247 (namedblock_statements -> namedblock_statement .)
    REG             reduce using rule 247 (namedblock_statements -> namedblock_statement .)
    WIRE            reduce using rule 247 (namedblock_statements -> namedblock_statement .)
    SIGNED          reduce using rule 247 (namedblock_statements -> namedblock_statement .)
    SUPPLY0         reduce using rule 247 (namedblock_statements -> namedblock_statement .)
    SUPPLY1         reduce using rule 247 (namedblock_statements -> namedblock_statement .)
    LBRACE          reduce using rule 247 (namedblock_statements -> namedblock_statement .)
    ID              reduce using rule 247 (namedblock_statements -> namedblock_statement .)
    SEMICOLON       reduce using rule 247 (namedblock_statements -> namedblock_statement .)


state 564

    (251) namedblock_statement -> realdecl .

    END             reduce using rule 251 (namedblock_statement -> realdecl .)
    INTEGER         reduce using rule 251 (namedblock_statement -> realdecl .)
    REAL            reduce using rule 251 (namedblock_statement -> realdecl .)
    PARAMETER       reduce using rule 251 (namedblock_statement -> realdecl .)
    LOCALPARAM      reduce using rule 251 (namedblock_statement -> realdecl .)
    IF              reduce using rule 251 (namedblock_statement -> realdecl .)
    CASE            reduce using rule 251 (namedblock_statement -> realdecl .)
    CASEX           reduce using rule 251 (namedblock_statement -> realdecl .)
    FOR             reduce using rule 251 (namedblock_statement -> realdecl .)
    WHILE           reduce using rule 251 (namedblock_statement -> realdecl .)
    WAIT            reduce using rule 251 (namedblock_statement -> realdecl .)
    FOREVER         reduce using rule 251 (namedblock_statement -> realdecl .)
    BEGIN           reduce using rule 251 (namedblock_statement -> realdecl .)
    FORK            reduce using rule 251 (namedblock_statement -> realdecl .)
    DELAY           reduce using rule 251 (namedblock_statement -> realdecl .)
    AT              reduce using rule 251 (namedblock_statement -> realdecl .)
    DOLLER          reduce using rule 251 (namedblock_statement -> realdecl .)
    DISABLE         reduce using rule 251 (namedblock_statement -> realdecl .)
    INPUT           reduce using rule 251 (namedblock_statement -> realdecl .)
    OUTPUT          reduce using rule 251 (namedblock_statement -> realdecl .)
    INOUT           reduce using rule 251 (namedblock_statement -> realdecl .)
    TRI             reduce using rule 251 (namedblock_statement -> realdecl .)
    REG             reduce using rule 251 (namedblock_statement -> realdecl .)
    WIRE            reduce using rule 251 (namedblock_statement -> realdecl .)
    SIGNED          reduce using rule 251 (namedblock_statement -> realdecl .)
    SUPPLY0         reduce using rule 251 (namedblock_statement -> realdecl .)
    SUPPLY1         reduce using rule 251 (namedblock_statement -> realdecl .)
    LBRACE          reduce using rule 251 (namedblock_statement -> realdecl .)
    ID              reduce using rule 251 (namedblock_statement -> realdecl .)
    SEMICOLON       reduce using rule 251 (namedblock_statement -> realdecl .)


state 565

    (248) namedblock_statement -> basic_statement .

    END             reduce using rule 248 (namedblock_statement -> basic_statement .)
    INTEGER         reduce using rule 248 (namedblock_statement -> basic_statement .)
    REAL            reduce using rule 248 (namedblock_statement -> basic_statement .)
    PARAMETER       reduce using rule 248 (namedblock_statement -> basic_statement .)
    LOCALPARAM      reduce using rule 248 (namedblock_statement -> basic_statement .)
    IF              reduce using rule 248 (namedblock_statement -> basic_statement .)
    CASE            reduce using rule 248 (namedblock_statement -> basic_statement .)
    CASEX           reduce using rule 248 (namedblock_statement -> basic_statement .)
    FOR             reduce using rule 248 (namedblock_statement -> basic_statement .)
    WHILE           reduce using rule 248 (namedblock_statement -> basic_statement .)
    WAIT            reduce using rule 248 (namedblock_statement -> basic_statement .)
    FOREVER         reduce using rule 248 (namedblock_statement -> basic_statement .)
    BEGIN           reduce using rule 248 (namedblock_statement -> basic_statement .)
    FORK            reduce using rule 248 (namedblock_statement -> basic_statement .)
    DELAY           reduce using rule 248 (namedblock_statement -> basic_statement .)
    AT              reduce using rule 248 (namedblock_statement -> basic_statement .)
    DOLLER          reduce using rule 248 (namedblock_statement -> basic_statement .)
    DISABLE         reduce using rule 248 (namedblock_statement -> basic_statement .)
    INPUT           reduce using rule 248 (namedblock_statement -> basic_statement .)
    OUTPUT          reduce using rule 248 (namedblock_statement -> basic_statement .)
    INOUT           reduce using rule 248 (namedblock_statement -> basic_statement .)
    TRI             reduce using rule 248 (namedblock_statement -> basic_statement .)
    REG             reduce using rule 248 (namedblock_statement -> basic_statement .)
    WIRE            reduce using rule 248 (namedblock_statement -> basic_statement .)
    SIGNED          reduce using rule 248 (namedblock_statement -> basic_statement .)
    SUPPLY0         reduce using rule 248 (namedblock_statement -> basic_statement .)
    SUPPLY1         reduce using rule 248 (namedblock_statement -> basic_statement .)
    LBRACE          reduce using rule 248 (namedblock_statement -> basic_statement .)
    ID              reduce using rule 248 (namedblock_statement -> basic_statement .)
    SEMICOLON       reduce using rule 248 (namedblock_statement -> basic_statement .)


state 566

    (233) nonblocking_substitution -> delays lvalue LE delays . rvalue SEMICOLON
    (126) rvalue -> . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    rvalue                         shift and go to state 663
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    pointer                        shift and go to state 31
    functioncall                   shift and go to state 55
    intnumber                      shift and go to state 37
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    expression                     shift and go to state 481
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 567

    (231) blocking_substitution -> delays lvalue EQUALS delays . rvalue SEMICOLON
    (126) rvalue -> . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    rvalue                         shift and go to state 664
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    pointer                        shift and go to state 31
    functioncall                   shift and go to state 55
    intnumber                      shift and go to state 37
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    expression                     shift and go to state 481
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 568

    (258) if_statement -> delays IF LPAREN cond . RPAREN true_statement ELSE else_statement
    (259) if_statement -> delays IF LPAREN cond . RPAREN true_statement

    RPAREN          shift and go to state 665


state 569

    (275) casex_statement -> CASEX LPAREN case_comp RPAREN . casecontent_statements ENDCASE
    (277) casecontent_statements -> . casecontent_statements casecontent_statement
    (278) casecontent_statements -> . casecontent_statement
    (279) casecontent_statement -> . casecontent_condition COLON basic_statement
    (282) casecontent_statement -> . DEFAULT COLON basic_statement
    (280) casecontent_condition -> . casecontent_condition COMMA expression
    (281) casecontent_condition -> . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    DEFAULT         shift and go to state 656
    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    casecontent_statement          shift and go to state 658
    pointer                        shift and go to state 31
    systemcall                     shift and go to state 27
    stringliteral                  shift and go to state 53
    intnumber                      shift and go to state 37
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    concat                         shift and go to state 47
    scope                          shift and go to state 44
    casecontent_condition          shift and go to state 657
    identifier                     shift and go to state 57
    expression                     shift and go to state 660
    casecontent_statements         shift and go to state 666

state 570

    (231) blocking_substitution -> delays lvalue . EQUALS delays rvalue SEMICOLON

    EQUALS          shift and go to state 456


state 571

    (264) for_statement -> FOR LPAREN forpre forcond . forpost RPAREN forcontent_statement
    (269) forpost -> . blocking_substitution_base
    (270) forpost -> . empty
    (232) blocking_substitution_base -> . delays lvalue EQUALS delays rvalue
    (393) empty -> .
    (234) delays -> . DELAY LPAREN expression RPAREN
    (235) delays -> . DELAY identifier
    (236) delays -> . DELAY intnumber
    (237) delays -> . DELAY floatnumber
    (238) delays -> . empty

    RPAREN          reduce using rule 393 (empty -> .)
    LBRACE          reduce using rule 393 (empty -> .)
    ID              reduce using rule 393 (empty -> .)
    DELAY           shift and go to state 230

    delays                         shift and go to state 667
    blocking_substitution_base     shift and go to state 668
    forpost                        shift and go to state 669
    empty                          shift and go to state 670

state 572

    (267) forcond -> cond . SEMICOLON

    SEMICOLON       shift and go to state 671


state 573

    (268) forcond -> SEMICOLON .

    DELAY           reduce using rule 268 (forcond -> SEMICOLON .)
    RPAREN          reduce using rule 268 (forcond -> SEMICOLON .)
    LBRACE          reduce using rule 268 (forcond -> SEMICOLON .)
    ID              reduce using rule 268 (forcond -> SEMICOLON .)


state 574

    (206) senslist -> AT LPAREN levelsigs RPAREN .

    SEMICOLON       reduce using rule 206 (senslist -> AT LPAREN levelsigs RPAREN .)
    IF              reduce using rule 206 (senslist -> AT LPAREN levelsigs RPAREN .)
    CASE            reduce using rule 206 (senslist -> AT LPAREN levelsigs RPAREN .)
    CASEX           reduce using rule 206 (senslist -> AT LPAREN levelsigs RPAREN .)
    FOR             reduce using rule 206 (senslist -> AT LPAREN levelsigs RPAREN .)
    WHILE           reduce using rule 206 (senslist -> AT LPAREN levelsigs RPAREN .)
    WAIT            reduce using rule 206 (senslist -> AT LPAREN levelsigs RPAREN .)
    FOREVER         reduce using rule 206 (senslist -> AT LPAREN levelsigs RPAREN .)
    BEGIN           reduce using rule 206 (senslist -> AT LPAREN levelsigs RPAREN .)
    FORK            reduce using rule 206 (senslist -> AT LPAREN levelsigs RPAREN .)
    DELAY           reduce using rule 206 (senslist -> AT LPAREN levelsigs RPAREN .)
    AT              reduce using rule 206 (senslist -> AT LPAREN levelsigs RPAREN .)
    DOLLER          reduce using rule 206 (senslist -> AT LPAREN levelsigs RPAREN .)
    DISABLE         reduce using rule 206 (senslist -> AT LPAREN levelsigs RPAREN .)
    LBRACE          reduce using rule 206 (senslist -> AT LPAREN levelsigs RPAREN .)
    ID              reduce using rule 206 (senslist -> AT LPAREN levelsigs RPAREN .)


state 575

    (211) levelsigs -> levelsigs SENS_OR . levelsig
    (207) levelsig -> . levelsig_base
    (208) levelsig_base -> . identifier
    (209) levelsig_base -> . pointer
    (210) levelsig_base -> . partselect
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT

    ID              shift and go to state 46

    partselect                     shift and go to state 335
    levelsig_base                  shift and go to state 336
    levelsig                       shift and go to state 672
    scope                          shift and go to state 44
    identifier                     shift and go to state 340
    pointer                        shift and go to state 341

state 576

    (212) levelsigs -> levelsigs COMMA . levelsig
    (207) levelsig -> . levelsig_base
    (208) levelsig_base -> . identifier
    (209) levelsig_base -> . pointer
    (210) levelsig_base -> . partselect
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT

    ID              shift and go to state 46

    partselect                     shift and go to state 335
    levelsig_base                  shift and go to state 336
    levelsig                       shift and go to state 673
    scope                          shift and go to state 44
    identifier                     shift and go to state 340
    pointer                        shift and go to state 341

state 577

    (197) senslist -> AT LPAREN edgesigs RPAREN .

    SEMICOLON       reduce using rule 197 (senslist -> AT LPAREN edgesigs RPAREN .)
    IF              reduce using rule 197 (senslist -> AT LPAREN edgesigs RPAREN .)
    CASE            reduce using rule 197 (senslist -> AT LPAREN edgesigs RPAREN .)
    CASEX           reduce using rule 197 (senslist -> AT LPAREN edgesigs RPAREN .)
    FOR             reduce using rule 197 (senslist -> AT LPAREN edgesigs RPAREN .)
    WHILE           reduce using rule 197 (senslist -> AT LPAREN edgesigs RPAREN .)
    WAIT            reduce using rule 197 (senslist -> AT LPAREN edgesigs RPAREN .)
    FOREVER         reduce using rule 197 (senslist -> AT LPAREN edgesigs RPAREN .)
    BEGIN           reduce using rule 197 (senslist -> AT LPAREN edgesigs RPAREN .)
    FORK            reduce using rule 197 (senslist -> AT LPAREN edgesigs RPAREN .)
    DELAY           reduce using rule 197 (senslist -> AT LPAREN edgesigs RPAREN .)
    AT              reduce using rule 197 (senslist -> AT LPAREN edgesigs RPAREN .)
    DOLLER          reduce using rule 197 (senslist -> AT LPAREN edgesigs RPAREN .)
    DISABLE         reduce using rule 197 (senslist -> AT LPAREN edgesigs RPAREN .)
    LBRACE          reduce using rule 197 (senslist -> AT LPAREN edgesigs RPAREN .)
    ID              reduce using rule 197 (senslist -> AT LPAREN edgesigs RPAREN .)


state 578

    (202) edgesigs -> edgesigs SENS_OR . edgesig
    (198) edgesig -> . POSEDGE edgesig_base
    (199) edgesig -> . NEGEDGE edgesig_base

    POSEDGE         shift and go to state 469
    NEGEDGE         shift and go to state 467

    edgesig                        shift and go to state 674

state 579

    (215) senslist -> AT LPAREN TIMES RPAREN .

    SEMICOLON       reduce using rule 215 (senslist -> AT LPAREN TIMES RPAREN .)
    IF              reduce using rule 215 (senslist -> AT LPAREN TIMES RPAREN .)
    CASE            reduce using rule 215 (senslist -> AT LPAREN TIMES RPAREN .)
    CASEX           reduce using rule 215 (senslist -> AT LPAREN TIMES RPAREN .)
    FOR             reduce using rule 215 (senslist -> AT LPAREN TIMES RPAREN .)
    WHILE           reduce using rule 215 (senslist -> AT LPAREN TIMES RPAREN .)
    WAIT            reduce using rule 215 (senslist -> AT LPAREN TIMES RPAREN .)
    FOREVER         reduce using rule 215 (senslist -> AT LPAREN TIMES RPAREN .)
    BEGIN           reduce using rule 215 (senslist -> AT LPAREN TIMES RPAREN .)
    FORK            reduce using rule 215 (senslist -> AT LPAREN TIMES RPAREN .)
    DELAY           reduce using rule 215 (senslist -> AT LPAREN TIMES RPAREN .)
    AT              reduce using rule 215 (senslist -> AT LPAREN TIMES RPAREN .)
    DOLLER          reduce using rule 215 (senslist -> AT LPAREN TIMES RPAREN .)
    DISABLE         reduce using rule 215 (senslist -> AT LPAREN TIMES RPAREN .)
    LBRACE          reduce using rule 215 (senslist -> AT LPAREN TIMES RPAREN .)
    ID              reduce using rule 215 (senslist -> AT LPAREN TIMES RPAREN .)


state 580

    (199) edgesig -> NEGEDGE edgesig_base .

    RPAREN          reduce using rule 199 (edgesig -> NEGEDGE edgesig_base .)
    SENS_OR         reduce using rule 199 (edgesig -> NEGEDGE edgesig_base .)


state 581

    (200) edgesig_base -> identifier .
    (181) pointer -> identifier . LBRACKET expression RBRACKET
    (387) scope -> identifier . DOT

    RPAREN          reduce using rule 200 (edgesig_base -> identifier .)
    SENS_OR         reduce using rule 200 (edgesig_base -> identifier .)
    LBRACKET        shift and go to state 491
    DOT             shift and go to state 135


state 582

    (201) edgesig_base -> pointer .
    (182) pointer -> pointer . LBRACKET expression RBRACKET
    (388) scope -> pointer . DOT

    RPAREN          reduce using rule 201 (edgesig_base -> pointer .)
    SENS_OR         reduce using rule 201 (edgesig_base -> pointer .)
    LBRACKET        shift and go to state 489
    DOT             shift and go to state 119


state 583

    (198) edgesig -> POSEDGE edgesig_base .

    RPAREN          reduce using rule 198 (edgesig -> POSEDGE edgesig_base .)
    SENS_OR         reduce using rule 198 (edgesig -> POSEDGE edgesig_base .)


state 584

    (181) pointer -> identifier LBRACKET expression . RBRACKET
    (175) partselect -> identifier LBRACKET expression . COLON expression RBRACKET
    (176) partselect -> identifier LBRACKET expression . PLUSCOLON expression RBRACKET
    (177) partselect -> identifier LBRACKET expression . MINUSCOLON expression RBRACKET
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RBRACKET        shift and go to state 439
    COLON           shift and go to state 436
    PLUSCOLON       shift and go to state 437
    MINUSCOLON      shift and go to state 438
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147
    LT              shift and go to state 145
    GT              shift and go to state 149
    LE              shift and go to state 142
    GE              shift and go to state 153
    EQ              shift and go to state 156
    NE              shift and go to state 144
    EQL             shift and go to state 155
    NEL             shift and go to state 136
    AND             shift and go to state 157
    XOR             shift and go to state 150
    XNOR            shift and go to state 148
    OR              shift and go to state 159
    LAND            shift and go to state 154
    LOR             shift and go to state 138
    COND            shift and go to state 139


state 585

    (182) pointer -> pointer LBRACKET expression . RBRACKET
    (178) partselect -> pointer LBRACKET expression . COLON expression RBRACKET
    (179) partselect -> pointer LBRACKET expression . PLUSCOLON expression RBRACKET
    (180) partselect -> pointer LBRACKET expression . MINUSCOLON expression RBRACKET
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RBRACKET        shift and go to state 427
    COLON           shift and go to state 424
    PLUSCOLON       shift and go to state 425
    MINUSCOLON      shift and go to state 426
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147
    LT              shift and go to state 145
    GT              shift and go to state 149
    LE              shift and go to state 142
    GE              shift and go to state 153
    EQ              shift and go to state 156
    NE              shift and go to state 144
    EQL             shift and go to state 155
    NEL             shift and go to state 136
    AND             shift and go to state 157
    XOR             shift and go to state 150
    XNOR            shift and go to state 148
    OR              shift and go to state 159
    LAND            shift and go to state 154
    LOR             shift and go to state 138
    COND            shift and go to state 139


state 586

    (256) if_statement -> IF LPAREN cond RPAREN . true_statement ELSE else_statement
    (257) if_statement -> IF LPAREN cond RPAREN . true_statement
    (262) true_statement -> . ifcontent_statement
    (261) ifcontent_statement -> . basic_statement
    (216) basic_statement -> . if_statement
    (217) basic_statement -> . case_statement
    (218) basic_statement -> . casex_statement
    (219) basic_statement -> . for_statement
    (220) basic_statement -> . while_statement
    (221) basic_statement -> . event_statement
    (222) basic_statement -> . wait_statement
    (223) basic_statement -> . forever_statement
    (224) basic_statement -> . block
    (225) basic_statement -> . namedblock
    (226) basic_statement -> . parallelblock
    (227) basic_statement -> . blocking_substitution
    (228) basic_statement -> . nonblocking_substitution
    (229) basic_statement -> . single_statement
    (256) if_statement -> . IF LPAREN cond RPAREN true_statement ELSE else_statement
    (257) if_statement -> . IF LPAREN cond RPAREN true_statement
    (258) if_statement -> . delays IF LPAREN cond RPAREN true_statement ELSE else_statement
    (259) if_statement -> . delays IF LPAREN cond RPAREN true_statement
    (274) case_statement -> . CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (275) casex_statement -> . CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (264) for_statement -> . FOR LPAREN forpre forcond forpost RPAREN forcontent_statement
    (272) while_statement -> . WHILE LPAREN cond RPAREN whilecontent_statement
    (285) event_statement -> . senslist SEMICOLON
    (286) wait_statement -> . WAIT LPAREN cond RPAREN waitcontent_statement
    (289) forever_statement -> . FOREVER basic_statement
    (239) block -> . BEGIN block_statements END
    (240) block -> . BEGIN END
    (244) namedblock -> . BEGIN COLON ID namedblock_statements END
    (245) namedblock -> . BEGIN COLON ID END
    (254) parallelblock -> . FORK block_statements JOIN
    (255) parallelblock -> . FORK JOIN
    (231) blocking_substitution -> . delays lvalue EQUALS delays rvalue SEMICOLON
    (233) nonblocking_substitution -> . delays lvalue LE delays rvalue SEMICOLON
    (390) single_statement -> . DELAY expression SEMICOLON
    (391) single_statement -> . systemcall SEMICOLON
    (392) single_statement -> . disable SEMICOLON
    (234) delays -> . DELAY LPAREN expression RPAREN
    (235) delays -> . DELAY identifier
    (236) delays -> . DELAY intnumber
    (237) delays -> . DELAY floatnumber
    (238) delays -> . empty
    (197) senslist -> . AT LPAREN edgesigs RPAREN
    (204) senslist -> . empty
    (205) senslist -> . AT levelsig
    (206) senslist -> . AT LPAREN levelsigs RPAREN
    (214) senslist -> . AT TIMES
    (215) senslist -> . AT LPAREN TIMES RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (389) disable -> . DISABLE ID
    (393) empty -> .

  ! shift/reduce conflict for IF resolved as shift
    IF              shift and go to state 195
    CASE            shift and go to state 173
    CASEX           shift and go to state 178
    FOR             shift and go to state 187
    WHILE           shift and go to state 171
    WAIT            shift and go to state 168
    FOREVER         shift and go to state 167
    BEGIN           shift and go to state 175
    FORK            shift and go to state 166
    DELAY           shift and go to state 170
    AT              shift and go to state 193
    DOLLER          shift and go to state 54
    DISABLE         shift and go to state 180
    LBRACE          reduce using rule 393 (empty -> .)
    ID              reduce using rule 393 (empty -> .)
    SEMICOLON       reduce using rule 393 (empty -> .)

  ! IF              [ reduce using rule 393 (empty -> .) ]

    true_statement                 shift and go to state 675
    parallelblock                  shift and go to state 169
    forever_statement              shift and go to state 172
    casex_statement                shift and go to state 174
    delays                         shift and go to state 176
    blocking_substitution          shift and go to state 177
    while_statement                shift and go to state 179
    systemcall                     shift and go to state 181
    if_statement                   shift and go to state 182
    nonblocking_substitution       shift and go to state 183
    empty                          shift and go to state 184
    basic_statement                shift and go to state 676
    for_statement                  shift and go to state 186
    event_statement                shift and go to state 189
    wait_statement                 shift and go to state 190
    case_statement                 shift and go to state 191
    disable                        shift and go to state 192
    ifcontent_statement            shift and go to state 677
    namedblock                     shift and go to state 194
    senslist                       shift and go to state 196
    block                          shift and go to state 198
    single_statement               shift and go to state 197

state 587

    (96) parameterdecl -> PARAMETER SIGNED width param_substitution_list SEMICOLON .

    END             reduce using rule 96 (parameterdecl -> PARAMETER SIGNED width param_substitution_list SEMICOLON .)
    INTEGER         reduce using rule 96 (parameterdecl -> PARAMETER SIGNED width param_substitution_list SEMICOLON .)
    REAL            reduce using rule 96 (parameterdecl -> PARAMETER SIGNED width param_substitution_list SEMICOLON .)
    PARAMETER       reduce using rule 96 (parameterdecl -> PARAMETER SIGNED width param_substitution_list SEMICOLON .)
    LOCALPARAM      reduce using rule 96 (parameterdecl -> PARAMETER SIGNED width param_substitution_list SEMICOLON .)
    IF              reduce using rule 96 (parameterdecl -> PARAMETER SIGNED width param_substitution_list SEMICOLON .)
    CASE            reduce using rule 96 (parameterdecl -> PARAMETER SIGNED width param_substitution_list SEMICOLON .)
    CASEX           reduce using rule 96 (parameterdecl -> PARAMETER SIGNED width param_substitution_list SEMICOLON .)
    FOR             reduce using rule 96 (parameterdecl -> PARAMETER SIGNED width param_substitution_list SEMICOLON .)
    WHILE           reduce using rule 96 (parameterdecl -> PARAMETER SIGNED width param_substitution_list SEMICOLON .)
    WAIT            reduce using rule 96 (parameterdecl -> PARAMETER SIGNED width param_substitution_list SEMICOLON .)
    FOREVER         reduce using rule 96 (parameterdecl -> PARAMETER SIGNED width param_substitution_list SEMICOLON .)
    BEGIN           reduce using rule 96 (parameterdecl -> PARAMETER SIGNED width param_substitution_list SEMICOLON .)
    FORK            reduce using rule 96 (parameterdecl -> PARAMETER SIGNED width param_substitution_list SEMICOLON .)
    DELAY           reduce using rule 96 (parameterdecl -> PARAMETER SIGNED width param_substitution_list SEMICOLON .)
    AT              reduce using rule 96 (parameterdecl -> PARAMETER SIGNED width param_substitution_list SEMICOLON .)
    DOLLER          reduce using rule 96 (parameterdecl -> PARAMETER SIGNED width param_substitution_list SEMICOLON .)
    DISABLE         reduce using rule 96 (parameterdecl -> PARAMETER SIGNED width param_substitution_list SEMICOLON .)
    INPUT           reduce using rule 96 (parameterdecl -> PARAMETER SIGNED width param_substitution_list SEMICOLON .)
    OUTPUT          reduce using rule 96 (parameterdecl -> PARAMETER SIGNED width param_substitution_list SEMICOLON .)
    INOUT           reduce using rule 96 (parameterdecl -> PARAMETER SIGNED width param_substitution_list SEMICOLON .)
    TRI             reduce using rule 96 (parameterdecl -> PARAMETER SIGNED width param_substitution_list SEMICOLON .)
    REG             reduce using rule 96 (parameterdecl -> PARAMETER SIGNED width param_substitution_list SEMICOLON .)
    WIRE            reduce using rule 96 (parameterdecl -> PARAMETER SIGNED width param_substitution_list SEMICOLON .)
    SIGNED          reduce using rule 96 (parameterdecl -> PARAMETER SIGNED width param_substitution_list SEMICOLON .)
    SUPPLY0         reduce using rule 96 (parameterdecl -> PARAMETER SIGNED width param_substitution_list SEMICOLON .)
    SUPPLY1         reduce using rule 96 (parameterdecl -> PARAMETER SIGNED width param_substitution_list SEMICOLON .)
    LBRACE          reduce using rule 96 (parameterdecl -> PARAMETER SIGNED width param_substitution_list SEMICOLON .)
    ID              reduce using rule 96 (parameterdecl -> PARAMETER SIGNED width param_substitution_list SEMICOLON .)
    SEMICOLON       reduce using rule 96 (parameterdecl -> PARAMETER SIGNED width param_substitution_list SEMICOLON .)
    ELSE            reduce using rule 96 (parameterdecl -> PARAMETER SIGNED width param_substitution_list SEMICOLON .)
    ENDGENERATE     reduce using rule 96 (parameterdecl -> PARAMETER SIGNED width param_substitution_list SEMICOLON .)
    GENVAR          reduce using rule 96 (parameterdecl -> PARAMETER SIGNED width param_substitution_list SEMICOLON .)
    ASSIGN          reduce using rule 96 (parameterdecl -> PARAMETER SIGNED width param_substitution_list SEMICOLON .)
    ALWAYS          reduce using rule 96 (parameterdecl -> PARAMETER SIGNED width param_substitution_list SEMICOLON .)
    INITIAL         reduce using rule 96 (parameterdecl -> PARAMETER SIGNED width param_substitution_list SEMICOLON .)
    SENS_OR         reduce using rule 96 (parameterdecl -> PARAMETER SIGNED width param_substitution_list SEMICOLON .)
    FUNCTION        reduce using rule 96 (parameterdecl -> PARAMETER SIGNED width param_substitution_list SEMICOLON .)
    TASK            reduce using rule 96 (parameterdecl -> PARAMETER SIGNED width param_substitution_list SEMICOLON .)
    LPAREN          reduce using rule 96 (parameterdecl -> PARAMETER SIGNED width param_substitution_list SEMICOLON .)
    ENDMODULE       reduce using rule 96 (parameterdecl -> PARAMETER SIGNED width param_substitution_list SEMICOLON .)
    GENERATE        reduce using rule 96 (parameterdecl -> PARAMETER SIGNED width param_substitution_list SEMICOLON .)


state 588

    (53) width -> LBRACKET expression COLON expression . RBRACKET
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RBRACKET        shift and go to state 678
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147
    LT              shift and go to state 145
    GT              shift and go to state 149
    LE              shift and go to state 142
    GE              shift and go to state 153
    EQ              shift and go to state 156
    NE              shift and go to state 144
    EQL             shift and go to state 155
    NEL             shift and go to state 136
    AND             shift and go to state 157
    XOR             shift and go to state 150
    XNOR            shift and go to state 148
    OR              shift and go to state 159
    LAND            shift and go to state 154
    LOR             shift and go to state 138
    COND            shift and go to state 139


state 589

    (341) generate_for -> FOR LPAREN forpre forcond . forpost RPAREN generate_forcontent
    (269) forpost -> . blocking_substitution_base
    (270) forpost -> . empty
    (232) blocking_substitution_base -> . delays lvalue EQUALS delays rvalue
    (393) empty -> .
    (234) delays -> . DELAY LPAREN expression RPAREN
    (235) delays -> . DELAY identifier
    (236) delays -> . DELAY intnumber
    (237) delays -> . DELAY floatnumber
    (238) delays -> . empty

    RPAREN          reduce using rule 393 (empty -> .)
    LBRACE          reduce using rule 393 (empty -> .)
    ID              reduce using rule 393 (empty -> .)
    DELAY           shift and go to state 230

    delays                         shift and go to state 667
    blocking_substitution_base     shift and go to state 668
    forpost                        shift and go to state 679
    empty                          shift and go to state 670

state 590

    (335) generate_if -> IF LPAREN cond RPAREN . gif_true_item ELSE gif_false_item
    (336) generate_if -> IF LPAREN cond RPAREN . gif_true_item
    (337) gif_true_item -> . generate_item
    (338) gif_true_item -> . generate_block
    (330) generate_item -> . standard_item
    (331) generate_item -> . generate_if
    (332) generate_item -> . generate_for
    (333) generate_block -> . BEGIN generate_items END
    (334) generate_block -> . BEGIN COLON ID generate_items END
    (60) standard_item -> . decl
    (61) standard_item -> . integerdecl
    (62) standard_item -> . realdecl
    (63) standard_item -> . declassign
    (64) standard_item -> . parameterdecl
    (65) standard_item -> . localparamdecl
    (66) standard_item -> . genvardecl
    (67) standard_item -> . assignment
    (68) standard_item -> . always
    (69) standard_item -> . initial
    (70) standard_item -> . instance
    (71) standard_item -> . function
    (72) standard_item -> . task
    (73) standard_item -> . pragma
    (335) generate_if -> . IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item
    (336) generate_if -> . IF LPAREN cond RPAREN gif_true_item
    (341) generate_for -> . FOR LPAREN forpre forcond forpost RPAREN generate_forcontent
    (74) decl -> . sigtypes declnamelist SEMICOLON
    (75) decl -> . sigtypes width declnamelist SEMICOLON
    (84) integerdecl -> . INTEGER integernamelist SEMICOLON
    (85) integerdecl -> . INTEGER SIGNED integernamelist SEMICOLON
    (89) realdecl -> . REAL realnamelist SEMICOLON
    (80) declassign -> . sigtypes declassign_element SEMICOLON
    (81) declassign -> . sigtypes width declassign_element SEMICOLON
    (93) parameterdecl -> . PARAMETER param_substitution_list SEMICOLON
    (94) parameterdecl -> . PARAMETER SIGNED param_substitution_list SEMICOLON
    (95) parameterdecl -> . PARAMETER width param_substitution_list SEMICOLON
    (96) parameterdecl -> . PARAMETER SIGNED width param_substitution_list SEMICOLON
    (97) parameterdecl -> . PARAMETER INTEGER param_substitution_list SEMICOLON
    (98) localparamdecl -> . LOCALPARAM param_substitution_list SEMICOLON
    (99) localparamdecl -> . LOCALPARAM SIGNED param_substitution_list SEMICOLON
    (100) localparamdecl -> . LOCALPARAM width param_substitution_list SEMICOLON
    (101) localparamdecl -> . LOCALPARAM SIGNED width param_substitution_list SEMICOLON
    (102) localparamdecl -> . LOCALPARAM INTEGER param_substitution_list SEMICOLON
    (322) genvardecl -> . GENVAR genvarlist SEMICOLON
    (106) assignment -> . ASSIGN lvalue EQUALS rvalue SEMICOLON
    (107) assignment -> . ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON
    (196) always -> . ALWAYS senslist always_statement
    (283) initial -> . INITIAL initial_statement
    (290) instance -> . ID parameterlist instance_bodylist SEMICOLON
    (291) instance -> . SENS_OR parameterlist instance_bodylist SEMICOLON
    (296) instance -> . ID instance_bodylist_noname SEMICOLON
    (297) instance -> . SENS_OR instance_bodylist_noname SEMICOLON
    (351) function -> . FUNCTION width ID SEMICOLON function_statement ENDFUNCTION
    (352) function -> . FUNCTION ID SEMICOLON function_statement ENDFUNCTION
    (370) task -> . TASK ID SEMICOLON task_statement ENDTASK
    (7) pragma -> . LPAREN TIMES ID EQUALS expression TIMES RPAREN
    (8) pragma -> . LPAREN TIMES ID TIMES RPAREN
    (35) sigtypes -> . sigtypes sigtype
    (36) sigtypes -> . sigtype
    (37) sigtype -> . INPUT
    (38) sigtype -> . OUTPUT
    (39) sigtype -> . INOUT
    (40) sigtype -> . TRI
    (41) sigtype -> . REG
    (42) sigtype -> . WIRE
    (43) sigtype -> . SIGNED
    (44) sigtype -> . SUPPLY0
    (45) sigtype -> . SUPPLY1

    BEGIN           shift and go to state 681
    IF              shift and go to state 217
    FOR             shift and go to state 215
    INTEGER         shift and go to state 83
    REAL            shift and go to state 63
    PARAMETER       shift and go to state 70
    LOCALPARAM      shift and go to state 101
    GENVAR          shift and go to state 69
    ASSIGN          shift and go to state 85
    ALWAYS          shift and go to state 68
    INITIAL         shift and go to state 66
    ID              shift and go to state 92
    SENS_OR         shift and go to state 99
    FUNCTION        shift and go to state 93
    TASK            shift and go to state 90
    LPAREN          shift and go to state 2
    INPUT           shift and go to state 91
    OUTPUT          shift and go to state 96
    INOUT           shift and go to state 72
    TRI             shift and go to state 89
    REG             shift and go to state 67
    WIRE            shift and go to state 104
    SIGNED          shift and go to state 98
    SUPPLY0         shift and go to state 79
    SUPPLY1         shift and go to state 80

    decl                           shift and go to state 62
    localparamdecl                 shift and go to state 64
    declassign                     shift and go to state 65
    generate_for                   shift and go to state 211
    integerdecl                    shift and go to state 71
    standard_item                  shift and go to state 212
    genvardecl                     shift and go to state 74
    sigtype                        shift and go to state 75
    initial                        shift and go to state 76
    instance                       shift and go to state 78
    sigtypes                       shift and go to state 88
    realdecl                       shift and go to state 82
    parameterdecl                  shift and go to state 84
    function                       shift and go to state 87
    assignment                     shift and go to state 81
    generate_block                 shift and go to state 682
    generate_item                  shift and go to state 680
    task                           shift and go to state 95
    always                         shift and go to state 97
    gif_true_item                  shift and go to state 683
    pragma                         shift and go to state 102
    generate_if                    shift and go to state 218

state 591

    (108) lpartselect -> pointer LBRACKET expression COLON . expression RBRACKET
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    pointer                        shift and go to state 31
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    expression                     shift and go to state 684
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 592

    (109) lpartselect -> pointer LBRACKET expression PLUSCOLON . expression RBRACKET
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    pointer                        shift and go to state 31
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    expression                     shift and go to state 685
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 593

    (110) lpartselect -> pointer LBRACKET expression MINUSCOLON . expression RBRACKET
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    pointer                        shift and go to state 31
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    expression                     shift and go to state 686
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 594

    (106) assignment -> ASSIGN lvalue EQUALS rvalue SEMICOLON .

    ELSE            reduce using rule 106 (assignment -> ASSIGN lvalue EQUALS rvalue SEMICOLON .)
    ENDGENERATE     reduce using rule 106 (assignment -> ASSIGN lvalue EQUALS rvalue SEMICOLON .)
    IF              reduce using rule 106 (assignment -> ASSIGN lvalue EQUALS rvalue SEMICOLON .)
    FOR             reduce using rule 106 (assignment -> ASSIGN lvalue EQUALS rvalue SEMICOLON .)
    INTEGER         reduce using rule 106 (assignment -> ASSIGN lvalue EQUALS rvalue SEMICOLON .)
    REAL            reduce using rule 106 (assignment -> ASSIGN lvalue EQUALS rvalue SEMICOLON .)
    PARAMETER       reduce using rule 106 (assignment -> ASSIGN lvalue EQUALS rvalue SEMICOLON .)
    LOCALPARAM      reduce using rule 106 (assignment -> ASSIGN lvalue EQUALS rvalue SEMICOLON .)
    GENVAR          reduce using rule 106 (assignment -> ASSIGN lvalue EQUALS rvalue SEMICOLON .)
    ASSIGN          reduce using rule 106 (assignment -> ASSIGN lvalue EQUALS rvalue SEMICOLON .)
    ALWAYS          reduce using rule 106 (assignment -> ASSIGN lvalue EQUALS rvalue SEMICOLON .)
    INITIAL         reduce using rule 106 (assignment -> ASSIGN lvalue EQUALS rvalue SEMICOLON .)
    ID              reduce using rule 106 (assignment -> ASSIGN lvalue EQUALS rvalue SEMICOLON .)
    SENS_OR         reduce using rule 106 (assignment -> ASSIGN lvalue EQUALS rvalue SEMICOLON .)
    FUNCTION        reduce using rule 106 (assignment -> ASSIGN lvalue EQUALS rvalue SEMICOLON .)
    TASK            reduce using rule 106 (assignment -> ASSIGN lvalue EQUALS rvalue SEMICOLON .)
    LPAREN          reduce using rule 106 (assignment -> ASSIGN lvalue EQUALS rvalue SEMICOLON .)
    INPUT           reduce using rule 106 (assignment -> ASSIGN lvalue EQUALS rvalue SEMICOLON .)
    OUTPUT          reduce using rule 106 (assignment -> ASSIGN lvalue EQUALS rvalue SEMICOLON .)
    INOUT           reduce using rule 106 (assignment -> ASSIGN lvalue EQUALS rvalue SEMICOLON .)
    TRI             reduce using rule 106 (assignment -> ASSIGN lvalue EQUALS rvalue SEMICOLON .)
    REG             reduce using rule 106 (assignment -> ASSIGN lvalue EQUALS rvalue SEMICOLON .)
    WIRE            reduce using rule 106 (assignment -> ASSIGN lvalue EQUALS rvalue SEMICOLON .)
    SIGNED          reduce using rule 106 (assignment -> ASSIGN lvalue EQUALS rvalue SEMICOLON .)
    SUPPLY0         reduce using rule 106 (assignment -> ASSIGN lvalue EQUALS rvalue SEMICOLON .)
    SUPPLY1         reduce using rule 106 (assignment -> ASSIGN lvalue EQUALS rvalue SEMICOLON .)
    END             reduce using rule 106 (assignment -> ASSIGN lvalue EQUALS rvalue SEMICOLON .)
    ENDMODULE       reduce using rule 106 (assignment -> ASSIGN lvalue EQUALS rvalue SEMICOLON .)
    GENERATE        reduce using rule 106 (assignment -> ASSIGN lvalue EQUALS rvalue SEMICOLON .)


state 595

    (107) assignment -> ASSIGN delays lvalue EQUALS delays . rvalue SEMICOLON
    (126) rvalue -> . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    rvalue                         shift and go to state 687
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    pointer                        shift and go to state 31
    functioncall                   shift and go to state 55
    intnumber                      shift and go to state 37
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    expression                     shift and go to state 481
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 596

    (182) pointer -> pointer LBRACKET expression . RBRACKET
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RBRACKET        shift and go to state 427
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147
    LT              shift and go to state 145
    GT              shift and go to state 149
    LE              shift and go to state 142
    GE              shift and go to state 153
    EQ              shift and go to state 156
    NE              shift and go to state 144
    EQL             shift and go to state 155
    NEL             shift and go to state 136
    AND             shift and go to state 157
    XOR             shift and go to state 150
    XNOR            shift and go to state 148
    OR              shift and go to state 159
    LAND            shift and go to state 154
    LOR             shift and go to state 138
    COND            shift and go to state 139


state 597

    (234) delays -> DELAY LPAREN expression RPAREN .

    IF              reduce using rule 234 (delays -> DELAY LPAREN expression RPAREN .)
    LBRACE          reduce using rule 234 (delays -> DELAY LPAREN expression RPAREN .)
    ID              reduce using rule 234 (delays -> DELAY LPAREN expression RPAREN .)
    MINUS           reduce using rule 234 (delays -> DELAY LPAREN expression RPAREN .)
    PLUS            reduce using rule 234 (delays -> DELAY LPAREN expression RPAREN .)
    LNOT            reduce using rule 234 (delays -> DELAY LPAREN expression RPAREN .)
    NOT             reduce using rule 234 (delays -> DELAY LPAREN expression RPAREN .)
    AND             reduce using rule 234 (delays -> DELAY LPAREN expression RPAREN .)
    NAND            reduce using rule 234 (delays -> DELAY LPAREN expression RPAREN .)
    NOR             reduce using rule 234 (delays -> DELAY LPAREN expression RPAREN .)
    OR              reduce using rule 234 (delays -> DELAY LPAREN expression RPAREN .)
    XOR             reduce using rule 234 (delays -> DELAY LPAREN expression RPAREN .)
    XNOR            reduce using rule 234 (delays -> DELAY LPAREN expression RPAREN .)
    LPAREN          reduce using rule 234 (delays -> DELAY LPAREN expression RPAREN .)
    DOLLER          reduce using rule 234 (delays -> DELAY LPAREN expression RPAREN .)
    INTNUMBER_DEC   reduce using rule 234 (delays -> DELAY LPAREN expression RPAREN .)
    SIGNED_INTNUMBER_DEC reduce using rule 234 (delays -> DELAY LPAREN expression RPAREN .)
    INTNUMBER_BIN   reduce using rule 234 (delays -> DELAY LPAREN expression RPAREN .)
    SIGNED_INTNUMBER_BIN reduce using rule 234 (delays -> DELAY LPAREN expression RPAREN .)
    INTNUMBER_OCT   reduce using rule 234 (delays -> DELAY LPAREN expression RPAREN .)
    SIGNED_INTNUMBER_OCT reduce using rule 234 (delays -> DELAY LPAREN expression RPAREN .)
    INTNUMBER_HEX   reduce using rule 234 (delays -> DELAY LPAREN expression RPAREN .)
    SIGNED_INTNUMBER_HEX reduce using rule 234 (delays -> DELAY LPAREN expression RPAREN .)
    FLOATNUMBER     reduce using rule 234 (delays -> DELAY LPAREN expression RPAREN .)
    STRING_LITERAL  reduce using rule 234 (delays -> DELAY LPAREN expression RPAREN .)


state 598

    (181) pointer -> identifier LBRACKET expression . RBRACKET
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RBRACKET        shift and go to state 439
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147
    LT              shift and go to state 145
    GT              shift and go to state 149
    LE              shift and go to state 142
    GE              shift and go to state 153
    EQ              shift and go to state 156
    NE              shift and go to state 144
    EQL             shift and go to state 155
    NEL             shift and go to state 136
    AND             shift and go to state 157
    XOR             shift and go to state 150
    XNOR            shift and go to state 148
    OR              shift and go to state 159
    LAND            shift and go to state 154
    LOR             shift and go to state 138
    COND            shift and go to state 139


state 599

    (116) lconcatlist -> lconcatlist COMMA lconcat_one .

    RBRACE          reduce using rule 116 (lconcatlist -> lconcatlist COMMA lconcat_one .)
    COMMA           reduce using rule 116 (lconcatlist -> lconcatlist COMMA lconcat_one .)


state 600

    (111) lpartselect -> identifier LBRACKET expression COLON . expression RBRACKET
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 688
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 601

    (112) lpartselect -> identifier LBRACKET expression PLUSCOLON . expression RBRACKET
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 689
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 602

    (113) lpartselect -> identifier LBRACKET expression MINUSCOLON . expression RBRACKET
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 690
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 603

    (83) declassign_element -> delays ID EQUALS delays . rvalue
    (126) rvalue -> . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    pointer                        shift and go to state 31
    rvalue                         shift and go to state 691
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    intnumber                      shift and go to state 37
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    expression                     shift and go to state 481
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 604

    (54) length -> LBRACKET expression COLON . expression RBRACKET
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 692
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 605

    (75) decl -> sigtypes width . declnamelist SEMICOLON
    (76) declnamelist -> . declnamelist COMMA declname
    (77) declnamelist -> . declname
    (78) declname -> . ID
    (79) declname -> . ID length

    ID              shift and go to state 499

    declname                       shift and go to state 233
    declnamelist                   shift and go to state 381

state 606

    (382) task_calc -> casex_statement .

    ENDTASK         reduce using rule 382 (task_calc -> casex_statement .)


state 607

    (231) blocking_substitution -> delays . lvalue EQUALS delays rvalue SEMICOLON
    (258) if_statement -> delays . IF LPAREN cond RPAREN true_statement ELSE else_statement
    (259) if_statement -> delays . IF LPAREN cond RPAREN true_statement
    (122) lvalue -> . lpartselect
    (123) lvalue -> . lpointer
    (124) lvalue -> . lconcat
    (125) lvalue -> . identifier
    (108) lpartselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (109) lpartselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (110) lpartselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (111) lpartselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (112) lpartselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (113) lpartselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (114) lpointer -> . pointer
    (115) lconcat -> . LBRACE lconcatlist RBRACE
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT

    IF              shift and go to state 329
    LBRACE          shift and go to state 231
    ID              shift and go to state 46

    lconcat                        shift and go to state 229
    lpartselect                    shift and go to state 225
    lvalue                         shift and go to state 570
    lpointer                       shift and go to state 223
    scope                          shift and go to state 44
    identifier                     shift and go to state 232
    pointer                        shift and go to state 224

state 608

    (377) task_calc -> blocking_substitution .

    ENDTASK         reduce using rule 377 (task_calc -> blocking_substitution .)


state 609

    (380) task_calc -> while_statement .

    ENDTASK         reduce using rule 380 (task_calc -> while_statement .)


state 610

    (378) task_calc -> if_statement .

    ENDTASK         reduce using rule 378 (task_calc -> if_statement .)


state 611

    (371) task_statement -> taskvardecls task_calc .

    ENDTASK         reduce using rule 371 (task_statement -> taskvardecls task_calc .)


state 612

    (379) task_calc -> for_statement .

    ENDTASK         reduce using rule 379 (task_calc -> for_statement .)


state 613

    (381) task_calc -> case_statement .

    ENDTASK         reduce using rule 381 (task_calc -> case_statement .)


state 614

    (384) task_calc -> namedblock .

    ENDTASK         reduce using rule 384 (task_calc -> namedblock .)


state 615

    (372) taskvardecls -> taskvardecls taskvardecl .

    IF              reduce using rule 372 (taskvardecls -> taskvardecls taskvardecl .)
    FOR             reduce using rule 372 (taskvardecls -> taskvardecls taskvardecl .)
    WHILE           reduce using rule 372 (taskvardecls -> taskvardecls taskvardecl .)
    CASE            reduce using rule 372 (taskvardecls -> taskvardecls taskvardecl .)
    CASEX           reduce using rule 372 (taskvardecls -> taskvardecls taskvardecl .)
    BEGIN           reduce using rule 372 (taskvardecls -> taskvardecls taskvardecl .)
    INTEGER         reduce using rule 372 (taskvardecls -> taskvardecls taskvardecl .)
    DELAY           reduce using rule 372 (taskvardecls -> taskvardecls taskvardecl .)
    INPUT           reduce using rule 372 (taskvardecls -> taskvardecls taskvardecl .)
    OUTPUT          reduce using rule 372 (taskvardecls -> taskvardecls taskvardecl .)
    INOUT           reduce using rule 372 (taskvardecls -> taskvardecls taskvardecl .)
    TRI             reduce using rule 372 (taskvardecls -> taskvardecls taskvardecl .)
    REG             reduce using rule 372 (taskvardecls -> taskvardecls taskvardecl .)
    WIRE            reduce using rule 372 (taskvardecls -> taskvardecls taskvardecl .)
    SIGNED          reduce using rule 372 (taskvardecls -> taskvardecls taskvardecl .)
    SUPPLY0         reduce using rule 372 (taskvardecls -> taskvardecls taskvardecl .)
    SUPPLY1         reduce using rule 372 (taskvardecls -> taskvardecls taskvardecl .)
    LBRACE          reduce using rule 372 (taskvardecls -> taskvardecls taskvardecl .)
    ID              reduce using rule 372 (taskvardecls -> taskvardecls taskvardecl .)


state 616

    (383) task_calc -> block .

    ENDTASK         reduce using rule 383 (task_calc -> block .)


state 617

    (370) task -> TASK ID SEMICOLON task_statement ENDTASK .

    END             reduce using rule 370 (task -> TASK ID SEMICOLON task_statement ENDTASK .)
    IF              reduce using rule 370 (task -> TASK ID SEMICOLON task_statement ENDTASK .)
    FOR             reduce using rule 370 (task -> TASK ID SEMICOLON task_statement ENDTASK .)
    INTEGER         reduce using rule 370 (task -> TASK ID SEMICOLON task_statement ENDTASK .)
    REAL            reduce using rule 370 (task -> TASK ID SEMICOLON task_statement ENDTASK .)
    PARAMETER       reduce using rule 370 (task -> TASK ID SEMICOLON task_statement ENDTASK .)
    LOCALPARAM      reduce using rule 370 (task -> TASK ID SEMICOLON task_statement ENDTASK .)
    GENVAR          reduce using rule 370 (task -> TASK ID SEMICOLON task_statement ENDTASK .)
    ASSIGN          reduce using rule 370 (task -> TASK ID SEMICOLON task_statement ENDTASK .)
    ALWAYS          reduce using rule 370 (task -> TASK ID SEMICOLON task_statement ENDTASK .)
    INITIAL         reduce using rule 370 (task -> TASK ID SEMICOLON task_statement ENDTASK .)
    ID              reduce using rule 370 (task -> TASK ID SEMICOLON task_statement ENDTASK .)
    SENS_OR         reduce using rule 370 (task -> TASK ID SEMICOLON task_statement ENDTASK .)
    FUNCTION        reduce using rule 370 (task -> TASK ID SEMICOLON task_statement ENDTASK .)
    TASK            reduce using rule 370 (task -> TASK ID SEMICOLON task_statement ENDTASK .)
    LPAREN          reduce using rule 370 (task -> TASK ID SEMICOLON task_statement ENDTASK .)
    INPUT           reduce using rule 370 (task -> TASK ID SEMICOLON task_statement ENDTASK .)
    OUTPUT          reduce using rule 370 (task -> TASK ID SEMICOLON task_statement ENDTASK .)
    INOUT           reduce using rule 370 (task -> TASK ID SEMICOLON task_statement ENDTASK .)
    TRI             reduce using rule 370 (task -> TASK ID SEMICOLON task_statement ENDTASK .)
    REG             reduce using rule 370 (task -> TASK ID SEMICOLON task_statement ENDTASK .)
    WIRE            reduce using rule 370 (task -> TASK ID SEMICOLON task_statement ENDTASK .)
    SIGNED          reduce using rule 370 (task -> TASK ID SEMICOLON task_statement ENDTASK .)
    SUPPLY0         reduce using rule 370 (task -> TASK ID SEMICOLON task_statement ENDTASK .)
    SUPPLY1         reduce using rule 370 (task -> TASK ID SEMICOLON task_statement ENDTASK .)
    ELSE            reduce using rule 370 (task -> TASK ID SEMICOLON task_statement ENDTASK .)
    ENDGENERATE     reduce using rule 370 (task -> TASK ID SEMICOLON task_statement ENDTASK .)
    ENDMODULE       reduce using rule 370 (task -> TASK ID SEMICOLON task_statement ENDTASK .)
    GENERATE        reduce using rule 370 (task -> TASK ID SEMICOLON task_statement ENDTASK .)


state 618

    (292) instance_bodylist -> instance_bodylist COMMA instance_body .

    SEMICOLON       reduce using rule 292 (instance_bodylist -> instance_bodylist COMMA instance_body .)
    COMMA           reduce using rule 292 (instance_bodylist -> instance_bodylist COMMA instance_body .)


state 619

    (295) instance_body -> ID width LPAREN . instance_ports RPAREN
    (311) instance_ports -> . instance_ports_list
    (312) instance_ports -> . instance_ports_arg
    (313) instance_ports_list -> . instance_ports_list COMMA instance_port_list
    (314) instance_ports_list -> . instance_port_list
    (315) instance_ports_list -> . empty
    (317) instance_ports_arg -> . instance_ports_arg COMMA instance_port_arg
    (318) instance_ports_arg -> . instance_port_arg
    (316) instance_port_list -> . expression
    (393) empty -> .
    (319) instance_port_arg -> . DOT ID LPAREN identifier RPAREN
    (320) instance_port_arg -> . DOT ID LPAREN expression RPAREN
    (321) instance_port_arg -> . DOT ID LPAREN RPAREN
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    COMMA           reduce using rule 393 (empty -> .)
    RPAREN          reduce using rule 393 (empty -> .)
    DOT             shift and go to state 395
    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    instance_ports_list            shift and go to state 394
    systemcall                     shift and go to state 27
    stringliteral                  shift and go to state 53
    pointer                        shift and go to state 31
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    instance_ports_arg             shift and go to state 396
    const_expression               shift and go to state 29
    scope                          shift and go to state 44
    instance_ports                 shift and go to state 693
    intnumber                      shift and go to state 37
    empty                          shift and go to state 398
    repeat                         shift and go to state 30
    instance_port_list             shift and go to state 399
    concat                         shift and go to state 47
    instance_port_arg              shift and go to state 400
    functioncall                   shift and go to state 55
    identifier                     shift and go to state 57
    expression                     shift and go to state 401

state 620

    (294) instance_body -> ID LPAREN instance_ports . RPAREN

    RPAREN          shift and go to state 694


state 621

    (313) instance_ports_list -> instance_ports_list COMMA instance_port_list .

    COMMA           reduce using rule 313 (instance_ports_list -> instance_ports_list COMMA instance_port_list .)
    RPAREN          reduce using rule 313 (instance_ports_list -> instance_ports_list COMMA instance_port_list .)


state 622

    (319) instance_port_arg -> DOT ID LPAREN . identifier RPAREN
    (320) instance_port_arg -> DOT ID LPAREN . expression RPAREN
    (321) instance_port_arg -> DOT ID LPAREN . RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    RPAREN          shift and go to state 696
    ID              shift and go to state 46
    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    pointer                        shift and go to state 695
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 697
    expression                     shift and go to state 698
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 623

    (317) instance_ports_arg -> instance_ports_arg COMMA instance_port_arg .

    COMMA           reduce using rule 317 (instance_ports_arg -> instance_ports_arg COMMA instance_port_arg .)
    RPAREN          reduce using rule 317 (instance_ports_arg -> instance_ports_arg COMMA instance_port_arg .)


state 624

    (310) param_arg -> DOT ID . LPAREN expression RPAREN

    LPAREN          shift and go to state 699


state 625

    (302) parameterlist -> DELAY LPAREN param_args_noname RPAREN .

    ID              reduce using rule 302 (parameterlist -> DELAY LPAREN param_args_noname RPAREN .)


state 626

    (304) param_args_noname -> param_args_noname COMMA . param_arg_noname
    (309) param_arg_noname -> . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    pointer                        shift and go to state 31
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    param_arg_noname               shift and go to state 700
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    expression                     shift and go to state 524
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 627

    (301) parameterlist -> DELAY LPAREN param_args RPAREN .

    ID              reduce using rule 301 (parameterlist -> DELAY LPAREN param_args RPAREN .)


state 628

    (306) param_args -> param_args COMMA . param_arg
    (310) param_arg -> . DOT ID LPAREN expression RPAREN

    DOT             shift and go to state 518

    param_arg                      shift and go to state 701

state 629

    (351) function -> FUNCTION width ID SEMICOLON function_statement . ENDFUNCTION

    ENDFUNCTION     shift and go to state 702


state 630

    (352) function -> FUNCTION ID SEMICOLON function_statement ENDFUNCTION .

    END             reduce using rule 352 (function -> FUNCTION ID SEMICOLON function_statement ENDFUNCTION .)
    IF              reduce using rule 352 (function -> FUNCTION ID SEMICOLON function_statement ENDFUNCTION .)
    FOR             reduce using rule 352 (function -> FUNCTION ID SEMICOLON function_statement ENDFUNCTION .)
    INTEGER         reduce using rule 352 (function -> FUNCTION ID SEMICOLON function_statement ENDFUNCTION .)
    REAL            reduce using rule 352 (function -> FUNCTION ID SEMICOLON function_statement ENDFUNCTION .)
    PARAMETER       reduce using rule 352 (function -> FUNCTION ID SEMICOLON function_statement ENDFUNCTION .)
    LOCALPARAM      reduce using rule 352 (function -> FUNCTION ID SEMICOLON function_statement ENDFUNCTION .)
    GENVAR          reduce using rule 352 (function -> FUNCTION ID SEMICOLON function_statement ENDFUNCTION .)
    ASSIGN          reduce using rule 352 (function -> FUNCTION ID SEMICOLON function_statement ENDFUNCTION .)
    ALWAYS          reduce using rule 352 (function -> FUNCTION ID SEMICOLON function_statement ENDFUNCTION .)
    INITIAL         reduce using rule 352 (function -> FUNCTION ID SEMICOLON function_statement ENDFUNCTION .)
    ID              reduce using rule 352 (function -> FUNCTION ID SEMICOLON function_statement ENDFUNCTION .)
    SENS_OR         reduce using rule 352 (function -> FUNCTION ID SEMICOLON function_statement ENDFUNCTION .)
    FUNCTION        reduce using rule 352 (function -> FUNCTION ID SEMICOLON function_statement ENDFUNCTION .)
    TASK            reduce using rule 352 (function -> FUNCTION ID SEMICOLON function_statement ENDFUNCTION .)
    LPAREN          reduce using rule 352 (function -> FUNCTION ID SEMICOLON function_statement ENDFUNCTION .)
    INPUT           reduce using rule 352 (function -> FUNCTION ID SEMICOLON function_statement ENDFUNCTION .)
    OUTPUT          reduce using rule 352 (function -> FUNCTION ID SEMICOLON function_statement ENDFUNCTION .)
    INOUT           reduce using rule 352 (function -> FUNCTION ID SEMICOLON function_statement ENDFUNCTION .)
    TRI             reduce using rule 352 (function -> FUNCTION ID SEMICOLON function_statement ENDFUNCTION .)
    REG             reduce using rule 352 (function -> FUNCTION ID SEMICOLON function_statement ENDFUNCTION .)
    WIRE            reduce using rule 352 (function -> FUNCTION ID SEMICOLON function_statement ENDFUNCTION .)
    SIGNED          reduce using rule 352 (function -> FUNCTION ID SEMICOLON function_statement ENDFUNCTION .)
    SUPPLY0         reduce using rule 352 (function -> FUNCTION ID SEMICOLON function_statement ENDFUNCTION .)
    SUPPLY1         reduce using rule 352 (function -> FUNCTION ID SEMICOLON function_statement ENDFUNCTION .)
    ENDGENERATE     reduce using rule 352 (function -> FUNCTION ID SEMICOLON function_statement ENDFUNCTION .)
    ENDMODULE       reduce using rule 352 (function -> FUNCTION ID SEMICOLON function_statement ENDFUNCTION .)
    GENERATE        reduce using rule 352 (function -> FUNCTION ID SEMICOLON function_statement ENDFUNCTION .)
    ELSE            reduce using rule 352 (function -> FUNCTION ID SEMICOLON function_statement ENDFUNCTION .)


state 631

    (353) function_statement -> funcvardecls function_calc .

    ENDFUNCTION     reduce using rule 353 (function_statement -> funcvardecls function_calc .)


state 632

    (363) function_calc -> casex_statement .

    ENDFUNCTION     reduce using rule 363 (function_calc -> casex_statement .)


state 633

    (358) function_calc -> blocking_substitution .

    ENDFUNCTION     reduce using rule 358 (function_calc -> blocking_substitution .)


state 634

    (361) function_calc -> while_statement .

    ENDFUNCTION     reduce using rule 361 (function_calc -> while_statement .)


state 635

    (359) function_calc -> if_statement .

    ENDFUNCTION     reduce using rule 359 (function_calc -> if_statement .)


state 636

    (360) function_calc -> for_statement .

    ENDFUNCTION     reduce using rule 360 (function_calc -> for_statement .)


state 637

    (362) function_calc -> case_statement .

    ENDFUNCTION     reduce using rule 362 (function_calc -> case_statement .)


state 638

    (365) function_calc -> namedblock .

    ENDFUNCTION     reduce using rule 365 (function_calc -> namedblock .)


state 639

    (354) funcvardecls -> funcvardecls funcvardecl .

    IF              reduce using rule 354 (funcvardecls -> funcvardecls funcvardecl .)
    FOR             reduce using rule 354 (funcvardecls -> funcvardecls funcvardecl .)
    WHILE           reduce using rule 354 (funcvardecls -> funcvardecls funcvardecl .)
    CASE            reduce using rule 354 (funcvardecls -> funcvardecls funcvardecl .)
    CASEX           reduce using rule 354 (funcvardecls -> funcvardecls funcvardecl .)
    BEGIN           reduce using rule 354 (funcvardecls -> funcvardecls funcvardecl .)
    INTEGER         reduce using rule 354 (funcvardecls -> funcvardecls funcvardecl .)
    DELAY           reduce using rule 354 (funcvardecls -> funcvardecls funcvardecl .)
    INPUT           reduce using rule 354 (funcvardecls -> funcvardecls funcvardecl .)
    OUTPUT          reduce using rule 354 (funcvardecls -> funcvardecls funcvardecl .)
    INOUT           reduce using rule 354 (funcvardecls -> funcvardecls funcvardecl .)
    TRI             reduce using rule 354 (funcvardecls -> funcvardecls funcvardecl .)
    REG             reduce using rule 354 (funcvardecls -> funcvardecls funcvardecl .)
    WIRE            reduce using rule 354 (funcvardecls -> funcvardecls funcvardecl .)
    SIGNED          reduce using rule 354 (funcvardecls -> funcvardecls funcvardecl .)
    SUPPLY0         reduce using rule 354 (funcvardecls -> funcvardecls funcvardecl .)
    SUPPLY1         reduce using rule 354 (funcvardecls -> funcvardecls funcvardecl .)
    LBRACE          reduce using rule 354 (funcvardecls -> funcvardecls funcvardecl .)
    ID              reduce using rule 354 (funcvardecls -> funcvardecls funcvardecl .)


state 640

    (364) function_calc -> block .

    ENDFUNCTION     reduce using rule 364 (function_calc -> block .)


state 641

    (101) localparamdecl -> LOCALPARAM SIGNED width param_substitution_list SEMICOLON .

    END             reduce using rule 101 (localparamdecl -> LOCALPARAM SIGNED width param_substitution_list SEMICOLON .)
    IF              reduce using rule 101 (localparamdecl -> LOCALPARAM SIGNED width param_substitution_list SEMICOLON .)
    FOR             reduce using rule 101 (localparamdecl -> LOCALPARAM SIGNED width param_substitution_list SEMICOLON .)
    INTEGER         reduce using rule 101 (localparamdecl -> LOCALPARAM SIGNED width param_substitution_list SEMICOLON .)
    REAL            reduce using rule 101 (localparamdecl -> LOCALPARAM SIGNED width param_substitution_list SEMICOLON .)
    PARAMETER       reduce using rule 101 (localparamdecl -> LOCALPARAM SIGNED width param_substitution_list SEMICOLON .)
    LOCALPARAM      reduce using rule 101 (localparamdecl -> LOCALPARAM SIGNED width param_substitution_list SEMICOLON .)
    GENVAR          reduce using rule 101 (localparamdecl -> LOCALPARAM SIGNED width param_substitution_list SEMICOLON .)
    ASSIGN          reduce using rule 101 (localparamdecl -> LOCALPARAM SIGNED width param_substitution_list SEMICOLON .)
    ALWAYS          reduce using rule 101 (localparamdecl -> LOCALPARAM SIGNED width param_substitution_list SEMICOLON .)
    INITIAL         reduce using rule 101 (localparamdecl -> LOCALPARAM SIGNED width param_substitution_list SEMICOLON .)
    ID              reduce using rule 101 (localparamdecl -> LOCALPARAM SIGNED width param_substitution_list SEMICOLON .)
    SENS_OR         reduce using rule 101 (localparamdecl -> LOCALPARAM SIGNED width param_substitution_list SEMICOLON .)
    FUNCTION        reduce using rule 101 (localparamdecl -> LOCALPARAM SIGNED width param_substitution_list SEMICOLON .)
    TASK            reduce using rule 101 (localparamdecl -> LOCALPARAM SIGNED width param_substitution_list SEMICOLON .)
    LPAREN          reduce using rule 101 (localparamdecl -> LOCALPARAM SIGNED width param_substitution_list SEMICOLON .)
    INPUT           reduce using rule 101 (localparamdecl -> LOCALPARAM SIGNED width param_substitution_list SEMICOLON .)
    OUTPUT          reduce using rule 101 (localparamdecl -> LOCALPARAM SIGNED width param_substitution_list SEMICOLON .)
    INOUT           reduce using rule 101 (localparamdecl -> LOCALPARAM SIGNED width param_substitution_list SEMICOLON .)
    TRI             reduce using rule 101 (localparamdecl -> LOCALPARAM SIGNED width param_substitution_list SEMICOLON .)
    REG             reduce using rule 101 (localparamdecl -> LOCALPARAM SIGNED width param_substitution_list SEMICOLON .)
    WIRE            reduce using rule 101 (localparamdecl -> LOCALPARAM SIGNED width param_substitution_list SEMICOLON .)
    SIGNED          reduce using rule 101 (localparamdecl -> LOCALPARAM SIGNED width param_substitution_list SEMICOLON .)
    SUPPLY0         reduce using rule 101 (localparamdecl -> LOCALPARAM SIGNED width param_substitution_list SEMICOLON .)
    SUPPLY1         reduce using rule 101 (localparamdecl -> LOCALPARAM SIGNED width param_substitution_list SEMICOLON .)
    ELSE            reduce using rule 101 (localparamdecl -> LOCALPARAM SIGNED width param_substitution_list SEMICOLON .)
    ENDGENERATE     reduce using rule 101 (localparamdecl -> LOCALPARAM SIGNED width param_substitution_list SEMICOLON .)
    ENDMODULE       reduce using rule 101 (localparamdecl -> LOCALPARAM SIGNED width param_substitution_list SEMICOLON .)
    GENERATE        reduce using rule 101 (localparamdecl -> LOCALPARAM SIGNED width param_substitution_list SEMICOLON .)
    CASE            reduce using rule 101 (localparamdecl -> LOCALPARAM SIGNED width param_substitution_list SEMICOLON .)
    CASEX           reduce using rule 101 (localparamdecl -> LOCALPARAM SIGNED width param_substitution_list SEMICOLON .)
    WHILE           reduce using rule 101 (localparamdecl -> LOCALPARAM SIGNED width param_substitution_list SEMICOLON .)
    WAIT            reduce using rule 101 (localparamdecl -> LOCALPARAM SIGNED width param_substitution_list SEMICOLON .)
    FOREVER         reduce using rule 101 (localparamdecl -> LOCALPARAM SIGNED width param_substitution_list SEMICOLON .)
    BEGIN           reduce using rule 101 (localparamdecl -> LOCALPARAM SIGNED width param_substitution_list SEMICOLON .)
    FORK            reduce using rule 101 (localparamdecl -> LOCALPARAM SIGNED width param_substitution_list SEMICOLON .)
    DELAY           reduce using rule 101 (localparamdecl -> LOCALPARAM SIGNED width param_substitution_list SEMICOLON .)
    AT              reduce using rule 101 (localparamdecl -> LOCALPARAM SIGNED width param_substitution_list SEMICOLON .)
    DOLLER          reduce using rule 101 (localparamdecl -> LOCALPARAM SIGNED width param_substitution_list SEMICOLON .)
    DISABLE         reduce using rule 101 (localparamdecl -> LOCALPARAM SIGNED width param_substitution_list SEMICOLON .)
    LBRACE          reduce using rule 101 (localparamdecl -> LOCALPARAM SIGNED width param_substitution_list SEMICOLON .)
    SEMICOLON       reduce using rule 101 (localparamdecl -> LOCALPARAM SIGNED width param_substitution_list SEMICOLON .)


state 642

    (49) ioport -> sigtypes width portname .

    RPAREN          reduce using rule 49 (ioport -> sigtypes width portname .)
    COMMA           reduce using rule 49 (ioport -> sigtypes width portname .)


state 643

    (21) param -> PARAMETER SIGNED width param_substitution_list COMMA .
    (103) param_substitution_list -> param_substitution_list COMMA . param_substitution
    (105) param_substitution -> . ID EQUALS rvalue

    PARAMETER       reduce using rule 21 (param -> PARAMETER SIGNED width param_substitution_list COMMA .)
    ID              shift and go to state 209

    param_substitution             shift and go to state 478

state 644

    (178) partselect -> pointer LBRACKET expression COLON expression RBRACKET .

    RBRACKET        reduce using rule 178 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    POWER           reduce using rule 178 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    TIMES           reduce using rule 178 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    DIVIDE          reduce using rule 178 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    MOD             reduce using rule 178 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    PLUS            reduce using rule 178 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    MINUS           reduce using rule 178 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    LSHIFT          reduce using rule 178 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    RSHIFT          reduce using rule 178 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    LSHIFTA         reduce using rule 178 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    RSHIFTA         reduce using rule 178 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    LT              reduce using rule 178 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    GT              reduce using rule 178 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    LE              reduce using rule 178 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    GE              reduce using rule 178 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    EQ              reduce using rule 178 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    NE              reduce using rule 178 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    EQL             reduce using rule 178 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    NEL             reduce using rule 178 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    AND             reduce using rule 178 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    XOR             reduce using rule 178 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    XNOR            reduce using rule 178 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    OR              reduce using rule 178 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    LAND            reduce using rule 178 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    LOR             reduce using rule 178 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    COND            reduce using rule 178 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    RPAREN          reduce using rule 178 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    COLON           reduce using rule 178 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    PLUSCOLON       reduce using rule 178 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    MINUSCOLON      reduce using rule 178 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    COMMA           reduce using rule 178 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    SEMICOLON       reduce using rule 178 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    LBRACE          reduce using rule 178 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    RBRACE          reduce using rule 178 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    SENS_OR         reduce using rule 178 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    IF              reduce using rule 178 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    CASE            reduce using rule 178 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    CASEX           reduce using rule 178 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    FOR             reduce using rule 178 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    WHILE           reduce using rule 178 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    WAIT            reduce using rule 178 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    FOREVER         reduce using rule 178 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    BEGIN           reduce using rule 178 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    FORK            reduce using rule 178 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    DELAY           reduce using rule 178 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    AT              reduce using rule 178 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    DOLLER          reduce using rule 178 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    DISABLE         reduce using rule 178 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    ID              reduce using rule 178 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)


state 645

    (179) partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .

    RBRACKET        reduce using rule 179 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    POWER           reduce using rule 179 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    TIMES           reduce using rule 179 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    DIVIDE          reduce using rule 179 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    MOD             reduce using rule 179 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    PLUS            reduce using rule 179 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    MINUS           reduce using rule 179 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    LSHIFT          reduce using rule 179 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    RSHIFT          reduce using rule 179 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    LSHIFTA         reduce using rule 179 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    RSHIFTA         reduce using rule 179 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    LT              reduce using rule 179 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    GT              reduce using rule 179 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    LE              reduce using rule 179 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    GE              reduce using rule 179 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    EQ              reduce using rule 179 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    NE              reduce using rule 179 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    EQL             reduce using rule 179 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    NEL             reduce using rule 179 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    AND             reduce using rule 179 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    XOR             reduce using rule 179 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    XNOR            reduce using rule 179 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    OR              reduce using rule 179 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    LAND            reduce using rule 179 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    LOR             reduce using rule 179 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    COND            reduce using rule 179 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    RPAREN          reduce using rule 179 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    COLON           reduce using rule 179 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    PLUSCOLON       reduce using rule 179 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    MINUSCOLON      reduce using rule 179 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    COMMA           reduce using rule 179 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    SEMICOLON       reduce using rule 179 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    LBRACE          reduce using rule 179 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    RBRACE          reduce using rule 179 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    SENS_OR         reduce using rule 179 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    IF              reduce using rule 179 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    CASE            reduce using rule 179 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    CASEX           reduce using rule 179 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    FOR             reduce using rule 179 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    WHILE           reduce using rule 179 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    WAIT            reduce using rule 179 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    FOREVER         reduce using rule 179 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    BEGIN           reduce using rule 179 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    FORK            reduce using rule 179 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    DELAY           reduce using rule 179 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    AT              reduce using rule 179 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    DOLLER          reduce using rule 179 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    DISABLE         reduce using rule 179 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    ID              reduce using rule 179 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)


state 646

    (180) partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .

    RBRACKET        reduce using rule 180 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    POWER           reduce using rule 180 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    TIMES           reduce using rule 180 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    DIVIDE          reduce using rule 180 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    MOD             reduce using rule 180 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    PLUS            reduce using rule 180 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    MINUS           reduce using rule 180 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    LSHIFT          reduce using rule 180 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    RSHIFT          reduce using rule 180 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    LSHIFTA         reduce using rule 180 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    RSHIFTA         reduce using rule 180 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    LT              reduce using rule 180 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    GT              reduce using rule 180 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    LE              reduce using rule 180 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    GE              reduce using rule 180 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    EQ              reduce using rule 180 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    NE              reduce using rule 180 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    EQL             reduce using rule 180 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    NEL             reduce using rule 180 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    AND             reduce using rule 180 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    XOR             reduce using rule 180 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    XNOR            reduce using rule 180 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    OR              reduce using rule 180 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    LAND            reduce using rule 180 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    LOR             reduce using rule 180 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    COND            reduce using rule 180 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    RPAREN          reduce using rule 180 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    COLON           reduce using rule 180 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    PLUSCOLON       reduce using rule 180 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    MINUSCOLON      reduce using rule 180 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    COMMA           reduce using rule 180 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    SEMICOLON       reduce using rule 180 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    LBRACE          reduce using rule 180 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    RBRACE          reduce using rule 180 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    SENS_OR         reduce using rule 180 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    IF              reduce using rule 180 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    CASE            reduce using rule 180 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    CASEX           reduce using rule 180 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    FOR             reduce using rule 180 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    WHILE           reduce using rule 180 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    WAIT            reduce using rule 180 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    FOREVER         reduce using rule 180 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    BEGIN           reduce using rule 180 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    FORK            reduce using rule 180 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    DELAY           reduce using rule 180 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    AT              reduce using rule 180 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    DOLLER          reduce using rule 180 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    DISABLE         reduce using rule 180 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    ID              reduce using rule 180 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)


state 647

    (347) sysargs -> sysargs COMMA sysarg .

    RPAREN          reduce using rule 347 (sysargs -> sysargs COMMA sysarg .)
    COMMA           reduce using rule 347 (sysargs -> sysargs COMMA sysarg .)


state 648

    (175) partselect -> identifier LBRACKET expression COLON expression RBRACKET .

    RBRACKET        reduce using rule 175 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    POWER           reduce using rule 175 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    TIMES           reduce using rule 175 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    DIVIDE          reduce using rule 175 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    MOD             reduce using rule 175 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    PLUS            reduce using rule 175 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    MINUS           reduce using rule 175 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    LSHIFT          reduce using rule 175 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    RSHIFT          reduce using rule 175 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    LSHIFTA         reduce using rule 175 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    RSHIFTA         reduce using rule 175 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    LT              reduce using rule 175 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    GT              reduce using rule 175 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    LE              reduce using rule 175 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    GE              reduce using rule 175 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    EQ              reduce using rule 175 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    NE              reduce using rule 175 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    EQL             reduce using rule 175 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    NEL             reduce using rule 175 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    AND             reduce using rule 175 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    XOR             reduce using rule 175 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    XNOR            reduce using rule 175 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    OR              reduce using rule 175 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    LAND            reduce using rule 175 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    LOR             reduce using rule 175 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    COND            reduce using rule 175 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    RPAREN          reduce using rule 175 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    COLON           reduce using rule 175 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    PLUSCOLON       reduce using rule 175 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    MINUSCOLON      reduce using rule 175 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    COMMA           reduce using rule 175 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    SEMICOLON       reduce using rule 175 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    LBRACE          reduce using rule 175 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    RBRACE          reduce using rule 175 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    SENS_OR         reduce using rule 175 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    IF              reduce using rule 175 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    CASE            reduce using rule 175 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    CASEX           reduce using rule 175 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    FOR             reduce using rule 175 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    WHILE           reduce using rule 175 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    WAIT            reduce using rule 175 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    FOREVER         reduce using rule 175 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    BEGIN           reduce using rule 175 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    FORK            reduce using rule 175 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    DELAY           reduce using rule 175 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    AT              reduce using rule 175 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    DOLLER          reduce using rule 175 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    DISABLE         reduce using rule 175 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    ID              reduce using rule 175 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)


state 649

    (176) partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .

    RBRACKET        reduce using rule 176 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    POWER           reduce using rule 176 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    TIMES           reduce using rule 176 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    DIVIDE          reduce using rule 176 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    MOD             reduce using rule 176 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    PLUS            reduce using rule 176 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    MINUS           reduce using rule 176 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    LSHIFT          reduce using rule 176 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    RSHIFT          reduce using rule 176 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    LSHIFTA         reduce using rule 176 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    RSHIFTA         reduce using rule 176 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    LT              reduce using rule 176 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    GT              reduce using rule 176 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    LE              reduce using rule 176 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    GE              reduce using rule 176 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    EQ              reduce using rule 176 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    NE              reduce using rule 176 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    EQL             reduce using rule 176 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    NEL             reduce using rule 176 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    AND             reduce using rule 176 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    XOR             reduce using rule 176 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    XNOR            reduce using rule 176 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    OR              reduce using rule 176 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    LAND            reduce using rule 176 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    LOR             reduce using rule 176 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    COND            reduce using rule 176 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    RPAREN          reduce using rule 176 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    COLON           reduce using rule 176 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    PLUSCOLON       reduce using rule 176 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    MINUSCOLON      reduce using rule 176 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    COMMA           reduce using rule 176 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    SEMICOLON       reduce using rule 176 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    LBRACE          reduce using rule 176 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    RBRACE          reduce using rule 176 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    SENS_OR         reduce using rule 176 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    IF              reduce using rule 176 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    CASE            reduce using rule 176 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    CASEX           reduce using rule 176 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    FOR             reduce using rule 176 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    WHILE           reduce using rule 176 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    WAIT            reduce using rule 176 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    FOREVER         reduce using rule 176 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    BEGIN           reduce using rule 176 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    FORK            reduce using rule 176 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    DELAY           reduce using rule 176 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    AT              reduce using rule 176 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    DOLLER          reduce using rule 176 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    DISABLE         reduce using rule 176 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    ID              reduce using rule 176 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)


state 650

    (177) partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .

    RBRACKET        reduce using rule 177 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    POWER           reduce using rule 177 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    TIMES           reduce using rule 177 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    DIVIDE          reduce using rule 177 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    MOD             reduce using rule 177 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    PLUS            reduce using rule 177 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    MINUS           reduce using rule 177 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    LSHIFT          reduce using rule 177 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    RSHIFT          reduce using rule 177 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    LSHIFTA         reduce using rule 177 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    RSHIFTA         reduce using rule 177 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    LT              reduce using rule 177 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    GT              reduce using rule 177 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    LE              reduce using rule 177 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    GE              reduce using rule 177 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    EQ              reduce using rule 177 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    NE              reduce using rule 177 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    EQL             reduce using rule 177 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    NEL             reduce using rule 177 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    AND             reduce using rule 177 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    XOR             reduce using rule 177 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    XNOR            reduce using rule 177 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    OR              reduce using rule 177 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    LAND            reduce using rule 177 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    LOR             reduce using rule 177 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    COND            reduce using rule 177 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    RPAREN          reduce using rule 177 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    COLON           reduce using rule 177 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    PLUSCOLON       reduce using rule 177 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    MINUSCOLON      reduce using rule 177 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    COMMA           reduce using rule 177 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    SEMICOLON       reduce using rule 177 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    LBRACE          reduce using rule 177 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    RBRACE          reduce using rule 177 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    SENS_OR         reduce using rule 177 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    IF              reduce using rule 177 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    CASE            reduce using rule 177 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    CASEX           reduce using rule 177 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    FOR             reduce using rule 177 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    WHILE           reduce using rule 177 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    WAIT            reduce using rule 177 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    FOREVER         reduce using rule 177 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    BEGIN           reduce using rule 177 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    FORK            reduce using rule 177 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    DELAY           reduce using rule 177 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    AT              reduce using rule 177 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    DOLLER          reduce using rule 177 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    DISABLE         reduce using rule 177 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    ID              reduce using rule 177 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)


state 651

    (288) waitcontent_statement -> SEMICOLON .

    ENDMODULE       reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    GENERATE        reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    INTEGER         reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    REAL            reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    PARAMETER       reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    LOCALPARAM      reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    GENVAR          reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    ASSIGN          reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    ALWAYS          reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    INITIAL         reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    ID              reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    SENS_OR         reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    FUNCTION        reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    TASK            reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    LPAREN          reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    INPUT           reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    OUTPUT          reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    INOUT           reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    TRI             reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    REG             reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    WIRE            reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    SIGNED          reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    SUPPLY0         reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    SUPPLY1         reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    ENDGENERATE     reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    IF              reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    FOR             reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    ELSE            reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    END             reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    JOIN            reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    CASE            reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    CASEX           reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    WHILE           reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    WAIT            reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    FOREVER         reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    BEGIN           reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    FORK            reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    DELAY           reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    AT              reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    DOLLER          reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    DISABLE         reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    LBRACE          reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    SEMICOLON       reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    ENDTASK         reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    ENDFUNCTION     reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    ENDCASE         reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    DEFAULT         reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    MINUS           reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    PLUS            reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    LNOT            reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    NOT             reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    AND             reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    NAND            reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    NOR             reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    OR              reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    XOR             reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    XNOR            reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    INTNUMBER_DEC   reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    SIGNED_INTNUMBER_DEC reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    INTNUMBER_BIN   reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    SIGNED_INTNUMBER_BIN reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    INTNUMBER_OCT   reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    SIGNED_INTNUMBER_OCT reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    INTNUMBER_HEX   reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    SIGNED_INTNUMBER_HEX reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    FLOATNUMBER     reduce using rule 288 (waitcontent_statement -> SEMICOLON .)
    STRING_LITERAL  reduce using rule 288 (waitcontent_statement -> SEMICOLON .)


state 652

    (286) wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .

    ENDMODULE       reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    GENERATE        reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    INTEGER         reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    REAL            reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    PARAMETER       reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    LOCALPARAM      reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    GENVAR          reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    ASSIGN          reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    ALWAYS          reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    INITIAL         reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    ID              reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    SENS_OR         reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    FUNCTION        reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    TASK            reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    LPAREN          reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    INPUT           reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    OUTPUT          reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    INOUT           reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    TRI             reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    REG             reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    WIRE            reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    SIGNED          reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    SUPPLY0         reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    SUPPLY1         reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    ENDGENERATE     reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    IF              reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    FOR             reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    ELSE            reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    END             reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    JOIN            reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    CASE            reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    CASEX           reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    WHILE           reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    WAIT            reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    FOREVER         reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    BEGIN           reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    FORK            reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    DELAY           reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    AT              reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    DOLLER          reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    DISABLE         reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    LBRACE          reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    SEMICOLON       reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    ENDTASK         reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    ENDFUNCTION     reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    ENDCASE         reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    DEFAULT         reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    MINUS           reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    PLUS            reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    LNOT            reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    NOT             reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    AND             reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    NAND            reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    NOR             reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    OR              reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    XOR             reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    XNOR            reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    INTNUMBER_DEC   reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    SIGNED_INTNUMBER_DEC reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    INTNUMBER_BIN   reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    SIGNED_INTNUMBER_BIN reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    INTNUMBER_OCT   reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    SIGNED_INTNUMBER_OCT reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    INTNUMBER_HEX   reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    SIGNED_INTNUMBER_HEX reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    FLOATNUMBER     reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    STRING_LITERAL  reduce using rule 286 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)


state 653

    (287) waitcontent_statement -> basic_statement .

    ENDMODULE       reduce using rule 287 (waitcontent_statement -> basic_statement .)
    GENERATE        reduce using rule 287 (waitcontent_statement -> basic_statement .)
    INTEGER         reduce using rule 287 (waitcontent_statement -> basic_statement .)
    REAL            reduce using rule 287 (waitcontent_statement -> basic_statement .)
    PARAMETER       reduce using rule 287 (waitcontent_statement -> basic_statement .)
    LOCALPARAM      reduce using rule 287 (waitcontent_statement -> basic_statement .)
    GENVAR          reduce using rule 287 (waitcontent_statement -> basic_statement .)
    ASSIGN          reduce using rule 287 (waitcontent_statement -> basic_statement .)
    ALWAYS          reduce using rule 287 (waitcontent_statement -> basic_statement .)
    INITIAL         reduce using rule 287 (waitcontent_statement -> basic_statement .)
    ID              reduce using rule 287 (waitcontent_statement -> basic_statement .)
    SENS_OR         reduce using rule 287 (waitcontent_statement -> basic_statement .)
    FUNCTION        reduce using rule 287 (waitcontent_statement -> basic_statement .)
    TASK            reduce using rule 287 (waitcontent_statement -> basic_statement .)
    LPAREN          reduce using rule 287 (waitcontent_statement -> basic_statement .)
    INPUT           reduce using rule 287 (waitcontent_statement -> basic_statement .)
    OUTPUT          reduce using rule 287 (waitcontent_statement -> basic_statement .)
    INOUT           reduce using rule 287 (waitcontent_statement -> basic_statement .)
    TRI             reduce using rule 287 (waitcontent_statement -> basic_statement .)
    REG             reduce using rule 287 (waitcontent_statement -> basic_statement .)
    WIRE            reduce using rule 287 (waitcontent_statement -> basic_statement .)
    SIGNED          reduce using rule 287 (waitcontent_statement -> basic_statement .)
    SUPPLY0         reduce using rule 287 (waitcontent_statement -> basic_statement .)
    SUPPLY1         reduce using rule 287 (waitcontent_statement -> basic_statement .)
    ENDGENERATE     reduce using rule 287 (waitcontent_statement -> basic_statement .)
    IF              reduce using rule 287 (waitcontent_statement -> basic_statement .)
    FOR             reduce using rule 287 (waitcontent_statement -> basic_statement .)
    ELSE            reduce using rule 287 (waitcontent_statement -> basic_statement .)
    END             reduce using rule 287 (waitcontent_statement -> basic_statement .)
    JOIN            reduce using rule 287 (waitcontent_statement -> basic_statement .)
    CASE            reduce using rule 287 (waitcontent_statement -> basic_statement .)
    CASEX           reduce using rule 287 (waitcontent_statement -> basic_statement .)
    WHILE           reduce using rule 287 (waitcontent_statement -> basic_statement .)
    WAIT            reduce using rule 287 (waitcontent_statement -> basic_statement .)
    FOREVER         reduce using rule 287 (waitcontent_statement -> basic_statement .)
    BEGIN           reduce using rule 287 (waitcontent_statement -> basic_statement .)
    FORK            reduce using rule 287 (waitcontent_statement -> basic_statement .)
    DELAY           reduce using rule 287 (waitcontent_statement -> basic_statement .)
    AT              reduce using rule 287 (waitcontent_statement -> basic_statement .)
    DOLLER          reduce using rule 287 (waitcontent_statement -> basic_statement .)
    DISABLE         reduce using rule 287 (waitcontent_statement -> basic_statement .)
    LBRACE          reduce using rule 287 (waitcontent_statement -> basic_statement .)
    SEMICOLON       reduce using rule 287 (waitcontent_statement -> basic_statement .)
    ENDTASK         reduce using rule 287 (waitcontent_statement -> basic_statement .)
    ENDFUNCTION     reduce using rule 287 (waitcontent_statement -> basic_statement .)
    ENDCASE         reduce using rule 287 (waitcontent_statement -> basic_statement .)
    DEFAULT         reduce using rule 287 (waitcontent_statement -> basic_statement .)
    MINUS           reduce using rule 287 (waitcontent_statement -> basic_statement .)
    PLUS            reduce using rule 287 (waitcontent_statement -> basic_statement .)
    LNOT            reduce using rule 287 (waitcontent_statement -> basic_statement .)
    NOT             reduce using rule 287 (waitcontent_statement -> basic_statement .)
    AND             reduce using rule 287 (waitcontent_statement -> basic_statement .)
    NAND            reduce using rule 287 (waitcontent_statement -> basic_statement .)
    NOR             reduce using rule 287 (waitcontent_statement -> basic_statement .)
    OR              reduce using rule 287 (waitcontent_statement -> basic_statement .)
    XOR             reduce using rule 287 (waitcontent_statement -> basic_statement .)
    XNOR            reduce using rule 287 (waitcontent_statement -> basic_statement .)
    INTNUMBER_DEC   reduce using rule 287 (waitcontent_statement -> basic_statement .)
    SIGNED_INTNUMBER_DEC reduce using rule 287 (waitcontent_statement -> basic_statement .)
    INTNUMBER_BIN   reduce using rule 287 (waitcontent_statement -> basic_statement .)
    SIGNED_INTNUMBER_BIN reduce using rule 287 (waitcontent_statement -> basic_statement .)
    INTNUMBER_OCT   reduce using rule 287 (waitcontent_statement -> basic_statement .)
    SIGNED_INTNUMBER_OCT reduce using rule 287 (waitcontent_statement -> basic_statement .)
    INTNUMBER_HEX   reduce using rule 287 (waitcontent_statement -> basic_statement .)
    SIGNED_INTNUMBER_HEX reduce using rule 287 (waitcontent_statement -> basic_statement .)
    FLOATNUMBER     reduce using rule 287 (waitcontent_statement -> basic_statement .)
    STRING_LITERAL  reduce using rule 287 (waitcontent_statement -> basic_statement .)


state 654

    (273) whilecontent_statement -> basic_statement .

    ENDMODULE       reduce using rule 273 (whilecontent_statement -> basic_statement .)
    GENERATE        reduce using rule 273 (whilecontent_statement -> basic_statement .)
    INTEGER         reduce using rule 273 (whilecontent_statement -> basic_statement .)
    REAL            reduce using rule 273 (whilecontent_statement -> basic_statement .)
    PARAMETER       reduce using rule 273 (whilecontent_statement -> basic_statement .)
    LOCALPARAM      reduce using rule 273 (whilecontent_statement -> basic_statement .)
    GENVAR          reduce using rule 273 (whilecontent_statement -> basic_statement .)
    ASSIGN          reduce using rule 273 (whilecontent_statement -> basic_statement .)
    ALWAYS          reduce using rule 273 (whilecontent_statement -> basic_statement .)
    INITIAL         reduce using rule 273 (whilecontent_statement -> basic_statement .)
    ID              reduce using rule 273 (whilecontent_statement -> basic_statement .)
    SENS_OR         reduce using rule 273 (whilecontent_statement -> basic_statement .)
    FUNCTION        reduce using rule 273 (whilecontent_statement -> basic_statement .)
    TASK            reduce using rule 273 (whilecontent_statement -> basic_statement .)
    LPAREN          reduce using rule 273 (whilecontent_statement -> basic_statement .)
    INPUT           reduce using rule 273 (whilecontent_statement -> basic_statement .)
    OUTPUT          reduce using rule 273 (whilecontent_statement -> basic_statement .)
    INOUT           reduce using rule 273 (whilecontent_statement -> basic_statement .)
    TRI             reduce using rule 273 (whilecontent_statement -> basic_statement .)
    REG             reduce using rule 273 (whilecontent_statement -> basic_statement .)
    WIRE            reduce using rule 273 (whilecontent_statement -> basic_statement .)
    SIGNED          reduce using rule 273 (whilecontent_statement -> basic_statement .)
    SUPPLY0         reduce using rule 273 (whilecontent_statement -> basic_statement .)
    SUPPLY1         reduce using rule 273 (whilecontent_statement -> basic_statement .)
    ENDGENERATE     reduce using rule 273 (whilecontent_statement -> basic_statement .)
    IF              reduce using rule 273 (whilecontent_statement -> basic_statement .)
    FOR             reduce using rule 273 (whilecontent_statement -> basic_statement .)
    ELSE            reduce using rule 273 (whilecontent_statement -> basic_statement .)
    END             reduce using rule 273 (whilecontent_statement -> basic_statement .)
    JOIN            reduce using rule 273 (whilecontent_statement -> basic_statement .)
    CASE            reduce using rule 273 (whilecontent_statement -> basic_statement .)
    CASEX           reduce using rule 273 (whilecontent_statement -> basic_statement .)
    WHILE           reduce using rule 273 (whilecontent_statement -> basic_statement .)
    WAIT            reduce using rule 273 (whilecontent_statement -> basic_statement .)
    FOREVER         reduce using rule 273 (whilecontent_statement -> basic_statement .)
    BEGIN           reduce using rule 273 (whilecontent_statement -> basic_statement .)
    FORK            reduce using rule 273 (whilecontent_statement -> basic_statement .)
    DELAY           reduce using rule 273 (whilecontent_statement -> basic_statement .)
    AT              reduce using rule 273 (whilecontent_statement -> basic_statement .)
    DOLLER          reduce using rule 273 (whilecontent_statement -> basic_statement .)
    DISABLE         reduce using rule 273 (whilecontent_statement -> basic_statement .)
    LBRACE          reduce using rule 273 (whilecontent_statement -> basic_statement .)
    SEMICOLON       reduce using rule 273 (whilecontent_statement -> basic_statement .)
    ENDTASK         reduce using rule 273 (whilecontent_statement -> basic_statement .)
    ENDFUNCTION     reduce using rule 273 (whilecontent_statement -> basic_statement .)
    ENDCASE         reduce using rule 273 (whilecontent_statement -> basic_statement .)
    DEFAULT         reduce using rule 273 (whilecontent_statement -> basic_statement .)
    MINUS           reduce using rule 273 (whilecontent_statement -> basic_statement .)
    PLUS            reduce using rule 273 (whilecontent_statement -> basic_statement .)
    LNOT            reduce using rule 273 (whilecontent_statement -> basic_statement .)
    NOT             reduce using rule 273 (whilecontent_statement -> basic_statement .)
    AND             reduce using rule 273 (whilecontent_statement -> basic_statement .)
    NAND            reduce using rule 273 (whilecontent_statement -> basic_statement .)
    NOR             reduce using rule 273 (whilecontent_statement -> basic_statement .)
    OR              reduce using rule 273 (whilecontent_statement -> basic_statement .)
    XOR             reduce using rule 273 (whilecontent_statement -> basic_statement .)
    XNOR            reduce using rule 273 (whilecontent_statement -> basic_statement .)
    INTNUMBER_DEC   reduce using rule 273 (whilecontent_statement -> basic_statement .)
    SIGNED_INTNUMBER_DEC reduce using rule 273 (whilecontent_statement -> basic_statement .)
    INTNUMBER_BIN   reduce using rule 273 (whilecontent_statement -> basic_statement .)
    SIGNED_INTNUMBER_BIN reduce using rule 273 (whilecontent_statement -> basic_statement .)
    INTNUMBER_OCT   reduce using rule 273 (whilecontent_statement -> basic_statement .)
    SIGNED_INTNUMBER_OCT reduce using rule 273 (whilecontent_statement -> basic_statement .)
    INTNUMBER_HEX   reduce using rule 273 (whilecontent_statement -> basic_statement .)
    SIGNED_INTNUMBER_HEX reduce using rule 273 (whilecontent_statement -> basic_statement .)
    FLOATNUMBER     reduce using rule 273 (whilecontent_statement -> basic_statement .)
    STRING_LITERAL  reduce using rule 273 (whilecontent_statement -> basic_statement .)


state 655

    (272) while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .

    ENDMODULE       reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    GENERATE        reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    INTEGER         reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    REAL            reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    PARAMETER       reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    LOCALPARAM      reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    GENVAR          reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    ASSIGN          reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    ALWAYS          reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    INITIAL         reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    ID              reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    SENS_OR         reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    FUNCTION        reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    TASK            reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    LPAREN          reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    INPUT           reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    OUTPUT          reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    INOUT           reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    TRI             reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    REG             reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    WIRE            reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    SIGNED          reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    SUPPLY0         reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    SUPPLY1         reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    ENDGENERATE     reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    IF              reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    FOR             reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    ELSE            reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    END             reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    ENDCASE         reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    DEFAULT         reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    MINUS           reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    PLUS            reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    LNOT            reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    NOT             reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    AND             reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    NAND            reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    NOR             reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    OR              reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    XOR             reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    XNOR            reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    LBRACE          reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    DOLLER          reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    INTNUMBER_DEC   reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    SIGNED_INTNUMBER_DEC reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    INTNUMBER_BIN   reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    SIGNED_INTNUMBER_BIN reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    INTNUMBER_OCT   reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    SIGNED_INTNUMBER_OCT reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    INTNUMBER_HEX   reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    SIGNED_INTNUMBER_HEX reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    FLOATNUMBER     reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    STRING_LITERAL  reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    JOIN            reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    CASE            reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    CASEX           reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    WHILE           reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    WAIT            reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    FOREVER         reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    BEGIN           reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    FORK            reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    DELAY           reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    AT              reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    DISABLE         reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    SEMICOLON       reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    ENDTASK         reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    ENDFUNCTION     reduce using rule 272 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)


state 656

    (282) casecontent_statement -> DEFAULT . COLON basic_statement

    COLON           shift and go to state 703


state 657

    (279) casecontent_statement -> casecontent_condition . COLON basic_statement
    (280) casecontent_condition -> casecontent_condition . COMMA expression

    COLON           shift and go to state 705
    COMMA           shift and go to state 704


state 658

    (278) casecontent_statements -> casecontent_statement .

    ENDCASE         reduce using rule 278 (casecontent_statements -> casecontent_statement .)
    DEFAULT         reduce using rule 278 (casecontent_statements -> casecontent_statement .)
    MINUS           reduce using rule 278 (casecontent_statements -> casecontent_statement .)
    PLUS            reduce using rule 278 (casecontent_statements -> casecontent_statement .)
    LNOT            reduce using rule 278 (casecontent_statements -> casecontent_statement .)
    NOT             reduce using rule 278 (casecontent_statements -> casecontent_statement .)
    AND             reduce using rule 278 (casecontent_statements -> casecontent_statement .)
    NAND            reduce using rule 278 (casecontent_statements -> casecontent_statement .)
    NOR             reduce using rule 278 (casecontent_statements -> casecontent_statement .)
    OR              reduce using rule 278 (casecontent_statements -> casecontent_statement .)
    XOR             reduce using rule 278 (casecontent_statements -> casecontent_statement .)
    XNOR            reduce using rule 278 (casecontent_statements -> casecontent_statement .)
    LPAREN          reduce using rule 278 (casecontent_statements -> casecontent_statement .)
    LBRACE          reduce using rule 278 (casecontent_statements -> casecontent_statement .)
    DOLLER          reduce using rule 278 (casecontent_statements -> casecontent_statement .)
    ID              reduce using rule 278 (casecontent_statements -> casecontent_statement .)
    INTNUMBER_DEC   reduce using rule 278 (casecontent_statements -> casecontent_statement .)
    SIGNED_INTNUMBER_DEC reduce using rule 278 (casecontent_statements -> casecontent_statement .)
    INTNUMBER_BIN   reduce using rule 278 (casecontent_statements -> casecontent_statement .)
    SIGNED_INTNUMBER_BIN reduce using rule 278 (casecontent_statements -> casecontent_statement .)
    INTNUMBER_OCT   reduce using rule 278 (casecontent_statements -> casecontent_statement .)
    SIGNED_INTNUMBER_OCT reduce using rule 278 (casecontent_statements -> casecontent_statement .)
    INTNUMBER_HEX   reduce using rule 278 (casecontent_statements -> casecontent_statement .)
    SIGNED_INTNUMBER_HEX reduce using rule 278 (casecontent_statements -> casecontent_statement .)
    FLOATNUMBER     reduce using rule 278 (casecontent_statements -> casecontent_statement .)
    STRING_LITERAL  reduce using rule 278 (casecontent_statements -> casecontent_statement .)


state 659

    (274) case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements . ENDCASE
    (277) casecontent_statements -> casecontent_statements . casecontent_statement
    (279) casecontent_statement -> . casecontent_condition COLON basic_statement
    (282) casecontent_statement -> . DEFAULT COLON basic_statement
    (280) casecontent_condition -> . casecontent_condition COMMA expression
    (281) casecontent_condition -> . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    ENDCASE         shift and go to state 706
    DEFAULT         shift and go to state 656
    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    casecontent_statement          shift and go to state 707
    pointer                        shift and go to state 31
    systemcall                     shift and go to state 27
    stringliteral                  shift and go to state 53
    intnumber                      shift and go to state 37
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    concat                         shift and go to state 47
    scope                          shift and go to state 44
    casecontent_condition          shift and go to state 657
    identifier                     shift and go to state 57
    expression                     shift and go to state 660

state 660

    (281) casecontent_condition -> expression .
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    COLON           reduce using rule 281 (casecontent_condition -> expression .)
    COMMA           reduce using rule 281 (casecontent_condition -> expression .)
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147
    LT              shift and go to state 145
    GT              shift and go to state 149
    LE              shift and go to state 142
    GE              shift and go to state 153
    EQ              shift and go to state 156
    NE              shift and go to state 144
    EQL             shift and go to state 155
    NEL             shift and go to state 136
    AND             shift and go to state 157
    XOR             shift and go to state 150
    XNOR            shift and go to state 148
    OR              shift and go to state 159
    LAND            shift and go to state 154
    LOR             shift and go to state 138
    COND            shift and go to state 139


state 661

    (244) namedblock -> BEGIN COLON ID namedblock_statements END .

    ENDMODULE       reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    GENERATE        reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    INTEGER         reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    REAL            reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    PARAMETER       reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    LOCALPARAM      reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    GENVAR          reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    ASSIGN          reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    ALWAYS          reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    INITIAL         reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    ID              reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    SENS_OR         reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    FUNCTION        reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    TASK            reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    LPAREN          reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    INPUT           reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    OUTPUT          reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    INOUT           reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    TRI             reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    REG             reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    WIRE            reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    SIGNED          reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    SUPPLY0         reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    SUPPLY1         reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    ENDGENERATE     reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    IF              reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    FOR             reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    ELSE            reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    END             reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    JOIN            reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    CASE            reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    CASEX           reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    WHILE           reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    WAIT            reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    FOREVER         reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    BEGIN           reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    FORK            reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    DELAY           reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    AT              reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    DOLLER          reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    DISABLE         reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    LBRACE          reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    SEMICOLON       reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    ENDTASK         reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    ENDFUNCTION     reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    ENDCASE         reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    DEFAULT         reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    MINUS           reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    PLUS            reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    LNOT            reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    NOT             reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    AND             reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    NAND            reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    NOR             reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    OR              reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    XOR             reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    XNOR            reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    INTNUMBER_DEC   reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    SIGNED_INTNUMBER_DEC reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    INTNUMBER_BIN   reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    SIGNED_INTNUMBER_BIN reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    INTNUMBER_OCT   reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    SIGNED_INTNUMBER_OCT reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    INTNUMBER_HEX   reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    SIGNED_INTNUMBER_HEX reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    FLOATNUMBER     reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    STRING_LITERAL  reduce using rule 244 (namedblock -> BEGIN COLON ID namedblock_statements END .)


state 662

    (246) namedblock_statements -> namedblock_statements namedblock_statement .

    END             reduce using rule 246 (namedblock_statements -> namedblock_statements namedblock_statement .)
    INTEGER         reduce using rule 246 (namedblock_statements -> namedblock_statements namedblock_statement .)
    REAL            reduce using rule 246 (namedblock_statements -> namedblock_statements namedblock_statement .)
    PARAMETER       reduce using rule 246 (namedblock_statements -> namedblock_statements namedblock_statement .)
    LOCALPARAM      reduce using rule 246 (namedblock_statements -> namedblock_statements namedblock_statement .)
    IF              reduce using rule 246 (namedblock_statements -> namedblock_statements namedblock_statement .)
    CASE            reduce using rule 246 (namedblock_statements -> namedblock_statements namedblock_statement .)
    CASEX           reduce using rule 246 (namedblock_statements -> namedblock_statements namedblock_statement .)
    FOR             reduce using rule 246 (namedblock_statements -> namedblock_statements namedblock_statement .)
    WHILE           reduce using rule 246 (namedblock_statements -> namedblock_statements namedblock_statement .)
    WAIT            reduce using rule 246 (namedblock_statements -> namedblock_statements namedblock_statement .)
    FOREVER         reduce using rule 246 (namedblock_statements -> namedblock_statements namedblock_statement .)
    BEGIN           reduce using rule 246 (namedblock_statements -> namedblock_statements namedblock_statement .)
    FORK            reduce using rule 246 (namedblock_statements -> namedblock_statements namedblock_statement .)
    DELAY           reduce using rule 246 (namedblock_statements -> namedblock_statements namedblock_statement .)
    AT              reduce using rule 246 (namedblock_statements -> namedblock_statements namedblock_statement .)
    DOLLER          reduce using rule 246 (namedblock_statements -> namedblock_statements namedblock_statement .)
    DISABLE         reduce using rule 246 (namedblock_statements -> namedblock_statements namedblock_statement .)
    INPUT           reduce using rule 246 (namedblock_statements -> namedblock_statements namedblock_statement .)
    OUTPUT          reduce using rule 246 (namedblock_statements -> namedblock_statements namedblock_statement .)
    INOUT           reduce using rule 246 (namedblock_statements -> namedblock_statements namedblock_statement .)
    TRI             reduce using rule 246 (namedblock_statements -> namedblock_statements namedblock_statement .)
    REG             reduce using rule 246 (namedblock_statements -> namedblock_statements namedblock_statement .)
    WIRE            reduce using rule 246 (namedblock_statements -> namedblock_statements namedblock_statement .)
    SIGNED          reduce using rule 246 (namedblock_statements -> namedblock_statements namedblock_statement .)
    SUPPLY0         reduce using rule 246 (namedblock_statements -> namedblock_statements namedblock_statement .)
    SUPPLY1         reduce using rule 246 (namedblock_statements -> namedblock_statements namedblock_statement .)
    LBRACE          reduce using rule 246 (namedblock_statements -> namedblock_statements namedblock_statement .)
    ID              reduce using rule 246 (namedblock_statements -> namedblock_statements namedblock_statement .)
    SEMICOLON       reduce using rule 246 (namedblock_statements -> namedblock_statements namedblock_statement .)


state 663

    (233) nonblocking_substitution -> delays lvalue LE delays rvalue . SEMICOLON

    SEMICOLON       shift and go to state 708


state 664

    (231) blocking_substitution -> delays lvalue EQUALS delays rvalue . SEMICOLON

    SEMICOLON       shift and go to state 709


state 665

    (258) if_statement -> delays IF LPAREN cond RPAREN . true_statement ELSE else_statement
    (259) if_statement -> delays IF LPAREN cond RPAREN . true_statement
    (262) true_statement -> . ifcontent_statement
    (261) ifcontent_statement -> . basic_statement
    (216) basic_statement -> . if_statement
    (217) basic_statement -> . case_statement
    (218) basic_statement -> . casex_statement
    (219) basic_statement -> . for_statement
    (220) basic_statement -> . while_statement
    (221) basic_statement -> . event_statement
    (222) basic_statement -> . wait_statement
    (223) basic_statement -> . forever_statement
    (224) basic_statement -> . block
    (225) basic_statement -> . namedblock
    (226) basic_statement -> . parallelblock
    (227) basic_statement -> . blocking_substitution
    (228) basic_statement -> . nonblocking_substitution
    (229) basic_statement -> . single_statement
    (256) if_statement -> . IF LPAREN cond RPAREN true_statement ELSE else_statement
    (257) if_statement -> . IF LPAREN cond RPAREN true_statement
    (258) if_statement -> . delays IF LPAREN cond RPAREN true_statement ELSE else_statement
    (259) if_statement -> . delays IF LPAREN cond RPAREN true_statement
    (274) case_statement -> . CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (275) casex_statement -> . CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (264) for_statement -> . FOR LPAREN forpre forcond forpost RPAREN forcontent_statement
    (272) while_statement -> . WHILE LPAREN cond RPAREN whilecontent_statement
    (285) event_statement -> . senslist SEMICOLON
    (286) wait_statement -> . WAIT LPAREN cond RPAREN waitcontent_statement
    (289) forever_statement -> . FOREVER basic_statement
    (239) block -> . BEGIN block_statements END
    (240) block -> . BEGIN END
    (244) namedblock -> . BEGIN COLON ID namedblock_statements END
    (245) namedblock -> . BEGIN COLON ID END
    (254) parallelblock -> . FORK block_statements JOIN
    (255) parallelblock -> . FORK JOIN
    (231) blocking_substitution -> . delays lvalue EQUALS delays rvalue SEMICOLON
    (233) nonblocking_substitution -> . delays lvalue LE delays rvalue SEMICOLON
    (390) single_statement -> . DELAY expression SEMICOLON
    (391) single_statement -> . systemcall SEMICOLON
    (392) single_statement -> . disable SEMICOLON
    (234) delays -> . DELAY LPAREN expression RPAREN
    (235) delays -> . DELAY identifier
    (236) delays -> . DELAY intnumber
    (237) delays -> . DELAY floatnumber
    (238) delays -> . empty
    (197) senslist -> . AT LPAREN edgesigs RPAREN
    (204) senslist -> . empty
    (205) senslist -> . AT levelsig
    (206) senslist -> . AT LPAREN levelsigs RPAREN
    (214) senslist -> . AT TIMES
    (215) senslist -> . AT LPAREN TIMES RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (389) disable -> . DISABLE ID
    (393) empty -> .

  ! shift/reduce conflict for IF resolved as shift
    IF              shift and go to state 195
    CASE            shift and go to state 173
    CASEX           shift and go to state 178
    FOR             shift and go to state 187
    WHILE           shift and go to state 171
    WAIT            shift and go to state 168
    FOREVER         shift and go to state 167
    BEGIN           shift and go to state 175
    FORK            shift and go to state 166
    DELAY           shift and go to state 170
    AT              shift and go to state 193
    DOLLER          shift and go to state 54
    DISABLE         shift and go to state 180
    LBRACE          reduce using rule 393 (empty -> .)
    ID              reduce using rule 393 (empty -> .)
    SEMICOLON       reduce using rule 393 (empty -> .)

  ! IF              [ reduce using rule 393 (empty -> .) ]

    true_statement                 shift and go to state 710
    parallelblock                  shift and go to state 169
    forever_statement              shift and go to state 172
    casex_statement                shift and go to state 174
    delays                         shift and go to state 176
    blocking_substitution          shift and go to state 177
    while_statement                shift and go to state 179
    systemcall                     shift and go to state 181
    if_statement                   shift and go to state 182
    nonblocking_substitution       shift and go to state 183
    empty                          shift and go to state 184
    basic_statement                shift and go to state 676
    for_statement                  shift and go to state 186
    event_statement                shift and go to state 189
    wait_statement                 shift and go to state 190
    case_statement                 shift and go to state 191
    disable                        shift and go to state 192
    ifcontent_statement            shift and go to state 677
    namedblock                     shift and go to state 194
    senslist                       shift and go to state 196
    block                          shift and go to state 198
    single_statement               shift and go to state 197

state 666

    (275) casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements . ENDCASE
    (277) casecontent_statements -> casecontent_statements . casecontent_statement
    (279) casecontent_statement -> . casecontent_condition COLON basic_statement
    (282) casecontent_statement -> . DEFAULT COLON basic_statement
    (280) casecontent_condition -> . casecontent_condition COMMA expression
    (281) casecontent_condition -> . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    ENDCASE         shift and go to state 711
    DEFAULT         shift and go to state 656
    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    casecontent_statement          shift and go to state 707
    pointer                        shift and go to state 31
    systemcall                     shift and go to state 27
    stringliteral                  shift and go to state 53
    intnumber                      shift and go to state 37
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    concat                         shift and go to state 47
    scope                          shift and go to state 44
    casecontent_condition          shift and go to state 657
    identifier                     shift and go to state 57
    expression                     shift and go to state 660

state 667

    (232) blocking_substitution_base -> delays . lvalue EQUALS delays rvalue
    (122) lvalue -> . lpartselect
    (123) lvalue -> . lpointer
    (124) lvalue -> . lconcat
    (125) lvalue -> . identifier
    (108) lpartselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (109) lpartselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (110) lpartselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (111) lpartselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (112) lpartselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (113) lpartselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (114) lpointer -> . pointer
    (115) lconcat -> . LBRACE lconcatlist RBRACE
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT

    LBRACE          shift and go to state 231
    ID              shift and go to state 46

    lconcat                        shift and go to state 229
    lpartselect                    shift and go to state 225
    lvalue                         shift and go to state 712
    lpointer                       shift and go to state 223
    scope                          shift and go to state 44
    identifier                     shift and go to state 232
    pointer                        shift and go to state 224

state 668

    (269) forpost -> blocking_substitution_base .

    RPAREN          reduce using rule 269 (forpost -> blocking_substitution_base .)


state 669

    (264) for_statement -> FOR LPAREN forpre forcond forpost . RPAREN forcontent_statement

    RPAREN          shift and go to state 713


state 670

    (270) forpost -> empty .
    (238) delays -> empty .

    RPAREN          reduce using rule 270 (forpost -> empty .)
    LBRACE          reduce using rule 238 (delays -> empty .)
    ID              reduce using rule 238 (delays -> empty .)


state 671

    (267) forcond -> cond SEMICOLON .

    DELAY           reduce using rule 267 (forcond -> cond SEMICOLON .)
    RPAREN          reduce using rule 267 (forcond -> cond SEMICOLON .)
    LBRACE          reduce using rule 267 (forcond -> cond SEMICOLON .)
    ID              reduce using rule 267 (forcond -> cond SEMICOLON .)


state 672

    (211) levelsigs -> levelsigs SENS_OR levelsig .

    RPAREN          reduce using rule 211 (levelsigs -> levelsigs SENS_OR levelsig .)
    SENS_OR         reduce using rule 211 (levelsigs -> levelsigs SENS_OR levelsig .)
    COMMA           reduce using rule 211 (levelsigs -> levelsigs SENS_OR levelsig .)


state 673

    (212) levelsigs -> levelsigs COMMA levelsig .

    RPAREN          reduce using rule 212 (levelsigs -> levelsigs COMMA levelsig .)
    SENS_OR         reduce using rule 212 (levelsigs -> levelsigs COMMA levelsig .)
    COMMA           reduce using rule 212 (levelsigs -> levelsigs COMMA levelsig .)


state 674

    (202) edgesigs -> edgesigs SENS_OR edgesig .

    RPAREN          reduce using rule 202 (edgesigs -> edgesigs SENS_OR edgesig .)
    SENS_OR         reduce using rule 202 (edgesigs -> edgesigs SENS_OR edgesig .)


state 675

    (256) if_statement -> IF LPAREN cond RPAREN true_statement . ELSE else_statement
    (257) if_statement -> IF LPAREN cond RPAREN true_statement .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 714
    JOIN            reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    IF              reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    CASE            reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    CASEX           reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    FOR             reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    WHILE           reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    WAIT            reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    FOREVER         reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    BEGIN           reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    FORK            reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    DELAY           reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    AT              reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    DOLLER          reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    DISABLE         reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    LBRACE          reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    ID              reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    SEMICOLON       reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    ENDMODULE       reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    GENERATE        reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    INTEGER         reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    REAL            reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    PARAMETER       reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    LOCALPARAM      reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    GENVAR          reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    ASSIGN          reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    ALWAYS          reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    INITIAL         reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    SENS_OR         reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    FUNCTION        reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    TASK            reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    LPAREN          reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    INPUT           reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    OUTPUT          reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    INOUT           reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    TRI             reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    REG             reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    WIRE            reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    SIGNED          reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    SUPPLY0         reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    SUPPLY1         reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    ENDGENERATE     reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    END             reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    ENDTASK         reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    ENDFUNCTION     reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    ENDCASE         reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    DEFAULT         reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    MINUS           reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    PLUS            reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    LNOT            reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    NOT             reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    AND             reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    NAND            reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    NOR             reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    OR              reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    XOR             reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    XNOR            reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    INTNUMBER_DEC   reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    SIGNED_INTNUMBER_DEC reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    INTNUMBER_BIN   reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    SIGNED_INTNUMBER_BIN reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    INTNUMBER_OCT   reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    SIGNED_INTNUMBER_OCT reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    INTNUMBER_HEX   reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    SIGNED_INTNUMBER_HEX reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    FLOATNUMBER     reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    STRING_LITERAL  reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .)

  ! ELSE            [ reduce using rule 257 (if_statement -> IF LPAREN cond RPAREN true_statement .) ]


state 676

    (261) ifcontent_statement -> basic_statement .

    ENDMODULE       reduce using rule 261 (ifcontent_statement -> basic_statement .)
    GENERATE        reduce using rule 261 (ifcontent_statement -> basic_statement .)
    INTEGER         reduce using rule 261 (ifcontent_statement -> basic_statement .)
    REAL            reduce using rule 261 (ifcontent_statement -> basic_statement .)
    PARAMETER       reduce using rule 261 (ifcontent_statement -> basic_statement .)
    LOCALPARAM      reduce using rule 261 (ifcontent_statement -> basic_statement .)
    GENVAR          reduce using rule 261 (ifcontent_statement -> basic_statement .)
    ASSIGN          reduce using rule 261 (ifcontent_statement -> basic_statement .)
    ALWAYS          reduce using rule 261 (ifcontent_statement -> basic_statement .)
    INITIAL         reduce using rule 261 (ifcontent_statement -> basic_statement .)
    ID              reduce using rule 261 (ifcontent_statement -> basic_statement .)
    SENS_OR         reduce using rule 261 (ifcontent_statement -> basic_statement .)
    FUNCTION        reduce using rule 261 (ifcontent_statement -> basic_statement .)
    TASK            reduce using rule 261 (ifcontent_statement -> basic_statement .)
    LPAREN          reduce using rule 261 (ifcontent_statement -> basic_statement .)
    INPUT           reduce using rule 261 (ifcontent_statement -> basic_statement .)
    OUTPUT          reduce using rule 261 (ifcontent_statement -> basic_statement .)
    INOUT           reduce using rule 261 (ifcontent_statement -> basic_statement .)
    TRI             reduce using rule 261 (ifcontent_statement -> basic_statement .)
    REG             reduce using rule 261 (ifcontent_statement -> basic_statement .)
    WIRE            reduce using rule 261 (ifcontent_statement -> basic_statement .)
    SIGNED          reduce using rule 261 (ifcontent_statement -> basic_statement .)
    SUPPLY0         reduce using rule 261 (ifcontent_statement -> basic_statement .)
    SUPPLY1         reduce using rule 261 (ifcontent_statement -> basic_statement .)
    ENDGENERATE     reduce using rule 261 (ifcontent_statement -> basic_statement .)
    IF              reduce using rule 261 (ifcontent_statement -> basic_statement .)
    FOR             reduce using rule 261 (ifcontent_statement -> basic_statement .)
    ELSE            reduce using rule 261 (ifcontent_statement -> basic_statement .)
    END             reduce using rule 261 (ifcontent_statement -> basic_statement .)
    JOIN            reduce using rule 261 (ifcontent_statement -> basic_statement .)
    CASE            reduce using rule 261 (ifcontent_statement -> basic_statement .)
    CASEX           reduce using rule 261 (ifcontent_statement -> basic_statement .)
    WHILE           reduce using rule 261 (ifcontent_statement -> basic_statement .)
    WAIT            reduce using rule 261 (ifcontent_statement -> basic_statement .)
    FOREVER         reduce using rule 261 (ifcontent_statement -> basic_statement .)
    BEGIN           reduce using rule 261 (ifcontent_statement -> basic_statement .)
    FORK            reduce using rule 261 (ifcontent_statement -> basic_statement .)
    DELAY           reduce using rule 261 (ifcontent_statement -> basic_statement .)
    AT              reduce using rule 261 (ifcontent_statement -> basic_statement .)
    DOLLER          reduce using rule 261 (ifcontent_statement -> basic_statement .)
    DISABLE         reduce using rule 261 (ifcontent_statement -> basic_statement .)
    LBRACE          reduce using rule 261 (ifcontent_statement -> basic_statement .)
    SEMICOLON       reduce using rule 261 (ifcontent_statement -> basic_statement .)
    ENDTASK         reduce using rule 261 (ifcontent_statement -> basic_statement .)
    ENDFUNCTION     reduce using rule 261 (ifcontent_statement -> basic_statement .)
    ENDCASE         reduce using rule 261 (ifcontent_statement -> basic_statement .)
    DEFAULT         reduce using rule 261 (ifcontent_statement -> basic_statement .)
    MINUS           reduce using rule 261 (ifcontent_statement -> basic_statement .)
    PLUS            reduce using rule 261 (ifcontent_statement -> basic_statement .)
    LNOT            reduce using rule 261 (ifcontent_statement -> basic_statement .)
    NOT             reduce using rule 261 (ifcontent_statement -> basic_statement .)
    AND             reduce using rule 261 (ifcontent_statement -> basic_statement .)
    NAND            reduce using rule 261 (ifcontent_statement -> basic_statement .)
    NOR             reduce using rule 261 (ifcontent_statement -> basic_statement .)
    OR              reduce using rule 261 (ifcontent_statement -> basic_statement .)
    XOR             reduce using rule 261 (ifcontent_statement -> basic_statement .)
    XNOR            reduce using rule 261 (ifcontent_statement -> basic_statement .)
    INTNUMBER_DEC   reduce using rule 261 (ifcontent_statement -> basic_statement .)
    SIGNED_INTNUMBER_DEC reduce using rule 261 (ifcontent_statement -> basic_statement .)
    INTNUMBER_BIN   reduce using rule 261 (ifcontent_statement -> basic_statement .)
    SIGNED_INTNUMBER_BIN reduce using rule 261 (ifcontent_statement -> basic_statement .)
    INTNUMBER_OCT   reduce using rule 261 (ifcontent_statement -> basic_statement .)
    SIGNED_INTNUMBER_OCT reduce using rule 261 (ifcontent_statement -> basic_statement .)
    INTNUMBER_HEX   reduce using rule 261 (ifcontent_statement -> basic_statement .)
    SIGNED_INTNUMBER_HEX reduce using rule 261 (ifcontent_statement -> basic_statement .)
    FLOATNUMBER     reduce using rule 261 (ifcontent_statement -> basic_statement .)
    STRING_LITERAL  reduce using rule 261 (ifcontent_statement -> basic_statement .)


state 677

    (262) true_statement -> ifcontent_statement .

    ENDMODULE       reduce using rule 262 (true_statement -> ifcontent_statement .)
    GENERATE        reduce using rule 262 (true_statement -> ifcontent_statement .)
    INTEGER         reduce using rule 262 (true_statement -> ifcontent_statement .)
    REAL            reduce using rule 262 (true_statement -> ifcontent_statement .)
    PARAMETER       reduce using rule 262 (true_statement -> ifcontent_statement .)
    LOCALPARAM      reduce using rule 262 (true_statement -> ifcontent_statement .)
    GENVAR          reduce using rule 262 (true_statement -> ifcontent_statement .)
    ASSIGN          reduce using rule 262 (true_statement -> ifcontent_statement .)
    ALWAYS          reduce using rule 262 (true_statement -> ifcontent_statement .)
    INITIAL         reduce using rule 262 (true_statement -> ifcontent_statement .)
    ID              reduce using rule 262 (true_statement -> ifcontent_statement .)
    SENS_OR         reduce using rule 262 (true_statement -> ifcontent_statement .)
    FUNCTION        reduce using rule 262 (true_statement -> ifcontent_statement .)
    TASK            reduce using rule 262 (true_statement -> ifcontent_statement .)
    LPAREN          reduce using rule 262 (true_statement -> ifcontent_statement .)
    INPUT           reduce using rule 262 (true_statement -> ifcontent_statement .)
    OUTPUT          reduce using rule 262 (true_statement -> ifcontent_statement .)
    INOUT           reduce using rule 262 (true_statement -> ifcontent_statement .)
    TRI             reduce using rule 262 (true_statement -> ifcontent_statement .)
    REG             reduce using rule 262 (true_statement -> ifcontent_statement .)
    WIRE            reduce using rule 262 (true_statement -> ifcontent_statement .)
    SIGNED          reduce using rule 262 (true_statement -> ifcontent_statement .)
    SUPPLY0         reduce using rule 262 (true_statement -> ifcontent_statement .)
    SUPPLY1         reduce using rule 262 (true_statement -> ifcontent_statement .)
    ENDGENERATE     reduce using rule 262 (true_statement -> ifcontent_statement .)
    IF              reduce using rule 262 (true_statement -> ifcontent_statement .)
    FOR             reduce using rule 262 (true_statement -> ifcontent_statement .)
    ELSE            reduce using rule 262 (true_statement -> ifcontent_statement .)
    END             reduce using rule 262 (true_statement -> ifcontent_statement .)
    JOIN            reduce using rule 262 (true_statement -> ifcontent_statement .)
    CASE            reduce using rule 262 (true_statement -> ifcontent_statement .)
    CASEX           reduce using rule 262 (true_statement -> ifcontent_statement .)
    WHILE           reduce using rule 262 (true_statement -> ifcontent_statement .)
    WAIT            reduce using rule 262 (true_statement -> ifcontent_statement .)
    FOREVER         reduce using rule 262 (true_statement -> ifcontent_statement .)
    BEGIN           reduce using rule 262 (true_statement -> ifcontent_statement .)
    FORK            reduce using rule 262 (true_statement -> ifcontent_statement .)
    DELAY           reduce using rule 262 (true_statement -> ifcontent_statement .)
    AT              reduce using rule 262 (true_statement -> ifcontent_statement .)
    DOLLER          reduce using rule 262 (true_statement -> ifcontent_statement .)
    DISABLE         reduce using rule 262 (true_statement -> ifcontent_statement .)
    LBRACE          reduce using rule 262 (true_statement -> ifcontent_statement .)
    SEMICOLON       reduce using rule 262 (true_statement -> ifcontent_statement .)
    ENDTASK         reduce using rule 262 (true_statement -> ifcontent_statement .)
    ENDFUNCTION     reduce using rule 262 (true_statement -> ifcontent_statement .)
    ENDCASE         reduce using rule 262 (true_statement -> ifcontent_statement .)
    DEFAULT         reduce using rule 262 (true_statement -> ifcontent_statement .)
    MINUS           reduce using rule 262 (true_statement -> ifcontent_statement .)
    PLUS            reduce using rule 262 (true_statement -> ifcontent_statement .)
    LNOT            reduce using rule 262 (true_statement -> ifcontent_statement .)
    NOT             reduce using rule 262 (true_statement -> ifcontent_statement .)
    AND             reduce using rule 262 (true_statement -> ifcontent_statement .)
    NAND            reduce using rule 262 (true_statement -> ifcontent_statement .)
    NOR             reduce using rule 262 (true_statement -> ifcontent_statement .)
    OR              reduce using rule 262 (true_statement -> ifcontent_statement .)
    XOR             reduce using rule 262 (true_statement -> ifcontent_statement .)
    XNOR            reduce using rule 262 (true_statement -> ifcontent_statement .)
    INTNUMBER_DEC   reduce using rule 262 (true_statement -> ifcontent_statement .)
    SIGNED_INTNUMBER_DEC reduce using rule 262 (true_statement -> ifcontent_statement .)
    INTNUMBER_BIN   reduce using rule 262 (true_statement -> ifcontent_statement .)
    SIGNED_INTNUMBER_BIN reduce using rule 262 (true_statement -> ifcontent_statement .)
    INTNUMBER_OCT   reduce using rule 262 (true_statement -> ifcontent_statement .)
    SIGNED_INTNUMBER_OCT reduce using rule 262 (true_statement -> ifcontent_statement .)
    INTNUMBER_HEX   reduce using rule 262 (true_statement -> ifcontent_statement .)
    SIGNED_INTNUMBER_HEX reduce using rule 262 (true_statement -> ifcontent_statement .)
    FLOATNUMBER     reduce using rule 262 (true_statement -> ifcontent_statement .)
    STRING_LITERAL  reduce using rule 262 (true_statement -> ifcontent_statement .)


state 678

    (53) width -> LBRACKET expression COLON expression RBRACKET .

    ID              reduce using rule 53 (width -> LBRACKET expression COLON expression RBRACKET .)
    DELAY           reduce using rule 53 (width -> LBRACKET expression COLON expression RBRACKET .)
    LPAREN          reduce using rule 53 (width -> LBRACKET expression COLON expression RBRACKET .)


state 679

    (341) generate_for -> FOR LPAREN forpre forcond forpost . RPAREN generate_forcontent

    RPAREN          shift and go to state 715


state 680

    (337) gif_true_item -> generate_item .

    ELSE            reduce using rule 337 (gif_true_item -> generate_item .)
    ENDGENERATE     reduce using rule 337 (gif_true_item -> generate_item .)
    IF              reduce using rule 337 (gif_true_item -> generate_item .)
    FOR             reduce using rule 337 (gif_true_item -> generate_item .)
    INTEGER         reduce using rule 337 (gif_true_item -> generate_item .)
    REAL            reduce using rule 337 (gif_true_item -> generate_item .)
    PARAMETER       reduce using rule 337 (gif_true_item -> generate_item .)
    LOCALPARAM      reduce using rule 337 (gif_true_item -> generate_item .)
    GENVAR          reduce using rule 337 (gif_true_item -> generate_item .)
    ASSIGN          reduce using rule 337 (gif_true_item -> generate_item .)
    ALWAYS          reduce using rule 337 (gif_true_item -> generate_item .)
    INITIAL         reduce using rule 337 (gif_true_item -> generate_item .)
    ID              reduce using rule 337 (gif_true_item -> generate_item .)
    SENS_OR         reduce using rule 337 (gif_true_item -> generate_item .)
    FUNCTION        reduce using rule 337 (gif_true_item -> generate_item .)
    TASK            reduce using rule 337 (gif_true_item -> generate_item .)
    LPAREN          reduce using rule 337 (gif_true_item -> generate_item .)
    INPUT           reduce using rule 337 (gif_true_item -> generate_item .)
    OUTPUT          reduce using rule 337 (gif_true_item -> generate_item .)
    INOUT           reduce using rule 337 (gif_true_item -> generate_item .)
    TRI             reduce using rule 337 (gif_true_item -> generate_item .)
    REG             reduce using rule 337 (gif_true_item -> generate_item .)
    WIRE            reduce using rule 337 (gif_true_item -> generate_item .)
    SIGNED          reduce using rule 337 (gif_true_item -> generate_item .)
    SUPPLY0         reduce using rule 337 (gif_true_item -> generate_item .)
    SUPPLY1         reduce using rule 337 (gif_true_item -> generate_item .)
    END             reduce using rule 337 (gif_true_item -> generate_item .)


state 681

    (333) generate_block -> BEGIN . generate_items END
    (334) generate_block -> BEGIN . COLON ID generate_items END
    (327) generate_items -> . empty
    (328) generate_items -> . generate_items generate_item
    (329) generate_items -> . generate_item
    (393) empty -> .
    (330) generate_item -> . standard_item
    (331) generate_item -> . generate_if
    (332) generate_item -> . generate_for
    (60) standard_item -> . decl
    (61) standard_item -> . integerdecl
    (62) standard_item -> . realdecl
    (63) standard_item -> . declassign
    (64) standard_item -> . parameterdecl
    (65) standard_item -> . localparamdecl
    (66) standard_item -> . genvardecl
    (67) standard_item -> . assignment
    (68) standard_item -> . always
    (69) standard_item -> . initial
    (70) standard_item -> . instance
    (71) standard_item -> . function
    (72) standard_item -> . task
    (73) standard_item -> . pragma
    (335) generate_if -> . IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item
    (336) generate_if -> . IF LPAREN cond RPAREN gif_true_item
    (341) generate_for -> . FOR LPAREN forpre forcond forpost RPAREN generate_forcontent
    (74) decl -> . sigtypes declnamelist SEMICOLON
    (75) decl -> . sigtypes width declnamelist SEMICOLON
    (84) integerdecl -> . INTEGER integernamelist SEMICOLON
    (85) integerdecl -> . INTEGER SIGNED integernamelist SEMICOLON
    (89) realdecl -> . REAL realnamelist SEMICOLON
    (80) declassign -> . sigtypes declassign_element SEMICOLON
    (81) declassign -> . sigtypes width declassign_element SEMICOLON
    (93) parameterdecl -> . PARAMETER param_substitution_list SEMICOLON
    (94) parameterdecl -> . PARAMETER SIGNED param_substitution_list SEMICOLON
    (95) parameterdecl -> . PARAMETER width param_substitution_list SEMICOLON
    (96) parameterdecl -> . PARAMETER SIGNED width param_substitution_list SEMICOLON
    (97) parameterdecl -> . PARAMETER INTEGER param_substitution_list SEMICOLON
    (98) localparamdecl -> . LOCALPARAM param_substitution_list SEMICOLON
    (99) localparamdecl -> . LOCALPARAM SIGNED param_substitution_list SEMICOLON
    (100) localparamdecl -> . LOCALPARAM width param_substitution_list SEMICOLON
    (101) localparamdecl -> . LOCALPARAM SIGNED width param_substitution_list SEMICOLON
    (102) localparamdecl -> . LOCALPARAM INTEGER param_substitution_list SEMICOLON
    (322) genvardecl -> . GENVAR genvarlist SEMICOLON
    (106) assignment -> . ASSIGN lvalue EQUALS rvalue SEMICOLON
    (107) assignment -> . ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON
    (196) always -> . ALWAYS senslist always_statement
    (283) initial -> . INITIAL initial_statement
    (290) instance -> . ID parameterlist instance_bodylist SEMICOLON
    (291) instance -> . SENS_OR parameterlist instance_bodylist SEMICOLON
    (296) instance -> . ID instance_bodylist_noname SEMICOLON
    (297) instance -> . SENS_OR instance_bodylist_noname SEMICOLON
    (351) function -> . FUNCTION width ID SEMICOLON function_statement ENDFUNCTION
    (352) function -> . FUNCTION ID SEMICOLON function_statement ENDFUNCTION
    (370) task -> . TASK ID SEMICOLON task_statement ENDTASK
    (7) pragma -> . LPAREN TIMES ID EQUALS expression TIMES RPAREN
    (8) pragma -> . LPAREN TIMES ID TIMES RPAREN
    (35) sigtypes -> . sigtypes sigtype
    (36) sigtypes -> . sigtype
    (37) sigtype -> . INPUT
    (38) sigtype -> . OUTPUT
    (39) sigtype -> . INOUT
    (40) sigtype -> . TRI
    (41) sigtype -> . REG
    (42) sigtype -> . WIRE
    (43) sigtype -> . SIGNED
    (44) sigtype -> . SUPPLY0
    (45) sigtype -> . SUPPLY1

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for REAL resolved as shift
  ! shift/reduce conflict for PARAMETER resolved as shift
  ! shift/reduce conflict for LOCALPARAM resolved as shift
  ! shift/reduce conflict for GENVAR resolved as shift
  ! shift/reduce conflict for ASSIGN resolved as shift
  ! shift/reduce conflict for ALWAYS resolved as shift
  ! shift/reduce conflict for INITIAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SENS_OR resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for TASK resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for OUTPUT resolved as shift
  ! shift/reduce conflict for INOUT resolved as shift
  ! shift/reduce conflict for TRI resolved as shift
  ! shift/reduce conflict for REG resolved as shift
  ! shift/reduce conflict for WIRE resolved as shift
  ! shift/reduce conflict for SIGNED resolved as shift
  ! shift/reduce conflict for SUPPLY0 resolved as shift
  ! shift/reduce conflict for SUPPLY1 resolved as shift
    COLON           shift and go to state 716
    END             reduce using rule 393 (empty -> .)
    IF              shift and go to state 217
    FOR             shift and go to state 215
    INTEGER         shift and go to state 83
    REAL            shift and go to state 63
    PARAMETER       shift and go to state 70
    LOCALPARAM      shift and go to state 101
    GENVAR          shift and go to state 69
    ASSIGN          shift and go to state 85
    ALWAYS          shift and go to state 68
    INITIAL         shift and go to state 66
    ID              shift and go to state 92
    SENS_OR         shift and go to state 99
    FUNCTION        shift and go to state 93
    TASK            shift and go to state 90
    LPAREN          shift and go to state 2
    INPUT           shift and go to state 91
    OUTPUT          shift and go to state 96
    INOUT           shift and go to state 72
    TRI             shift and go to state 89
    REG             shift and go to state 67
    WIRE            shift and go to state 104
    SIGNED          shift and go to state 98
    SUPPLY0         shift and go to state 79
    SUPPLY1         shift and go to state 80

  ! IF              [ reduce using rule 393 (empty -> .) ]
  ! FOR             [ reduce using rule 393 (empty -> .) ]
  ! INTEGER         [ reduce using rule 393 (empty -> .) ]
  ! REAL            [ reduce using rule 393 (empty -> .) ]
  ! PARAMETER       [ reduce using rule 393 (empty -> .) ]
  ! LOCALPARAM      [ reduce using rule 393 (empty -> .) ]
  ! GENVAR          [ reduce using rule 393 (empty -> .) ]
  ! ASSIGN          [ reduce using rule 393 (empty -> .) ]
  ! ALWAYS          [ reduce using rule 393 (empty -> .) ]
  ! INITIAL         [ reduce using rule 393 (empty -> .) ]
  ! ID              [ reduce using rule 393 (empty -> .) ]
  ! SENS_OR         [ reduce using rule 393 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 393 (empty -> .) ]
  ! TASK            [ reduce using rule 393 (empty -> .) ]
  ! LPAREN          [ reduce using rule 393 (empty -> .) ]
  ! INPUT           [ reduce using rule 393 (empty -> .) ]
  ! OUTPUT          [ reduce using rule 393 (empty -> .) ]
  ! INOUT           [ reduce using rule 393 (empty -> .) ]
  ! TRI             [ reduce using rule 393 (empty -> .) ]
  ! REG             [ reduce using rule 393 (empty -> .) ]
  ! WIRE            [ reduce using rule 393 (empty -> .) ]
  ! SIGNED          [ reduce using rule 393 (empty -> .) ]
  ! SUPPLY0         [ reduce using rule 393 (empty -> .) ]
  ! SUPPLY1         [ reduce using rule 393 (empty -> .) ]

    decl                           shift and go to state 62
    localparamdecl                 shift and go to state 64
    declassign                     shift and go to state 65
    generate_for                   shift and go to state 211
    integerdecl                    shift and go to state 71
    standard_item                  shift and go to state 212
    genvardecl                     shift and go to state 74
    sigtype                        shift and go to state 75
    initial                        shift and go to state 76
    instance                       shift and go to state 78
    sigtypes                       shift and go to state 88
    realdecl                       shift and go to state 82
    parameterdecl                  shift and go to state 84
    empty                          shift and go to state 213
    function                       shift and go to state 87
    generate_items                 shift and go to state 717
    assignment                     shift and go to state 81
    pragma                         shift and go to state 102
    generate_item                  shift and go to state 216
    task                           shift and go to state 95
    always                         shift and go to state 97
    generate_if                    shift and go to state 218

state 682

    (338) gif_true_item -> generate_block .

    ELSE            reduce using rule 338 (gif_true_item -> generate_block .)
    ENDGENERATE     reduce using rule 338 (gif_true_item -> generate_block .)
    IF              reduce using rule 338 (gif_true_item -> generate_block .)
    FOR             reduce using rule 338 (gif_true_item -> generate_block .)
    INTEGER         reduce using rule 338 (gif_true_item -> generate_block .)
    REAL            reduce using rule 338 (gif_true_item -> generate_block .)
    PARAMETER       reduce using rule 338 (gif_true_item -> generate_block .)
    LOCALPARAM      reduce using rule 338 (gif_true_item -> generate_block .)
    GENVAR          reduce using rule 338 (gif_true_item -> generate_block .)
    ASSIGN          reduce using rule 338 (gif_true_item -> generate_block .)
    ALWAYS          reduce using rule 338 (gif_true_item -> generate_block .)
    INITIAL         reduce using rule 338 (gif_true_item -> generate_block .)
    ID              reduce using rule 338 (gif_true_item -> generate_block .)
    SENS_OR         reduce using rule 338 (gif_true_item -> generate_block .)
    FUNCTION        reduce using rule 338 (gif_true_item -> generate_block .)
    TASK            reduce using rule 338 (gif_true_item -> generate_block .)
    LPAREN          reduce using rule 338 (gif_true_item -> generate_block .)
    INPUT           reduce using rule 338 (gif_true_item -> generate_block .)
    OUTPUT          reduce using rule 338 (gif_true_item -> generate_block .)
    INOUT           reduce using rule 338 (gif_true_item -> generate_block .)
    TRI             reduce using rule 338 (gif_true_item -> generate_block .)
    REG             reduce using rule 338 (gif_true_item -> generate_block .)
    WIRE            reduce using rule 338 (gif_true_item -> generate_block .)
    SIGNED          reduce using rule 338 (gif_true_item -> generate_block .)
    SUPPLY0         reduce using rule 338 (gif_true_item -> generate_block .)
    SUPPLY1         reduce using rule 338 (gif_true_item -> generate_block .)
    END             reduce using rule 338 (gif_true_item -> generate_block .)


state 683

    (335) generate_if -> IF LPAREN cond RPAREN gif_true_item . ELSE gif_false_item
    (336) generate_if -> IF LPAREN cond RPAREN gif_true_item .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 718
    ENDGENERATE     reduce using rule 336 (generate_if -> IF LPAREN cond RPAREN gif_true_item .)
    IF              reduce using rule 336 (generate_if -> IF LPAREN cond RPAREN gif_true_item .)
    FOR             reduce using rule 336 (generate_if -> IF LPAREN cond RPAREN gif_true_item .)
    INTEGER         reduce using rule 336 (generate_if -> IF LPAREN cond RPAREN gif_true_item .)
    REAL            reduce using rule 336 (generate_if -> IF LPAREN cond RPAREN gif_true_item .)
    PARAMETER       reduce using rule 336 (generate_if -> IF LPAREN cond RPAREN gif_true_item .)
    LOCALPARAM      reduce using rule 336 (generate_if -> IF LPAREN cond RPAREN gif_true_item .)
    GENVAR          reduce using rule 336 (generate_if -> IF LPAREN cond RPAREN gif_true_item .)
    ASSIGN          reduce using rule 336 (generate_if -> IF LPAREN cond RPAREN gif_true_item .)
    ALWAYS          reduce using rule 336 (generate_if -> IF LPAREN cond RPAREN gif_true_item .)
    INITIAL         reduce using rule 336 (generate_if -> IF LPAREN cond RPAREN gif_true_item .)
    ID              reduce using rule 336 (generate_if -> IF LPAREN cond RPAREN gif_true_item .)
    SENS_OR         reduce using rule 336 (generate_if -> IF LPAREN cond RPAREN gif_true_item .)
    FUNCTION        reduce using rule 336 (generate_if -> IF LPAREN cond RPAREN gif_true_item .)
    TASK            reduce using rule 336 (generate_if -> IF LPAREN cond RPAREN gif_true_item .)
    LPAREN          reduce using rule 336 (generate_if -> IF LPAREN cond RPAREN gif_true_item .)
    INPUT           reduce using rule 336 (generate_if -> IF LPAREN cond RPAREN gif_true_item .)
    OUTPUT          reduce using rule 336 (generate_if -> IF LPAREN cond RPAREN gif_true_item .)
    INOUT           reduce using rule 336 (generate_if -> IF LPAREN cond RPAREN gif_true_item .)
    TRI             reduce using rule 336 (generate_if -> IF LPAREN cond RPAREN gif_true_item .)
    REG             reduce using rule 336 (generate_if -> IF LPAREN cond RPAREN gif_true_item .)
    WIRE            reduce using rule 336 (generate_if -> IF LPAREN cond RPAREN gif_true_item .)
    SIGNED          reduce using rule 336 (generate_if -> IF LPAREN cond RPAREN gif_true_item .)
    SUPPLY0         reduce using rule 336 (generate_if -> IF LPAREN cond RPAREN gif_true_item .)
    SUPPLY1         reduce using rule 336 (generate_if -> IF LPAREN cond RPAREN gif_true_item .)
    END             reduce using rule 336 (generate_if -> IF LPAREN cond RPAREN gif_true_item .)

  ! ELSE            [ reduce using rule 336 (generate_if -> IF LPAREN cond RPAREN gif_true_item .) ]


state 684

    (108) lpartselect -> pointer LBRACKET expression COLON expression . RBRACKET
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RBRACKET        shift and go to state 719
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147
    LT              shift and go to state 145
    GT              shift and go to state 149
    LE              shift and go to state 142
    GE              shift and go to state 153
    EQ              shift and go to state 156
    NE              shift and go to state 144
    EQL             shift and go to state 155
    NEL             shift and go to state 136
    AND             shift and go to state 157
    XOR             shift and go to state 150
    XNOR            shift and go to state 148
    OR              shift and go to state 159
    LAND            shift and go to state 154
    LOR             shift and go to state 138
    COND            shift and go to state 139


state 685

    (109) lpartselect -> pointer LBRACKET expression PLUSCOLON expression . RBRACKET
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RBRACKET        shift and go to state 720
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147
    LT              shift and go to state 145
    GT              shift and go to state 149
    LE              shift and go to state 142
    GE              shift and go to state 153
    EQ              shift and go to state 156
    NE              shift and go to state 144
    EQL             shift and go to state 155
    NEL             shift and go to state 136
    AND             shift and go to state 157
    XOR             shift and go to state 150
    XNOR            shift and go to state 148
    OR              shift and go to state 159
    LAND            shift and go to state 154
    LOR             shift and go to state 138
    COND            shift and go to state 139


state 686

    (110) lpartselect -> pointer LBRACKET expression MINUSCOLON expression . RBRACKET
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RBRACKET        shift and go to state 721
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147
    LT              shift and go to state 145
    GT              shift and go to state 149
    LE              shift and go to state 142
    GE              shift and go to state 153
    EQ              shift and go to state 156
    NE              shift and go to state 144
    EQL             shift and go to state 155
    NEL             shift and go to state 136
    AND             shift and go to state 157
    XOR             shift and go to state 150
    XNOR            shift and go to state 148
    OR              shift and go to state 159
    LAND            shift and go to state 154
    LOR             shift and go to state 138
    COND            shift and go to state 139


state 687

    (107) assignment -> ASSIGN delays lvalue EQUALS delays rvalue . SEMICOLON

    SEMICOLON       shift and go to state 722


state 688

    (111) lpartselect -> identifier LBRACKET expression COLON expression . RBRACKET
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RBRACKET        shift and go to state 723
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147
    LT              shift and go to state 145
    GT              shift and go to state 149
    LE              shift and go to state 142
    GE              shift and go to state 153
    EQ              shift and go to state 156
    NE              shift and go to state 144
    EQL             shift and go to state 155
    NEL             shift and go to state 136
    AND             shift and go to state 157
    XOR             shift and go to state 150
    XNOR            shift and go to state 148
    OR              shift and go to state 159
    LAND            shift and go to state 154
    LOR             shift and go to state 138
    COND            shift and go to state 139


state 689

    (112) lpartselect -> identifier LBRACKET expression PLUSCOLON expression . RBRACKET
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RBRACKET        shift and go to state 724
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147
    LT              shift and go to state 145
    GT              shift and go to state 149
    LE              shift and go to state 142
    GE              shift and go to state 153
    EQ              shift and go to state 156
    NE              shift and go to state 144
    EQL             shift and go to state 155
    NEL             shift and go to state 136
    AND             shift and go to state 157
    XOR             shift and go to state 150
    XNOR            shift and go to state 148
    OR              shift and go to state 159
    LAND            shift and go to state 154
    LOR             shift and go to state 138
    COND            shift and go to state 139


state 690

    (113) lpartselect -> identifier LBRACKET expression MINUSCOLON expression . RBRACKET
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RBRACKET        shift and go to state 725
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147
    LT              shift and go to state 145
    GT              shift and go to state 149
    LE              shift and go to state 142
    GE              shift and go to state 153
    EQ              shift and go to state 156
    NE              shift and go to state 144
    EQL             shift and go to state 155
    NEL             shift and go to state 136
    AND             shift and go to state 157
    XOR             shift and go to state 150
    XNOR            shift and go to state 148
    OR              shift and go to state 159
    LAND            shift and go to state 154
    LOR             shift and go to state 138
    COND            shift and go to state 139


state 691

    (83) declassign_element -> delays ID EQUALS delays rvalue .

    SEMICOLON       reduce using rule 83 (declassign_element -> delays ID EQUALS delays rvalue .)


state 692

    (54) length -> LBRACKET expression COLON expression . RBRACKET
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RBRACKET        shift and go to state 726
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147
    LT              shift and go to state 145
    GT              shift and go to state 149
    LE              shift and go to state 142
    GE              shift and go to state 153
    EQ              shift and go to state 156
    NE              shift and go to state 144
    EQL             shift and go to state 155
    NEL             shift and go to state 136
    AND             shift and go to state 157
    XOR             shift and go to state 150
    XNOR            shift and go to state 148
    OR              shift and go to state 159
    LAND            shift and go to state 154
    LOR             shift and go to state 138
    COND            shift and go to state 139


state 693

    (295) instance_body -> ID width LPAREN instance_ports . RPAREN

    RPAREN          shift and go to state 727


state 694

    (294) instance_body -> ID LPAREN instance_ports RPAREN .

    SEMICOLON       reduce using rule 294 (instance_body -> ID LPAREN instance_ports RPAREN .)
    COMMA           reduce using rule 294 (instance_body -> ID LPAREN instance_ports RPAREN .)


state 695

    (166) expression -> pointer .
    (388) scope -> pointer . DOT
    (178) partselect -> pointer . LBRACKET expression COLON expression RBRACKET
    (179) partselect -> pointer . LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> pointer . LBRACKET expression MINUSCOLON expression RBRACKET
    (182) pointer -> pointer . LBRACKET expression RBRACKET

    RPAREN          reduce using rule 166 (expression -> pointer .)
    POWER           reduce using rule 166 (expression -> pointer .)
    TIMES           reduce using rule 166 (expression -> pointer .)
    DIVIDE          reduce using rule 166 (expression -> pointer .)
    MOD             reduce using rule 166 (expression -> pointer .)
    PLUS            reduce using rule 166 (expression -> pointer .)
    MINUS           reduce using rule 166 (expression -> pointer .)
    LSHIFT          reduce using rule 166 (expression -> pointer .)
    RSHIFT          reduce using rule 166 (expression -> pointer .)
    LSHIFTA         reduce using rule 166 (expression -> pointer .)
    RSHIFTA         reduce using rule 166 (expression -> pointer .)
    LT              reduce using rule 166 (expression -> pointer .)
    GT              reduce using rule 166 (expression -> pointer .)
    LE              reduce using rule 166 (expression -> pointer .)
    GE              reduce using rule 166 (expression -> pointer .)
    EQ              reduce using rule 166 (expression -> pointer .)
    NE              reduce using rule 166 (expression -> pointer .)
    EQL             reduce using rule 166 (expression -> pointer .)
    NEL             reduce using rule 166 (expression -> pointer .)
    AND             reduce using rule 166 (expression -> pointer .)
    XOR             reduce using rule 166 (expression -> pointer .)
    XNOR            reduce using rule 166 (expression -> pointer .)
    OR              reduce using rule 166 (expression -> pointer .)
    LAND            reduce using rule 166 (expression -> pointer .)
    LOR             reduce using rule 166 (expression -> pointer .)
    COND            reduce using rule 166 (expression -> pointer .)
    DOT             shift and go to state 119
    LBRACKET        shift and go to state 118


state 696

    (321) instance_port_arg -> DOT ID LPAREN RPAREN .

    COMMA           reduce using rule 321 (instance_port_arg -> DOT ID LPAREN RPAREN .)
    RPAREN          reduce using rule 321 (instance_port_arg -> DOT ID LPAREN RPAREN .)


state 697

    (319) instance_port_arg -> DOT ID LPAREN identifier . RPAREN
    (169) expression -> identifier .
    (387) scope -> identifier . DOT
    (175) partselect -> identifier . LBRACKET expression COLON expression RBRACKET
    (176) partselect -> identifier . LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> identifier . LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> identifier . LBRACKET expression RBRACKET
    (366) functioncall -> identifier . LPAREN func_args RPAREN

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 728
    POWER           reduce using rule 169 (expression -> identifier .)
    TIMES           reduce using rule 169 (expression -> identifier .)
    DIVIDE          reduce using rule 169 (expression -> identifier .)
    MOD             reduce using rule 169 (expression -> identifier .)
    PLUS            reduce using rule 169 (expression -> identifier .)
    MINUS           reduce using rule 169 (expression -> identifier .)
    LSHIFT          reduce using rule 169 (expression -> identifier .)
    RSHIFT          reduce using rule 169 (expression -> identifier .)
    LSHIFTA         reduce using rule 169 (expression -> identifier .)
    RSHIFTA         reduce using rule 169 (expression -> identifier .)
    LT              reduce using rule 169 (expression -> identifier .)
    GT              reduce using rule 169 (expression -> identifier .)
    LE              reduce using rule 169 (expression -> identifier .)
    GE              reduce using rule 169 (expression -> identifier .)
    EQ              reduce using rule 169 (expression -> identifier .)
    NE              reduce using rule 169 (expression -> identifier .)
    EQL             reduce using rule 169 (expression -> identifier .)
    NEL             reduce using rule 169 (expression -> identifier .)
    AND             reduce using rule 169 (expression -> identifier .)
    XOR             reduce using rule 169 (expression -> identifier .)
    XNOR            reduce using rule 169 (expression -> identifier .)
    OR              reduce using rule 169 (expression -> identifier .)
    LAND            reduce using rule 169 (expression -> identifier .)
    LOR             reduce using rule 169 (expression -> identifier .)
    COND            reduce using rule 169 (expression -> identifier .)
    DOT             shift and go to state 135
    LBRACKET        shift and go to state 133
    LPAREN          shift and go to state 134

  ! RPAREN          [ reduce using rule 169 (expression -> identifier .) ]


state 698

    (320) instance_port_arg -> DOT ID LPAREN expression . RPAREN
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RPAREN          shift and go to state 729
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147
    LT              shift and go to state 145
    GT              shift and go to state 149
    LE              shift and go to state 142
    GE              shift and go to state 153
    EQ              shift and go to state 156
    NE              shift and go to state 144
    EQL             shift and go to state 155
    NEL             shift and go to state 136
    AND             shift and go to state 157
    XOR             shift and go to state 150
    XNOR            shift and go to state 148
    OR              shift and go to state 159
    LAND            shift and go to state 154
    LOR             shift and go to state 138
    COND            shift and go to state 139


state 699

    (310) param_arg -> DOT ID LPAREN . expression RPAREN
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 730
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 700

    (304) param_args_noname -> param_args_noname COMMA param_arg_noname .

    RPAREN          reduce using rule 304 (param_args_noname -> param_args_noname COMMA param_arg_noname .)
    COMMA           reduce using rule 304 (param_args_noname -> param_args_noname COMMA param_arg_noname .)


state 701

    (306) param_args -> param_args COMMA param_arg .

    RPAREN          reduce using rule 306 (param_args -> param_args COMMA param_arg .)
    COMMA           reduce using rule 306 (param_args -> param_args COMMA param_arg .)


state 702

    (351) function -> FUNCTION width ID SEMICOLON function_statement ENDFUNCTION .

    END             reduce using rule 351 (function -> FUNCTION width ID SEMICOLON function_statement ENDFUNCTION .)
    IF              reduce using rule 351 (function -> FUNCTION width ID SEMICOLON function_statement ENDFUNCTION .)
    FOR             reduce using rule 351 (function -> FUNCTION width ID SEMICOLON function_statement ENDFUNCTION .)
    INTEGER         reduce using rule 351 (function -> FUNCTION width ID SEMICOLON function_statement ENDFUNCTION .)
    REAL            reduce using rule 351 (function -> FUNCTION width ID SEMICOLON function_statement ENDFUNCTION .)
    PARAMETER       reduce using rule 351 (function -> FUNCTION width ID SEMICOLON function_statement ENDFUNCTION .)
    LOCALPARAM      reduce using rule 351 (function -> FUNCTION width ID SEMICOLON function_statement ENDFUNCTION .)
    GENVAR          reduce using rule 351 (function -> FUNCTION width ID SEMICOLON function_statement ENDFUNCTION .)
    ASSIGN          reduce using rule 351 (function -> FUNCTION width ID SEMICOLON function_statement ENDFUNCTION .)
    ALWAYS          reduce using rule 351 (function -> FUNCTION width ID SEMICOLON function_statement ENDFUNCTION .)
    INITIAL         reduce using rule 351 (function -> FUNCTION width ID SEMICOLON function_statement ENDFUNCTION .)
    ID              reduce using rule 351 (function -> FUNCTION width ID SEMICOLON function_statement ENDFUNCTION .)
    SENS_OR         reduce using rule 351 (function -> FUNCTION width ID SEMICOLON function_statement ENDFUNCTION .)
    FUNCTION        reduce using rule 351 (function -> FUNCTION width ID SEMICOLON function_statement ENDFUNCTION .)
    TASK            reduce using rule 351 (function -> FUNCTION width ID SEMICOLON function_statement ENDFUNCTION .)
    LPAREN          reduce using rule 351 (function -> FUNCTION width ID SEMICOLON function_statement ENDFUNCTION .)
    INPUT           reduce using rule 351 (function -> FUNCTION width ID SEMICOLON function_statement ENDFUNCTION .)
    OUTPUT          reduce using rule 351 (function -> FUNCTION width ID SEMICOLON function_statement ENDFUNCTION .)
    INOUT           reduce using rule 351 (function -> FUNCTION width ID SEMICOLON function_statement ENDFUNCTION .)
    TRI             reduce using rule 351 (function -> FUNCTION width ID SEMICOLON function_statement ENDFUNCTION .)
    REG             reduce using rule 351 (function -> FUNCTION width ID SEMICOLON function_statement ENDFUNCTION .)
    WIRE            reduce using rule 351 (function -> FUNCTION width ID SEMICOLON function_statement ENDFUNCTION .)
    SIGNED          reduce using rule 351 (function -> FUNCTION width ID SEMICOLON function_statement ENDFUNCTION .)
    SUPPLY0         reduce using rule 351 (function -> FUNCTION width ID SEMICOLON function_statement ENDFUNCTION .)
    SUPPLY1         reduce using rule 351 (function -> FUNCTION width ID SEMICOLON function_statement ENDFUNCTION .)
    ENDGENERATE     reduce using rule 351 (function -> FUNCTION width ID SEMICOLON function_statement ENDFUNCTION .)
    ENDMODULE       reduce using rule 351 (function -> FUNCTION width ID SEMICOLON function_statement ENDFUNCTION .)
    GENERATE        reduce using rule 351 (function -> FUNCTION width ID SEMICOLON function_statement ENDFUNCTION .)
    ELSE            reduce using rule 351 (function -> FUNCTION width ID SEMICOLON function_statement ENDFUNCTION .)


state 703

    (282) casecontent_statement -> DEFAULT COLON . basic_statement
    (216) basic_statement -> . if_statement
    (217) basic_statement -> . case_statement
    (218) basic_statement -> . casex_statement
    (219) basic_statement -> . for_statement
    (220) basic_statement -> . while_statement
    (221) basic_statement -> . event_statement
    (222) basic_statement -> . wait_statement
    (223) basic_statement -> . forever_statement
    (224) basic_statement -> . block
    (225) basic_statement -> . namedblock
    (226) basic_statement -> . parallelblock
    (227) basic_statement -> . blocking_substitution
    (228) basic_statement -> . nonblocking_substitution
    (229) basic_statement -> . single_statement
    (256) if_statement -> . IF LPAREN cond RPAREN true_statement ELSE else_statement
    (257) if_statement -> . IF LPAREN cond RPAREN true_statement
    (258) if_statement -> . delays IF LPAREN cond RPAREN true_statement ELSE else_statement
    (259) if_statement -> . delays IF LPAREN cond RPAREN true_statement
    (274) case_statement -> . CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (275) casex_statement -> . CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (264) for_statement -> . FOR LPAREN forpre forcond forpost RPAREN forcontent_statement
    (272) while_statement -> . WHILE LPAREN cond RPAREN whilecontent_statement
    (285) event_statement -> . senslist SEMICOLON
    (286) wait_statement -> . WAIT LPAREN cond RPAREN waitcontent_statement
    (289) forever_statement -> . FOREVER basic_statement
    (239) block -> . BEGIN block_statements END
    (240) block -> . BEGIN END
    (244) namedblock -> . BEGIN COLON ID namedblock_statements END
    (245) namedblock -> . BEGIN COLON ID END
    (254) parallelblock -> . FORK block_statements JOIN
    (255) parallelblock -> . FORK JOIN
    (231) blocking_substitution -> . delays lvalue EQUALS delays rvalue SEMICOLON
    (233) nonblocking_substitution -> . delays lvalue LE delays rvalue SEMICOLON
    (390) single_statement -> . DELAY expression SEMICOLON
    (391) single_statement -> . systemcall SEMICOLON
    (392) single_statement -> . disable SEMICOLON
    (234) delays -> . DELAY LPAREN expression RPAREN
    (235) delays -> . DELAY identifier
    (236) delays -> . DELAY intnumber
    (237) delays -> . DELAY floatnumber
    (238) delays -> . empty
    (197) senslist -> . AT LPAREN edgesigs RPAREN
    (204) senslist -> . empty
    (205) senslist -> . AT levelsig
    (206) senslist -> . AT LPAREN levelsigs RPAREN
    (214) senslist -> . AT TIMES
    (215) senslist -> . AT LPAREN TIMES RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (389) disable -> . DISABLE ID
    (393) empty -> .

  ! shift/reduce conflict for IF resolved as shift
    IF              shift and go to state 195
    CASE            shift and go to state 173
    CASEX           shift and go to state 178
    FOR             shift and go to state 187
    WHILE           shift and go to state 171
    WAIT            shift and go to state 168
    FOREVER         shift and go to state 167
    BEGIN           shift and go to state 175
    FORK            shift and go to state 166
    DELAY           shift and go to state 170
    AT              shift and go to state 193
    DOLLER          shift and go to state 54
    DISABLE         shift and go to state 180
    LBRACE          reduce using rule 393 (empty -> .)
    ID              reduce using rule 393 (empty -> .)
    SEMICOLON       reduce using rule 393 (empty -> .)

  ! IF              [ reduce using rule 393 (empty -> .) ]

    parallelblock                  shift and go to state 169
    blocking_substitution          shift and go to state 177
    forever_statement              shift and go to state 172
    casex_statement                shift and go to state 174
    delays                         shift and go to state 176
    while_statement                shift and go to state 179
    systemcall                     shift and go to state 181
    if_statement                   shift and go to state 182
    nonblocking_substitution       shift and go to state 183
    empty                          shift and go to state 184
    basic_statement                shift and go to state 731
    for_statement                  shift and go to state 186
    event_statement                shift and go to state 189
    wait_statement                 shift and go to state 190
    case_statement                 shift and go to state 191
    disable                        shift and go to state 192
    namedblock                     shift and go to state 194
    senslist                       shift and go to state 196
    block                          shift and go to state 198
    single_statement               shift and go to state 197

state 704

    (280) casecontent_condition -> casecontent_condition COMMA . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    expression                     shift and go to state 732
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    functioncall                   shift and go to state 55
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    pointer                        shift and go to state 31
    intnumber                      shift and go to state 37
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 705

    (279) casecontent_statement -> casecontent_condition COLON . basic_statement
    (216) basic_statement -> . if_statement
    (217) basic_statement -> . case_statement
    (218) basic_statement -> . casex_statement
    (219) basic_statement -> . for_statement
    (220) basic_statement -> . while_statement
    (221) basic_statement -> . event_statement
    (222) basic_statement -> . wait_statement
    (223) basic_statement -> . forever_statement
    (224) basic_statement -> . block
    (225) basic_statement -> . namedblock
    (226) basic_statement -> . parallelblock
    (227) basic_statement -> . blocking_substitution
    (228) basic_statement -> . nonblocking_substitution
    (229) basic_statement -> . single_statement
    (256) if_statement -> . IF LPAREN cond RPAREN true_statement ELSE else_statement
    (257) if_statement -> . IF LPAREN cond RPAREN true_statement
    (258) if_statement -> . delays IF LPAREN cond RPAREN true_statement ELSE else_statement
    (259) if_statement -> . delays IF LPAREN cond RPAREN true_statement
    (274) case_statement -> . CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (275) casex_statement -> . CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (264) for_statement -> . FOR LPAREN forpre forcond forpost RPAREN forcontent_statement
    (272) while_statement -> . WHILE LPAREN cond RPAREN whilecontent_statement
    (285) event_statement -> . senslist SEMICOLON
    (286) wait_statement -> . WAIT LPAREN cond RPAREN waitcontent_statement
    (289) forever_statement -> . FOREVER basic_statement
    (239) block -> . BEGIN block_statements END
    (240) block -> . BEGIN END
    (244) namedblock -> . BEGIN COLON ID namedblock_statements END
    (245) namedblock -> . BEGIN COLON ID END
    (254) parallelblock -> . FORK block_statements JOIN
    (255) parallelblock -> . FORK JOIN
    (231) blocking_substitution -> . delays lvalue EQUALS delays rvalue SEMICOLON
    (233) nonblocking_substitution -> . delays lvalue LE delays rvalue SEMICOLON
    (390) single_statement -> . DELAY expression SEMICOLON
    (391) single_statement -> . systemcall SEMICOLON
    (392) single_statement -> . disable SEMICOLON
    (234) delays -> . DELAY LPAREN expression RPAREN
    (235) delays -> . DELAY identifier
    (236) delays -> . DELAY intnumber
    (237) delays -> . DELAY floatnumber
    (238) delays -> . empty
    (197) senslist -> . AT LPAREN edgesigs RPAREN
    (204) senslist -> . empty
    (205) senslist -> . AT levelsig
    (206) senslist -> . AT LPAREN levelsigs RPAREN
    (214) senslist -> . AT TIMES
    (215) senslist -> . AT LPAREN TIMES RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (389) disable -> . DISABLE ID
    (393) empty -> .

  ! shift/reduce conflict for IF resolved as shift
    IF              shift and go to state 195
    CASE            shift and go to state 173
    CASEX           shift and go to state 178
    FOR             shift and go to state 187
    WHILE           shift and go to state 171
    WAIT            shift and go to state 168
    FOREVER         shift and go to state 167
    BEGIN           shift and go to state 175
    FORK            shift and go to state 166
    DELAY           shift and go to state 170
    AT              shift and go to state 193
    DOLLER          shift and go to state 54
    DISABLE         shift and go to state 180
    LBRACE          reduce using rule 393 (empty -> .)
    ID              reduce using rule 393 (empty -> .)
    SEMICOLON       reduce using rule 393 (empty -> .)

  ! IF              [ reduce using rule 393 (empty -> .) ]

    parallelblock                  shift and go to state 169
    forever_statement              shift and go to state 172
    casex_statement                shift and go to state 174
    delays                         shift and go to state 176
    blocking_substitution          shift and go to state 177
    while_statement                shift and go to state 179
    systemcall                     shift and go to state 181
    if_statement                   shift and go to state 182
    nonblocking_substitution       shift and go to state 183
    empty                          shift and go to state 184
    basic_statement                shift and go to state 733
    for_statement                  shift and go to state 186
    event_statement                shift and go to state 189
    wait_statement                 shift and go to state 190
    case_statement                 shift and go to state 191
    disable                        shift and go to state 192
    namedblock                     shift and go to state 194
    senslist                       shift and go to state 196
    block                          shift and go to state 198
    single_statement               shift and go to state 197

state 706

    (274) case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .

    END             reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    INTEGER         reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    REAL            reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    PARAMETER       reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    LOCALPARAM      reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    IF              reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    CASE            reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    CASEX           reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    FOR             reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    WHILE           reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    WAIT            reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    FOREVER         reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    BEGIN           reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    FORK            reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    DELAY           reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    AT              reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    DOLLER          reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    DISABLE         reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    INPUT           reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    OUTPUT          reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    INOUT           reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    TRI             reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    REG             reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    WIRE            reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    SIGNED          reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    SUPPLY0         reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    SUPPLY1         reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    LBRACE          reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    ID              reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    SEMICOLON       reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    ENDMODULE       reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    GENERATE        reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    GENVAR          reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    ASSIGN          reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    ALWAYS          reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    INITIAL         reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    SENS_OR         reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    FUNCTION        reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    TASK            reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    LPAREN          reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    ENDGENERATE     reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    ELSE            reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    JOIN            reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    ENDTASK         reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    ENDFUNCTION     reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    ENDCASE         reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    DEFAULT         reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    MINUS           reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    PLUS            reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    LNOT            reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    NOT             reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    AND             reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    NAND            reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    NOR             reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    OR              reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    XOR             reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    XNOR            reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    INTNUMBER_DEC   reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    SIGNED_INTNUMBER_DEC reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    INTNUMBER_BIN   reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    SIGNED_INTNUMBER_BIN reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    INTNUMBER_OCT   reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    SIGNED_INTNUMBER_OCT reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    INTNUMBER_HEX   reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    SIGNED_INTNUMBER_HEX reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    FLOATNUMBER     reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    STRING_LITERAL  reduce using rule 274 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)


state 707

    (277) casecontent_statements -> casecontent_statements casecontent_statement .

    ENDCASE         reduce using rule 277 (casecontent_statements -> casecontent_statements casecontent_statement .)
    DEFAULT         reduce using rule 277 (casecontent_statements -> casecontent_statements casecontent_statement .)
    MINUS           reduce using rule 277 (casecontent_statements -> casecontent_statements casecontent_statement .)
    PLUS            reduce using rule 277 (casecontent_statements -> casecontent_statements casecontent_statement .)
    LNOT            reduce using rule 277 (casecontent_statements -> casecontent_statements casecontent_statement .)
    NOT             reduce using rule 277 (casecontent_statements -> casecontent_statements casecontent_statement .)
    AND             reduce using rule 277 (casecontent_statements -> casecontent_statements casecontent_statement .)
    NAND            reduce using rule 277 (casecontent_statements -> casecontent_statements casecontent_statement .)
    NOR             reduce using rule 277 (casecontent_statements -> casecontent_statements casecontent_statement .)
    OR              reduce using rule 277 (casecontent_statements -> casecontent_statements casecontent_statement .)
    XOR             reduce using rule 277 (casecontent_statements -> casecontent_statements casecontent_statement .)
    XNOR            reduce using rule 277 (casecontent_statements -> casecontent_statements casecontent_statement .)
    LPAREN          reduce using rule 277 (casecontent_statements -> casecontent_statements casecontent_statement .)
    LBRACE          reduce using rule 277 (casecontent_statements -> casecontent_statements casecontent_statement .)
    DOLLER          reduce using rule 277 (casecontent_statements -> casecontent_statements casecontent_statement .)
    ID              reduce using rule 277 (casecontent_statements -> casecontent_statements casecontent_statement .)
    INTNUMBER_DEC   reduce using rule 277 (casecontent_statements -> casecontent_statements casecontent_statement .)
    SIGNED_INTNUMBER_DEC reduce using rule 277 (casecontent_statements -> casecontent_statements casecontent_statement .)
    INTNUMBER_BIN   reduce using rule 277 (casecontent_statements -> casecontent_statements casecontent_statement .)
    SIGNED_INTNUMBER_BIN reduce using rule 277 (casecontent_statements -> casecontent_statements casecontent_statement .)
    INTNUMBER_OCT   reduce using rule 277 (casecontent_statements -> casecontent_statements casecontent_statement .)
    SIGNED_INTNUMBER_OCT reduce using rule 277 (casecontent_statements -> casecontent_statements casecontent_statement .)
    INTNUMBER_HEX   reduce using rule 277 (casecontent_statements -> casecontent_statements casecontent_statement .)
    SIGNED_INTNUMBER_HEX reduce using rule 277 (casecontent_statements -> casecontent_statements casecontent_statement .)
    FLOATNUMBER     reduce using rule 277 (casecontent_statements -> casecontent_statements casecontent_statement .)
    STRING_LITERAL  reduce using rule 277 (casecontent_statements -> casecontent_statements casecontent_statement .)


state 708

    (233) nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .

    ENDMODULE       reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    GENERATE        reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    INTEGER         reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    REAL            reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    PARAMETER       reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    LOCALPARAM      reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    GENVAR          reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    ASSIGN          reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    ALWAYS          reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    INITIAL         reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    ID              reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    SENS_OR         reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    FUNCTION        reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    TASK            reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    LPAREN          reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    INPUT           reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    OUTPUT          reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    INOUT           reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    TRI             reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    REG             reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    WIRE            reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    SIGNED          reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    SUPPLY0         reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    SUPPLY1         reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    ENDGENERATE     reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    IF              reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    FOR             reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    ELSE            reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    END             reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    JOIN            reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    CASE            reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    CASEX           reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    WHILE           reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    WAIT            reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    FOREVER         reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    BEGIN           reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    FORK            reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    DELAY           reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    AT              reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    DOLLER          reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    DISABLE         reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    LBRACE          reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    SEMICOLON       reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    ENDTASK         reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    ENDFUNCTION     reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    ENDCASE         reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    DEFAULT         reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    MINUS           reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    PLUS            reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    LNOT            reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    NOT             reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    AND             reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    NAND            reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    NOR             reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    OR              reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    XOR             reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    XNOR            reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    INTNUMBER_DEC   reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    SIGNED_INTNUMBER_DEC reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    INTNUMBER_BIN   reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    SIGNED_INTNUMBER_BIN reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    INTNUMBER_OCT   reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    SIGNED_INTNUMBER_OCT reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    INTNUMBER_HEX   reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    SIGNED_INTNUMBER_HEX reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    FLOATNUMBER     reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    STRING_LITERAL  reduce using rule 233 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)


state 709

    (231) blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .

    ENDMODULE       reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    GENERATE        reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    INTEGER         reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    REAL            reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    PARAMETER       reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    LOCALPARAM      reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    GENVAR          reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    ASSIGN          reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    ALWAYS          reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    INITIAL         reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    ID              reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    SENS_OR         reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    FUNCTION        reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    TASK            reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    LPAREN          reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    INPUT           reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    OUTPUT          reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    INOUT           reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    TRI             reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    REG             reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    WIRE            reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    SIGNED          reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    SUPPLY0         reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    SUPPLY1         reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    ENDGENERATE     reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    IF              reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    FOR             reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    ELSE            reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    END             reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    JOIN            reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    CASE            reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    CASEX           reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    WHILE           reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    WAIT            reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    FOREVER         reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    BEGIN           reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    FORK            reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    DELAY           reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    AT              reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    DOLLER          reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    DISABLE         reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    LBRACE          reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    SEMICOLON       reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    ENDTASK         reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    ENDFUNCTION     reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    ENDCASE         reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    DEFAULT         reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    MINUS           reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    PLUS            reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    LNOT            reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    NOT             reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    AND             reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    NAND            reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    NOR             reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    OR              reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    XOR             reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    XNOR            reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    INTNUMBER_DEC   reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    SIGNED_INTNUMBER_DEC reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    INTNUMBER_BIN   reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    SIGNED_INTNUMBER_BIN reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    INTNUMBER_OCT   reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    SIGNED_INTNUMBER_OCT reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    INTNUMBER_HEX   reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    SIGNED_INTNUMBER_HEX reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    FLOATNUMBER     reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    STRING_LITERAL  reduce using rule 231 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)


state 710

    (258) if_statement -> delays IF LPAREN cond RPAREN true_statement . ELSE else_statement
    (259) if_statement -> delays IF LPAREN cond RPAREN true_statement .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 734
    JOIN            reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    IF              reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    CASE            reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    CASEX           reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    FOR             reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    WHILE           reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    WAIT            reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    FOREVER         reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    BEGIN           reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    FORK            reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    DELAY           reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    AT              reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    DOLLER          reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    DISABLE         reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    LBRACE          reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    ID              reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    SEMICOLON       reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    ENDMODULE       reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    GENERATE        reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    INTEGER         reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    REAL            reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    PARAMETER       reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    LOCALPARAM      reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    GENVAR          reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    ASSIGN          reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    ALWAYS          reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    INITIAL         reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    SENS_OR         reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    FUNCTION        reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    TASK            reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    LPAREN          reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    INPUT           reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    OUTPUT          reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    INOUT           reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    TRI             reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    REG             reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    WIRE            reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    SIGNED          reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    SUPPLY0         reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    SUPPLY1         reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    ENDGENERATE     reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    END             reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    ENDTASK         reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    ENDFUNCTION     reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    ENDCASE         reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    DEFAULT         reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    MINUS           reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    PLUS            reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    LNOT            reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    NOT             reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    AND             reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    NAND            reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    NOR             reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    OR              reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    XOR             reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    XNOR            reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    INTNUMBER_DEC   reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    SIGNED_INTNUMBER_DEC reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    INTNUMBER_BIN   reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    SIGNED_INTNUMBER_BIN reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    INTNUMBER_OCT   reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    SIGNED_INTNUMBER_OCT reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    INTNUMBER_HEX   reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    SIGNED_INTNUMBER_HEX reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    FLOATNUMBER     reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    STRING_LITERAL  reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)

  ! ELSE            [ reduce using rule 259 (if_statement -> delays IF LPAREN cond RPAREN true_statement .) ]


state 711

    (275) casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .

    ENDMODULE       reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    GENERATE        reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    INTEGER         reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    REAL            reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    PARAMETER       reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    LOCALPARAM      reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    GENVAR          reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    ASSIGN          reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    ALWAYS          reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    INITIAL         reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    ID              reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    SENS_OR         reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    FUNCTION        reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    TASK            reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    LPAREN          reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    INPUT           reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    OUTPUT          reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    INOUT           reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    TRI             reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    REG             reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    WIRE            reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    SIGNED          reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    SUPPLY0         reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    SUPPLY1         reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    ENDGENERATE     reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    IF              reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    FOR             reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    ELSE            reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    END             reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    JOIN            reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    CASE            reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    CASEX           reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    WHILE           reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    WAIT            reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    FOREVER         reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    BEGIN           reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    FORK            reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    DELAY           reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    AT              reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    DOLLER          reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    DISABLE         reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    LBRACE          reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    SEMICOLON       reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    ENDTASK         reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    ENDFUNCTION     reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    ENDCASE         reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    DEFAULT         reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    MINUS           reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    PLUS            reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    LNOT            reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    NOT             reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    AND             reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    NAND            reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    NOR             reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    OR              reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    XOR             reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    XNOR            reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    INTNUMBER_DEC   reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    SIGNED_INTNUMBER_DEC reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    INTNUMBER_BIN   reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    SIGNED_INTNUMBER_BIN reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    INTNUMBER_OCT   reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    SIGNED_INTNUMBER_OCT reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    INTNUMBER_HEX   reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    SIGNED_INTNUMBER_HEX reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    FLOATNUMBER     reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    STRING_LITERAL  reduce using rule 275 (casex_statement -> CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE .)


state 712

    (232) blocking_substitution_base -> delays lvalue . EQUALS delays rvalue

    EQUALS          shift and go to state 735


state 713

    (264) for_statement -> FOR LPAREN forpre forcond forpost RPAREN . forcontent_statement
    (271) forcontent_statement -> . basic_statement
    (216) basic_statement -> . if_statement
    (217) basic_statement -> . case_statement
    (218) basic_statement -> . casex_statement
    (219) basic_statement -> . for_statement
    (220) basic_statement -> . while_statement
    (221) basic_statement -> . event_statement
    (222) basic_statement -> . wait_statement
    (223) basic_statement -> . forever_statement
    (224) basic_statement -> . block
    (225) basic_statement -> . namedblock
    (226) basic_statement -> . parallelblock
    (227) basic_statement -> . blocking_substitution
    (228) basic_statement -> . nonblocking_substitution
    (229) basic_statement -> . single_statement
    (256) if_statement -> . IF LPAREN cond RPAREN true_statement ELSE else_statement
    (257) if_statement -> . IF LPAREN cond RPAREN true_statement
    (258) if_statement -> . delays IF LPAREN cond RPAREN true_statement ELSE else_statement
    (259) if_statement -> . delays IF LPAREN cond RPAREN true_statement
    (274) case_statement -> . CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (275) casex_statement -> . CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (264) for_statement -> . FOR LPAREN forpre forcond forpost RPAREN forcontent_statement
    (272) while_statement -> . WHILE LPAREN cond RPAREN whilecontent_statement
    (285) event_statement -> . senslist SEMICOLON
    (286) wait_statement -> . WAIT LPAREN cond RPAREN waitcontent_statement
    (289) forever_statement -> . FOREVER basic_statement
    (239) block -> . BEGIN block_statements END
    (240) block -> . BEGIN END
    (244) namedblock -> . BEGIN COLON ID namedblock_statements END
    (245) namedblock -> . BEGIN COLON ID END
    (254) parallelblock -> . FORK block_statements JOIN
    (255) parallelblock -> . FORK JOIN
    (231) blocking_substitution -> . delays lvalue EQUALS delays rvalue SEMICOLON
    (233) nonblocking_substitution -> . delays lvalue LE delays rvalue SEMICOLON
    (390) single_statement -> . DELAY expression SEMICOLON
    (391) single_statement -> . systemcall SEMICOLON
    (392) single_statement -> . disable SEMICOLON
    (234) delays -> . DELAY LPAREN expression RPAREN
    (235) delays -> . DELAY identifier
    (236) delays -> . DELAY intnumber
    (237) delays -> . DELAY floatnumber
    (238) delays -> . empty
    (197) senslist -> . AT LPAREN edgesigs RPAREN
    (204) senslist -> . empty
    (205) senslist -> . AT levelsig
    (206) senslist -> . AT LPAREN levelsigs RPAREN
    (214) senslist -> . AT TIMES
    (215) senslist -> . AT LPAREN TIMES RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (389) disable -> . DISABLE ID
    (393) empty -> .

  ! shift/reduce conflict for IF resolved as shift
    IF              shift and go to state 195
    CASE            shift and go to state 173
    CASEX           shift and go to state 178
    FOR             shift and go to state 187
    WHILE           shift and go to state 171
    WAIT            shift and go to state 168
    FOREVER         shift and go to state 167
    BEGIN           shift and go to state 175
    FORK            shift and go to state 166
    DELAY           shift and go to state 170
    AT              shift and go to state 193
    DOLLER          shift and go to state 54
    DISABLE         shift and go to state 180
    LBRACE          reduce using rule 393 (empty -> .)
    ID              reduce using rule 393 (empty -> .)
    SEMICOLON       reduce using rule 393 (empty -> .)

  ! IF              [ reduce using rule 393 (empty -> .) ]

    parallelblock                  shift and go to state 169
    blocking_substitution          shift and go to state 177
    forever_statement              shift and go to state 172
    casex_statement                shift and go to state 174
    delays                         shift and go to state 176
    while_statement                shift and go to state 179
    systemcall                     shift and go to state 181
    if_statement                   shift and go to state 182
    nonblocking_substitution       shift and go to state 183
    empty                          shift and go to state 184
    basic_statement                shift and go to state 736
    for_statement                  shift and go to state 186
    event_statement                shift and go to state 189
    wait_statement                 shift and go to state 190
    case_statement                 shift and go to state 191
    disable                        shift and go to state 192
    forcontent_statement           shift and go to state 737
    namedblock                     shift and go to state 194
    senslist                       shift and go to state 196
    single_statement               shift and go to state 197
    block                          shift and go to state 198

state 714

    (256) if_statement -> IF LPAREN cond RPAREN true_statement ELSE . else_statement
    (263) else_statement -> . ifcontent_statement
    (261) ifcontent_statement -> . basic_statement
    (216) basic_statement -> . if_statement
    (217) basic_statement -> . case_statement
    (218) basic_statement -> . casex_statement
    (219) basic_statement -> . for_statement
    (220) basic_statement -> . while_statement
    (221) basic_statement -> . event_statement
    (222) basic_statement -> . wait_statement
    (223) basic_statement -> . forever_statement
    (224) basic_statement -> . block
    (225) basic_statement -> . namedblock
    (226) basic_statement -> . parallelblock
    (227) basic_statement -> . blocking_substitution
    (228) basic_statement -> . nonblocking_substitution
    (229) basic_statement -> . single_statement
    (256) if_statement -> . IF LPAREN cond RPAREN true_statement ELSE else_statement
    (257) if_statement -> . IF LPAREN cond RPAREN true_statement
    (258) if_statement -> . delays IF LPAREN cond RPAREN true_statement ELSE else_statement
    (259) if_statement -> . delays IF LPAREN cond RPAREN true_statement
    (274) case_statement -> . CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (275) casex_statement -> . CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (264) for_statement -> . FOR LPAREN forpre forcond forpost RPAREN forcontent_statement
    (272) while_statement -> . WHILE LPAREN cond RPAREN whilecontent_statement
    (285) event_statement -> . senslist SEMICOLON
    (286) wait_statement -> . WAIT LPAREN cond RPAREN waitcontent_statement
    (289) forever_statement -> . FOREVER basic_statement
    (239) block -> . BEGIN block_statements END
    (240) block -> . BEGIN END
    (244) namedblock -> . BEGIN COLON ID namedblock_statements END
    (245) namedblock -> . BEGIN COLON ID END
    (254) parallelblock -> . FORK block_statements JOIN
    (255) parallelblock -> . FORK JOIN
    (231) blocking_substitution -> . delays lvalue EQUALS delays rvalue SEMICOLON
    (233) nonblocking_substitution -> . delays lvalue LE delays rvalue SEMICOLON
    (390) single_statement -> . DELAY expression SEMICOLON
    (391) single_statement -> . systemcall SEMICOLON
    (392) single_statement -> . disable SEMICOLON
    (234) delays -> . DELAY LPAREN expression RPAREN
    (235) delays -> . DELAY identifier
    (236) delays -> . DELAY intnumber
    (237) delays -> . DELAY floatnumber
    (238) delays -> . empty
    (197) senslist -> . AT LPAREN edgesigs RPAREN
    (204) senslist -> . empty
    (205) senslist -> . AT levelsig
    (206) senslist -> . AT LPAREN levelsigs RPAREN
    (214) senslist -> . AT TIMES
    (215) senslist -> . AT LPAREN TIMES RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (389) disable -> . DISABLE ID
    (393) empty -> .

  ! shift/reduce conflict for IF resolved as shift
    IF              shift and go to state 195
    CASE            shift and go to state 173
    CASEX           shift and go to state 178
    FOR             shift and go to state 187
    WHILE           shift and go to state 171
    WAIT            shift and go to state 168
    FOREVER         shift and go to state 167
    BEGIN           shift and go to state 175
    FORK            shift and go to state 166
    DELAY           shift and go to state 170
    AT              shift and go to state 193
    DOLLER          shift and go to state 54
    DISABLE         shift and go to state 180
    LBRACE          reduce using rule 393 (empty -> .)
    ID              reduce using rule 393 (empty -> .)
    SEMICOLON       reduce using rule 393 (empty -> .)

  ! IF              [ reduce using rule 393 (empty -> .) ]

    parallelblock                  shift and go to state 169
    forever_statement              shift and go to state 172
    casex_statement                shift and go to state 174
    delays                         shift and go to state 176
    blocking_substitution          shift and go to state 177
    while_statement                shift and go to state 179
    systemcall                     shift and go to state 181
    if_statement                   shift and go to state 182
    nonblocking_substitution       shift and go to state 183
    empty                          shift and go to state 184
    basic_statement                shift and go to state 676
    for_statement                  shift and go to state 186
    event_statement                shift and go to state 189
    wait_statement                 shift and go to state 190
    case_statement                 shift and go to state 191
    disable                        shift and go to state 192
    ifcontent_statement            shift and go to state 738
    namedblock                     shift and go to state 194
    else_statement                 shift and go to state 739
    senslist                       shift and go to state 196
    block                          shift and go to state 198
    single_statement               shift and go to state 197

state 715

    (341) generate_for -> FOR LPAREN forpre forcond forpost RPAREN . generate_forcontent
    (342) generate_forcontent -> . generate_item
    (343) generate_forcontent -> . generate_block
    (330) generate_item -> . standard_item
    (331) generate_item -> . generate_if
    (332) generate_item -> . generate_for
    (333) generate_block -> . BEGIN generate_items END
    (334) generate_block -> . BEGIN COLON ID generate_items END
    (60) standard_item -> . decl
    (61) standard_item -> . integerdecl
    (62) standard_item -> . realdecl
    (63) standard_item -> . declassign
    (64) standard_item -> . parameterdecl
    (65) standard_item -> . localparamdecl
    (66) standard_item -> . genvardecl
    (67) standard_item -> . assignment
    (68) standard_item -> . always
    (69) standard_item -> . initial
    (70) standard_item -> . instance
    (71) standard_item -> . function
    (72) standard_item -> . task
    (73) standard_item -> . pragma
    (335) generate_if -> . IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item
    (336) generate_if -> . IF LPAREN cond RPAREN gif_true_item
    (341) generate_for -> . FOR LPAREN forpre forcond forpost RPAREN generate_forcontent
    (74) decl -> . sigtypes declnamelist SEMICOLON
    (75) decl -> . sigtypes width declnamelist SEMICOLON
    (84) integerdecl -> . INTEGER integernamelist SEMICOLON
    (85) integerdecl -> . INTEGER SIGNED integernamelist SEMICOLON
    (89) realdecl -> . REAL realnamelist SEMICOLON
    (80) declassign -> . sigtypes declassign_element SEMICOLON
    (81) declassign -> . sigtypes width declassign_element SEMICOLON
    (93) parameterdecl -> . PARAMETER param_substitution_list SEMICOLON
    (94) parameterdecl -> . PARAMETER SIGNED param_substitution_list SEMICOLON
    (95) parameterdecl -> . PARAMETER width param_substitution_list SEMICOLON
    (96) parameterdecl -> . PARAMETER SIGNED width param_substitution_list SEMICOLON
    (97) parameterdecl -> . PARAMETER INTEGER param_substitution_list SEMICOLON
    (98) localparamdecl -> . LOCALPARAM param_substitution_list SEMICOLON
    (99) localparamdecl -> . LOCALPARAM SIGNED param_substitution_list SEMICOLON
    (100) localparamdecl -> . LOCALPARAM width param_substitution_list SEMICOLON
    (101) localparamdecl -> . LOCALPARAM SIGNED width param_substitution_list SEMICOLON
    (102) localparamdecl -> . LOCALPARAM INTEGER param_substitution_list SEMICOLON
    (322) genvardecl -> . GENVAR genvarlist SEMICOLON
    (106) assignment -> . ASSIGN lvalue EQUALS rvalue SEMICOLON
    (107) assignment -> . ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON
    (196) always -> . ALWAYS senslist always_statement
    (283) initial -> . INITIAL initial_statement
    (290) instance -> . ID parameterlist instance_bodylist SEMICOLON
    (291) instance -> . SENS_OR parameterlist instance_bodylist SEMICOLON
    (296) instance -> . ID instance_bodylist_noname SEMICOLON
    (297) instance -> . SENS_OR instance_bodylist_noname SEMICOLON
    (351) function -> . FUNCTION width ID SEMICOLON function_statement ENDFUNCTION
    (352) function -> . FUNCTION ID SEMICOLON function_statement ENDFUNCTION
    (370) task -> . TASK ID SEMICOLON task_statement ENDTASK
    (7) pragma -> . LPAREN TIMES ID EQUALS expression TIMES RPAREN
    (8) pragma -> . LPAREN TIMES ID TIMES RPAREN
    (35) sigtypes -> . sigtypes sigtype
    (36) sigtypes -> . sigtype
    (37) sigtype -> . INPUT
    (38) sigtype -> . OUTPUT
    (39) sigtype -> . INOUT
    (40) sigtype -> . TRI
    (41) sigtype -> . REG
    (42) sigtype -> . WIRE
    (43) sigtype -> . SIGNED
    (44) sigtype -> . SUPPLY0
    (45) sigtype -> . SUPPLY1

    BEGIN           shift and go to state 681
    IF              shift and go to state 217
    FOR             shift and go to state 215
    INTEGER         shift and go to state 83
    REAL            shift and go to state 63
    PARAMETER       shift and go to state 70
    LOCALPARAM      shift and go to state 101
    GENVAR          shift and go to state 69
    ASSIGN          shift and go to state 85
    ALWAYS          shift and go to state 68
    INITIAL         shift and go to state 66
    ID              shift and go to state 92
    SENS_OR         shift and go to state 99
    FUNCTION        shift and go to state 93
    TASK            shift and go to state 90
    LPAREN          shift and go to state 2
    INPUT           shift and go to state 91
    OUTPUT          shift and go to state 96
    INOUT           shift and go to state 72
    TRI             shift and go to state 89
    REG             shift and go to state 67
    WIRE            shift and go to state 104
    SIGNED          shift and go to state 98
    SUPPLY0         shift and go to state 79
    SUPPLY1         shift and go to state 80

    decl                           shift and go to state 62
    localparamdecl                 shift and go to state 64
    declassign                     shift and go to state 65
    generate_for                   shift and go to state 211
    integerdecl                    shift and go to state 71
    standard_item                  shift and go to state 212
    genvardecl                     shift and go to state 74
    sigtype                        shift and go to state 75
    initial                        shift and go to state 76
    instance                       shift and go to state 78
    sigtypes                       shift and go to state 88
    realdecl                       shift and go to state 82
    parameterdecl                  shift and go to state 84
    function                       shift and go to state 87
    assignment                     shift and go to state 81
    generate_block                 shift and go to state 740
    pragma                         shift and go to state 102
    generate_item                  shift and go to state 741
    task                           shift and go to state 95
    always                         shift and go to state 97
    generate_forcontent            shift and go to state 742
    generate_if                    shift and go to state 218

state 716

    (334) generate_block -> BEGIN COLON . ID generate_items END

    ID              shift and go to state 743


state 717

    (333) generate_block -> BEGIN generate_items . END
    (328) generate_items -> generate_items . generate_item
    (330) generate_item -> . standard_item
    (331) generate_item -> . generate_if
    (332) generate_item -> . generate_for
    (60) standard_item -> . decl
    (61) standard_item -> . integerdecl
    (62) standard_item -> . realdecl
    (63) standard_item -> . declassign
    (64) standard_item -> . parameterdecl
    (65) standard_item -> . localparamdecl
    (66) standard_item -> . genvardecl
    (67) standard_item -> . assignment
    (68) standard_item -> . always
    (69) standard_item -> . initial
    (70) standard_item -> . instance
    (71) standard_item -> . function
    (72) standard_item -> . task
    (73) standard_item -> . pragma
    (335) generate_if -> . IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item
    (336) generate_if -> . IF LPAREN cond RPAREN gif_true_item
    (341) generate_for -> . FOR LPAREN forpre forcond forpost RPAREN generate_forcontent
    (74) decl -> . sigtypes declnamelist SEMICOLON
    (75) decl -> . sigtypes width declnamelist SEMICOLON
    (84) integerdecl -> . INTEGER integernamelist SEMICOLON
    (85) integerdecl -> . INTEGER SIGNED integernamelist SEMICOLON
    (89) realdecl -> . REAL realnamelist SEMICOLON
    (80) declassign -> . sigtypes declassign_element SEMICOLON
    (81) declassign -> . sigtypes width declassign_element SEMICOLON
    (93) parameterdecl -> . PARAMETER param_substitution_list SEMICOLON
    (94) parameterdecl -> . PARAMETER SIGNED param_substitution_list SEMICOLON
    (95) parameterdecl -> . PARAMETER width param_substitution_list SEMICOLON
    (96) parameterdecl -> . PARAMETER SIGNED width param_substitution_list SEMICOLON
    (97) parameterdecl -> . PARAMETER INTEGER param_substitution_list SEMICOLON
    (98) localparamdecl -> . LOCALPARAM param_substitution_list SEMICOLON
    (99) localparamdecl -> . LOCALPARAM SIGNED param_substitution_list SEMICOLON
    (100) localparamdecl -> . LOCALPARAM width param_substitution_list SEMICOLON
    (101) localparamdecl -> . LOCALPARAM SIGNED width param_substitution_list SEMICOLON
    (102) localparamdecl -> . LOCALPARAM INTEGER param_substitution_list SEMICOLON
    (322) genvardecl -> . GENVAR genvarlist SEMICOLON
    (106) assignment -> . ASSIGN lvalue EQUALS rvalue SEMICOLON
    (107) assignment -> . ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON
    (196) always -> . ALWAYS senslist always_statement
    (283) initial -> . INITIAL initial_statement
    (290) instance -> . ID parameterlist instance_bodylist SEMICOLON
    (291) instance -> . SENS_OR parameterlist instance_bodylist SEMICOLON
    (296) instance -> . ID instance_bodylist_noname SEMICOLON
    (297) instance -> . SENS_OR instance_bodylist_noname SEMICOLON
    (351) function -> . FUNCTION width ID SEMICOLON function_statement ENDFUNCTION
    (352) function -> . FUNCTION ID SEMICOLON function_statement ENDFUNCTION
    (370) task -> . TASK ID SEMICOLON task_statement ENDTASK
    (7) pragma -> . LPAREN TIMES ID EQUALS expression TIMES RPAREN
    (8) pragma -> . LPAREN TIMES ID TIMES RPAREN
    (35) sigtypes -> . sigtypes sigtype
    (36) sigtypes -> . sigtype
    (37) sigtype -> . INPUT
    (38) sigtype -> . OUTPUT
    (39) sigtype -> . INOUT
    (40) sigtype -> . TRI
    (41) sigtype -> . REG
    (42) sigtype -> . WIRE
    (43) sigtype -> . SIGNED
    (44) sigtype -> . SUPPLY0
    (45) sigtype -> . SUPPLY1

    END             shift and go to state 744
    IF              shift and go to state 217
    FOR             shift and go to state 215
    INTEGER         shift and go to state 83
    REAL            shift and go to state 63
    PARAMETER       shift and go to state 70
    LOCALPARAM      shift and go to state 101
    GENVAR          shift and go to state 69
    ASSIGN          shift and go to state 85
    ALWAYS          shift and go to state 68
    INITIAL         shift and go to state 66
    ID              shift and go to state 92
    SENS_OR         shift and go to state 99
    FUNCTION        shift and go to state 93
    TASK            shift and go to state 90
    LPAREN          shift and go to state 2
    INPUT           shift and go to state 91
    OUTPUT          shift and go to state 96
    INOUT           shift and go to state 72
    TRI             shift and go to state 89
    REG             shift and go to state 67
    WIRE            shift and go to state 104
    SIGNED          shift and go to state 98
    SUPPLY0         shift and go to state 79
    SUPPLY1         shift and go to state 80

    decl                           shift and go to state 62
    localparamdecl                 shift and go to state 64
    declassign                     shift and go to state 65
    generate_for                   shift and go to state 211
    integerdecl                    shift and go to state 71
    standard_item                  shift and go to state 212
    genvardecl                     shift and go to state 74
    sigtype                        shift and go to state 75
    initial                        shift and go to state 76
    instance                       shift and go to state 78
    sigtypes                       shift and go to state 88
    realdecl                       shift and go to state 82
    parameterdecl                  shift and go to state 84
    function                       shift and go to state 87
    assignment                     shift and go to state 81
    generate_item                  shift and go to state 356
    task                           shift and go to state 95
    always                         shift and go to state 97
    pragma                         shift and go to state 102
    generate_if                    shift and go to state 218

state 718

    (335) generate_if -> IF LPAREN cond RPAREN gif_true_item ELSE . gif_false_item
    (339) gif_false_item -> . generate_item
    (340) gif_false_item -> . generate_block
    (330) generate_item -> . standard_item
    (331) generate_item -> . generate_if
    (332) generate_item -> . generate_for
    (333) generate_block -> . BEGIN generate_items END
    (334) generate_block -> . BEGIN COLON ID generate_items END
    (60) standard_item -> . decl
    (61) standard_item -> . integerdecl
    (62) standard_item -> . realdecl
    (63) standard_item -> . declassign
    (64) standard_item -> . parameterdecl
    (65) standard_item -> . localparamdecl
    (66) standard_item -> . genvardecl
    (67) standard_item -> . assignment
    (68) standard_item -> . always
    (69) standard_item -> . initial
    (70) standard_item -> . instance
    (71) standard_item -> . function
    (72) standard_item -> . task
    (73) standard_item -> . pragma
    (335) generate_if -> . IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item
    (336) generate_if -> . IF LPAREN cond RPAREN gif_true_item
    (341) generate_for -> . FOR LPAREN forpre forcond forpost RPAREN generate_forcontent
    (74) decl -> . sigtypes declnamelist SEMICOLON
    (75) decl -> . sigtypes width declnamelist SEMICOLON
    (84) integerdecl -> . INTEGER integernamelist SEMICOLON
    (85) integerdecl -> . INTEGER SIGNED integernamelist SEMICOLON
    (89) realdecl -> . REAL realnamelist SEMICOLON
    (80) declassign -> . sigtypes declassign_element SEMICOLON
    (81) declassign -> . sigtypes width declassign_element SEMICOLON
    (93) parameterdecl -> . PARAMETER param_substitution_list SEMICOLON
    (94) parameterdecl -> . PARAMETER SIGNED param_substitution_list SEMICOLON
    (95) parameterdecl -> . PARAMETER width param_substitution_list SEMICOLON
    (96) parameterdecl -> . PARAMETER SIGNED width param_substitution_list SEMICOLON
    (97) parameterdecl -> . PARAMETER INTEGER param_substitution_list SEMICOLON
    (98) localparamdecl -> . LOCALPARAM param_substitution_list SEMICOLON
    (99) localparamdecl -> . LOCALPARAM SIGNED param_substitution_list SEMICOLON
    (100) localparamdecl -> . LOCALPARAM width param_substitution_list SEMICOLON
    (101) localparamdecl -> . LOCALPARAM SIGNED width param_substitution_list SEMICOLON
    (102) localparamdecl -> . LOCALPARAM INTEGER param_substitution_list SEMICOLON
    (322) genvardecl -> . GENVAR genvarlist SEMICOLON
    (106) assignment -> . ASSIGN lvalue EQUALS rvalue SEMICOLON
    (107) assignment -> . ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON
    (196) always -> . ALWAYS senslist always_statement
    (283) initial -> . INITIAL initial_statement
    (290) instance -> . ID parameterlist instance_bodylist SEMICOLON
    (291) instance -> . SENS_OR parameterlist instance_bodylist SEMICOLON
    (296) instance -> . ID instance_bodylist_noname SEMICOLON
    (297) instance -> . SENS_OR instance_bodylist_noname SEMICOLON
    (351) function -> . FUNCTION width ID SEMICOLON function_statement ENDFUNCTION
    (352) function -> . FUNCTION ID SEMICOLON function_statement ENDFUNCTION
    (370) task -> . TASK ID SEMICOLON task_statement ENDTASK
    (7) pragma -> . LPAREN TIMES ID EQUALS expression TIMES RPAREN
    (8) pragma -> . LPAREN TIMES ID TIMES RPAREN
    (35) sigtypes -> . sigtypes sigtype
    (36) sigtypes -> . sigtype
    (37) sigtype -> . INPUT
    (38) sigtype -> . OUTPUT
    (39) sigtype -> . INOUT
    (40) sigtype -> . TRI
    (41) sigtype -> . REG
    (42) sigtype -> . WIRE
    (43) sigtype -> . SIGNED
    (44) sigtype -> . SUPPLY0
    (45) sigtype -> . SUPPLY1

    BEGIN           shift and go to state 681
    IF              shift and go to state 217
    FOR             shift and go to state 215
    INTEGER         shift and go to state 83
    REAL            shift and go to state 63
    PARAMETER       shift and go to state 70
    LOCALPARAM      shift and go to state 101
    GENVAR          shift and go to state 69
    ASSIGN          shift and go to state 85
    ALWAYS          shift and go to state 68
    INITIAL         shift and go to state 66
    ID              shift and go to state 92
    SENS_OR         shift and go to state 99
    FUNCTION        shift and go to state 93
    TASK            shift and go to state 90
    LPAREN          shift and go to state 2
    INPUT           shift and go to state 91
    OUTPUT          shift and go to state 96
    INOUT           shift and go to state 72
    TRI             shift and go to state 89
    REG             shift and go to state 67
    WIRE            shift and go to state 104
    SIGNED          shift and go to state 98
    SUPPLY0         shift and go to state 79
    SUPPLY1         shift and go to state 80

    decl                           shift and go to state 62
    localparamdecl                 shift and go to state 64
    declassign                     shift and go to state 65
    generate_for                   shift and go to state 211
    integerdecl                    shift and go to state 71
    standard_item                  shift and go to state 212
    genvardecl                     shift and go to state 74
    sigtype                        shift and go to state 75
    initial                        shift and go to state 76
    instance                       shift and go to state 78
    sigtypes                       shift and go to state 88
    realdecl                       shift and go to state 82
    parameterdecl                  shift and go to state 84
    function                       shift and go to state 87
    assignment                     shift and go to state 81
    generate_block                 shift and go to state 746
    gif_false_item                 shift and go to state 747
    generate_item                  shift and go to state 745
    task                           shift and go to state 95
    always                         shift and go to state 97
    pragma                         shift and go to state 102
    generate_if                    shift and go to state 218

state 719

    (108) lpartselect -> pointer LBRACKET expression COLON expression RBRACKET .

    EQUALS          reduce using rule 108 (lpartselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    LE              reduce using rule 108 (lpartselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    RBRACE          reduce using rule 108 (lpartselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    COMMA           reduce using rule 108 (lpartselect -> pointer LBRACKET expression COLON expression RBRACKET .)


state 720

    (109) lpartselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .

    EQUALS          reduce using rule 109 (lpartselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    LE              reduce using rule 109 (lpartselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    RBRACE          reduce using rule 109 (lpartselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    COMMA           reduce using rule 109 (lpartselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)


state 721

    (110) lpartselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .

    EQUALS          reduce using rule 110 (lpartselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    LE              reduce using rule 110 (lpartselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    RBRACE          reduce using rule 110 (lpartselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    COMMA           reduce using rule 110 (lpartselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)


state 722

    (107) assignment -> ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON .

    ELSE            reduce using rule 107 (assignment -> ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON .)
    ENDGENERATE     reduce using rule 107 (assignment -> ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON .)
    IF              reduce using rule 107 (assignment -> ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON .)
    FOR             reduce using rule 107 (assignment -> ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON .)
    INTEGER         reduce using rule 107 (assignment -> ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON .)
    REAL            reduce using rule 107 (assignment -> ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON .)
    PARAMETER       reduce using rule 107 (assignment -> ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON .)
    LOCALPARAM      reduce using rule 107 (assignment -> ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON .)
    GENVAR          reduce using rule 107 (assignment -> ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON .)
    ASSIGN          reduce using rule 107 (assignment -> ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON .)
    ALWAYS          reduce using rule 107 (assignment -> ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON .)
    INITIAL         reduce using rule 107 (assignment -> ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON .)
    ID              reduce using rule 107 (assignment -> ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON .)
    SENS_OR         reduce using rule 107 (assignment -> ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON .)
    FUNCTION        reduce using rule 107 (assignment -> ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON .)
    TASK            reduce using rule 107 (assignment -> ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON .)
    LPAREN          reduce using rule 107 (assignment -> ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON .)
    INPUT           reduce using rule 107 (assignment -> ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON .)
    OUTPUT          reduce using rule 107 (assignment -> ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON .)
    INOUT           reduce using rule 107 (assignment -> ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON .)
    TRI             reduce using rule 107 (assignment -> ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON .)
    REG             reduce using rule 107 (assignment -> ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON .)
    WIRE            reduce using rule 107 (assignment -> ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON .)
    SIGNED          reduce using rule 107 (assignment -> ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON .)
    SUPPLY0         reduce using rule 107 (assignment -> ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON .)
    SUPPLY1         reduce using rule 107 (assignment -> ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON .)
    END             reduce using rule 107 (assignment -> ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON .)
    ENDMODULE       reduce using rule 107 (assignment -> ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON .)
    GENERATE        reduce using rule 107 (assignment -> ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON .)


state 723

    (111) lpartselect -> identifier LBRACKET expression COLON expression RBRACKET .

    EQUALS          reduce using rule 111 (lpartselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    LE              reduce using rule 111 (lpartselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    RBRACE          reduce using rule 111 (lpartselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    COMMA           reduce using rule 111 (lpartselect -> identifier LBRACKET expression COLON expression RBRACKET .)


state 724

    (112) lpartselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .

    EQUALS          reduce using rule 112 (lpartselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    LE              reduce using rule 112 (lpartselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    RBRACE          reduce using rule 112 (lpartselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    COMMA           reduce using rule 112 (lpartselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)


state 725

    (113) lpartselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .

    EQUALS          reduce using rule 113 (lpartselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    LE              reduce using rule 113 (lpartselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    RBRACE          reduce using rule 113 (lpartselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    COMMA           reduce using rule 113 (lpartselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)


state 726

    (54) length -> LBRACKET expression COLON expression RBRACKET .

    SEMICOLON       reduce using rule 54 (length -> LBRACKET expression COLON expression RBRACKET .)
    COMMA           reduce using rule 54 (length -> LBRACKET expression COLON expression RBRACKET .)


state 727

    (295) instance_body -> ID width LPAREN instance_ports RPAREN .

    SEMICOLON       reduce using rule 295 (instance_body -> ID width LPAREN instance_ports RPAREN .)
    COMMA           reduce using rule 295 (instance_body -> ID width LPAREN instance_ports RPAREN .)


state 728

    (319) instance_port_arg -> DOT ID LPAREN identifier RPAREN .

    COMMA           reduce using rule 319 (instance_port_arg -> DOT ID LPAREN identifier RPAREN .)
    RPAREN          reduce using rule 319 (instance_port_arg -> DOT ID LPAREN identifier RPAREN .)


state 729

    (320) instance_port_arg -> DOT ID LPAREN expression RPAREN .

    COMMA           reduce using rule 320 (instance_port_arg -> DOT ID LPAREN expression RPAREN .)
    RPAREN          reduce using rule 320 (instance_port_arg -> DOT ID LPAREN expression RPAREN .)


state 730

    (310) param_arg -> DOT ID LPAREN expression . RPAREN
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    RPAREN          shift and go to state 748
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147
    LT              shift and go to state 145
    GT              shift and go to state 149
    LE              shift and go to state 142
    GE              shift and go to state 153
    EQ              shift and go to state 156
    NE              shift and go to state 144
    EQL             shift and go to state 155
    NEL             shift and go to state 136
    AND             shift and go to state 157
    XOR             shift and go to state 150
    XNOR            shift and go to state 148
    OR              shift and go to state 159
    LAND            shift and go to state 154
    LOR             shift and go to state 138
    COND            shift and go to state 139


state 731

    (282) casecontent_statement -> DEFAULT COLON basic_statement .

    ENDCASE         reduce using rule 282 (casecontent_statement -> DEFAULT COLON basic_statement .)
    DEFAULT         reduce using rule 282 (casecontent_statement -> DEFAULT COLON basic_statement .)
    MINUS           reduce using rule 282 (casecontent_statement -> DEFAULT COLON basic_statement .)
    PLUS            reduce using rule 282 (casecontent_statement -> DEFAULT COLON basic_statement .)
    LNOT            reduce using rule 282 (casecontent_statement -> DEFAULT COLON basic_statement .)
    NOT             reduce using rule 282 (casecontent_statement -> DEFAULT COLON basic_statement .)
    AND             reduce using rule 282 (casecontent_statement -> DEFAULT COLON basic_statement .)
    NAND            reduce using rule 282 (casecontent_statement -> DEFAULT COLON basic_statement .)
    NOR             reduce using rule 282 (casecontent_statement -> DEFAULT COLON basic_statement .)
    OR              reduce using rule 282 (casecontent_statement -> DEFAULT COLON basic_statement .)
    XOR             reduce using rule 282 (casecontent_statement -> DEFAULT COLON basic_statement .)
    XNOR            reduce using rule 282 (casecontent_statement -> DEFAULT COLON basic_statement .)
    LPAREN          reduce using rule 282 (casecontent_statement -> DEFAULT COLON basic_statement .)
    LBRACE          reduce using rule 282 (casecontent_statement -> DEFAULT COLON basic_statement .)
    DOLLER          reduce using rule 282 (casecontent_statement -> DEFAULT COLON basic_statement .)
    ID              reduce using rule 282 (casecontent_statement -> DEFAULT COLON basic_statement .)
    INTNUMBER_DEC   reduce using rule 282 (casecontent_statement -> DEFAULT COLON basic_statement .)
    SIGNED_INTNUMBER_DEC reduce using rule 282 (casecontent_statement -> DEFAULT COLON basic_statement .)
    INTNUMBER_BIN   reduce using rule 282 (casecontent_statement -> DEFAULT COLON basic_statement .)
    SIGNED_INTNUMBER_BIN reduce using rule 282 (casecontent_statement -> DEFAULT COLON basic_statement .)
    INTNUMBER_OCT   reduce using rule 282 (casecontent_statement -> DEFAULT COLON basic_statement .)
    SIGNED_INTNUMBER_OCT reduce using rule 282 (casecontent_statement -> DEFAULT COLON basic_statement .)
    INTNUMBER_HEX   reduce using rule 282 (casecontent_statement -> DEFAULT COLON basic_statement .)
    SIGNED_INTNUMBER_HEX reduce using rule 282 (casecontent_statement -> DEFAULT COLON basic_statement .)
    FLOATNUMBER     reduce using rule 282 (casecontent_statement -> DEFAULT COLON basic_statement .)
    STRING_LITERAL  reduce using rule 282 (casecontent_statement -> DEFAULT COLON basic_statement .)


state 732

    (280) casecontent_condition -> casecontent_condition COMMA expression .
    (137) expression -> expression . POWER expression
    (138) expression -> expression . TIMES expression
    (139) expression -> expression . DIVIDE expression
    (140) expression -> expression . MOD expression
    (141) expression -> expression . PLUS expression
    (142) expression -> expression . MINUS expression
    (143) expression -> expression . LSHIFT expression
    (144) expression -> expression . RSHIFT expression
    (145) expression -> expression . LSHIFTA expression
    (146) expression -> expression . RSHIFTA expression
    (147) expression -> expression . LT expression
    (148) expression -> expression . GT expression
    (149) expression -> expression . LE expression
    (150) expression -> expression . GE expression
    (151) expression -> expression . EQ expression
    (152) expression -> expression . NE expression
    (153) expression -> expression . EQL expression
    (154) expression -> expression . NEL expression
    (155) expression -> expression . AND expression
    (156) expression -> expression . XOR expression
    (157) expression -> expression . XNOR expression
    (158) expression -> expression . OR expression
    (159) expression -> expression . LAND expression
    (160) expression -> expression . LOR expression
    (161) expression -> expression . COND expression COLON expression

    COLON           reduce using rule 280 (casecontent_condition -> casecontent_condition COMMA expression .)
    COMMA           reduce using rule 280 (casecontent_condition -> casecontent_condition COMMA expression .)
    POWER           shift and go to state 143
    TIMES           shift and go to state 271
    DIVIDE          shift and go to state 151
    MOD             shift and go to state 160
    PLUS            shift and go to state 146
    MINUS           shift and go to state 141
    LSHIFT          shift and go to state 140
    RSHIFT          shift and go to state 137
    LSHIFTA         shift and go to state 158
    RSHIFTA         shift and go to state 147
    LT              shift and go to state 145
    GT              shift and go to state 149
    LE              shift and go to state 142
    GE              shift and go to state 153
    EQ              shift and go to state 156
    NE              shift and go to state 144
    EQL             shift and go to state 155
    NEL             shift and go to state 136
    AND             shift and go to state 157
    XOR             shift and go to state 150
    XNOR            shift and go to state 148
    OR              shift and go to state 159
    LAND            shift and go to state 154
    LOR             shift and go to state 138
    COND            shift and go to state 139


state 733

    (279) casecontent_statement -> casecontent_condition COLON basic_statement .

    ENDCASE         reduce using rule 279 (casecontent_statement -> casecontent_condition COLON basic_statement .)
    DEFAULT         reduce using rule 279 (casecontent_statement -> casecontent_condition COLON basic_statement .)
    MINUS           reduce using rule 279 (casecontent_statement -> casecontent_condition COLON basic_statement .)
    PLUS            reduce using rule 279 (casecontent_statement -> casecontent_condition COLON basic_statement .)
    LNOT            reduce using rule 279 (casecontent_statement -> casecontent_condition COLON basic_statement .)
    NOT             reduce using rule 279 (casecontent_statement -> casecontent_condition COLON basic_statement .)
    AND             reduce using rule 279 (casecontent_statement -> casecontent_condition COLON basic_statement .)
    NAND            reduce using rule 279 (casecontent_statement -> casecontent_condition COLON basic_statement .)
    NOR             reduce using rule 279 (casecontent_statement -> casecontent_condition COLON basic_statement .)
    OR              reduce using rule 279 (casecontent_statement -> casecontent_condition COLON basic_statement .)
    XOR             reduce using rule 279 (casecontent_statement -> casecontent_condition COLON basic_statement .)
    XNOR            reduce using rule 279 (casecontent_statement -> casecontent_condition COLON basic_statement .)
    LPAREN          reduce using rule 279 (casecontent_statement -> casecontent_condition COLON basic_statement .)
    LBRACE          reduce using rule 279 (casecontent_statement -> casecontent_condition COLON basic_statement .)
    DOLLER          reduce using rule 279 (casecontent_statement -> casecontent_condition COLON basic_statement .)
    ID              reduce using rule 279 (casecontent_statement -> casecontent_condition COLON basic_statement .)
    INTNUMBER_DEC   reduce using rule 279 (casecontent_statement -> casecontent_condition COLON basic_statement .)
    SIGNED_INTNUMBER_DEC reduce using rule 279 (casecontent_statement -> casecontent_condition COLON basic_statement .)
    INTNUMBER_BIN   reduce using rule 279 (casecontent_statement -> casecontent_condition COLON basic_statement .)
    SIGNED_INTNUMBER_BIN reduce using rule 279 (casecontent_statement -> casecontent_condition COLON basic_statement .)
    INTNUMBER_OCT   reduce using rule 279 (casecontent_statement -> casecontent_condition COLON basic_statement .)
    SIGNED_INTNUMBER_OCT reduce using rule 279 (casecontent_statement -> casecontent_condition COLON basic_statement .)
    INTNUMBER_HEX   reduce using rule 279 (casecontent_statement -> casecontent_condition COLON basic_statement .)
    SIGNED_INTNUMBER_HEX reduce using rule 279 (casecontent_statement -> casecontent_condition COLON basic_statement .)
    FLOATNUMBER     reduce using rule 279 (casecontent_statement -> casecontent_condition COLON basic_statement .)
    STRING_LITERAL  reduce using rule 279 (casecontent_statement -> casecontent_condition COLON basic_statement .)


state 734

    (258) if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE . else_statement
    (263) else_statement -> . ifcontent_statement
    (261) ifcontent_statement -> . basic_statement
    (216) basic_statement -> . if_statement
    (217) basic_statement -> . case_statement
    (218) basic_statement -> . casex_statement
    (219) basic_statement -> . for_statement
    (220) basic_statement -> . while_statement
    (221) basic_statement -> . event_statement
    (222) basic_statement -> . wait_statement
    (223) basic_statement -> . forever_statement
    (224) basic_statement -> . block
    (225) basic_statement -> . namedblock
    (226) basic_statement -> . parallelblock
    (227) basic_statement -> . blocking_substitution
    (228) basic_statement -> . nonblocking_substitution
    (229) basic_statement -> . single_statement
    (256) if_statement -> . IF LPAREN cond RPAREN true_statement ELSE else_statement
    (257) if_statement -> . IF LPAREN cond RPAREN true_statement
    (258) if_statement -> . delays IF LPAREN cond RPAREN true_statement ELSE else_statement
    (259) if_statement -> . delays IF LPAREN cond RPAREN true_statement
    (274) case_statement -> . CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (275) casex_statement -> . CASEX LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (264) for_statement -> . FOR LPAREN forpre forcond forpost RPAREN forcontent_statement
    (272) while_statement -> . WHILE LPAREN cond RPAREN whilecontent_statement
    (285) event_statement -> . senslist SEMICOLON
    (286) wait_statement -> . WAIT LPAREN cond RPAREN waitcontent_statement
    (289) forever_statement -> . FOREVER basic_statement
    (239) block -> . BEGIN block_statements END
    (240) block -> . BEGIN END
    (244) namedblock -> . BEGIN COLON ID namedblock_statements END
    (245) namedblock -> . BEGIN COLON ID END
    (254) parallelblock -> . FORK block_statements JOIN
    (255) parallelblock -> . FORK JOIN
    (231) blocking_substitution -> . delays lvalue EQUALS delays rvalue SEMICOLON
    (233) nonblocking_substitution -> . delays lvalue LE delays rvalue SEMICOLON
    (390) single_statement -> . DELAY expression SEMICOLON
    (391) single_statement -> . systemcall SEMICOLON
    (392) single_statement -> . disable SEMICOLON
    (234) delays -> . DELAY LPAREN expression RPAREN
    (235) delays -> . DELAY identifier
    (236) delays -> . DELAY intnumber
    (237) delays -> . DELAY floatnumber
    (238) delays -> . empty
    (197) senslist -> . AT LPAREN edgesigs RPAREN
    (204) senslist -> . empty
    (205) senslist -> . AT levelsig
    (206) senslist -> . AT LPAREN levelsigs RPAREN
    (214) senslist -> . AT TIMES
    (215) senslist -> . AT LPAREN TIMES RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (389) disable -> . DISABLE ID
    (393) empty -> .

  ! shift/reduce conflict for IF resolved as shift
    IF              shift and go to state 195
    CASE            shift and go to state 173
    CASEX           shift and go to state 178
    FOR             shift and go to state 187
    WHILE           shift and go to state 171
    WAIT            shift and go to state 168
    FOREVER         shift and go to state 167
    BEGIN           shift and go to state 175
    FORK            shift and go to state 166
    DELAY           shift and go to state 170
    AT              shift and go to state 193
    DOLLER          shift and go to state 54
    DISABLE         shift and go to state 180
    LBRACE          reduce using rule 393 (empty -> .)
    ID              reduce using rule 393 (empty -> .)
    SEMICOLON       reduce using rule 393 (empty -> .)

  ! IF              [ reduce using rule 393 (empty -> .) ]

    parallelblock                  shift and go to state 169
    forever_statement              shift and go to state 172
    casex_statement                shift and go to state 174
    delays                         shift and go to state 176
    blocking_substitution          shift and go to state 177
    while_statement                shift and go to state 179
    systemcall                     shift and go to state 181
    if_statement                   shift and go to state 182
    nonblocking_substitution       shift and go to state 183
    empty                          shift and go to state 184
    basic_statement                shift and go to state 676
    for_statement                  shift and go to state 186
    event_statement                shift and go to state 189
    wait_statement                 shift and go to state 190
    case_statement                 shift and go to state 191
    disable                        shift and go to state 192
    ifcontent_statement            shift and go to state 738
    namedblock                     shift and go to state 194
    else_statement                 shift and go to state 749
    senslist                       shift and go to state 196
    block                          shift and go to state 198
    single_statement               shift and go to state 197

state 735

    (232) blocking_substitution_base -> delays lvalue EQUALS . delays rvalue
    (234) delays -> . DELAY LPAREN expression RPAREN
    (235) delays -> . DELAY identifier
    (236) delays -> . DELAY intnumber
    (237) delays -> . DELAY floatnumber
    (238) delays -> . empty
    (393) empty -> .

    DELAY           shift and go to state 230
    MINUS           reduce using rule 393 (empty -> .)
    PLUS            reduce using rule 393 (empty -> .)
    LNOT            reduce using rule 393 (empty -> .)
    NOT             reduce using rule 393 (empty -> .)
    AND             reduce using rule 393 (empty -> .)
    NAND            reduce using rule 393 (empty -> .)
    NOR             reduce using rule 393 (empty -> .)
    OR              reduce using rule 393 (empty -> .)
    XOR             reduce using rule 393 (empty -> .)
    XNOR            reduce using rule 393 (empty -> .)
    LPAREN          reduce using rule 393 (empty -> .)
    LBRACE          reduce using rule 393 (empty -> .)
    DOLLER          reduce using rule 393 (empty -> .)
    ID              reduce using rule 393 (empty -> .)
    INTNUMBER_DEC   reduce using rule 393 (empty -> .)
    SIGNED_INTNUMBER_DEC reduce using rule 393 (empty -> .)
    INTNUMBER_BIN   reduce using rule 393 (empty -> .)
    SIGNED_INTNUMBER_BIN reduce using rule 393 (empty -> .)
    INTNUMBER_OCT   reduce using rule 393 (empty -> .)
    SIGNED_INTNUMBER_OCT reduce using rule 393 (empty -> .)
    INTNUMBER_HEX   reduce using rule 393 (empty -> .)
    SIGNED_INTNUMBER_HEX reduce using rule 393 (empty -> .)
    FLOATNUMBER     reduce using rule 393 (empty -> .)
    STRING_LITERAL  reduce using rule 393 (empty -> .)

    delays                         shift and go to state 750
    empty                          shift and go to state 228

state 736

    (271) forcontent_statement -> basic_statement .

    ENDMODULE       reduce using rule 271 (forcontent_statement -> basic_statement .)
    GENERATE        reduce using rule 271 (forcontent_statement -> basic_statement .)
    INTEGER         reduce using rule 271 (forcontent_statement -> basic_statement .)
    REAL            reduce using rule 271 (forcontent_statement -> basic_statement .)
    PARAMETER       reduce using rule 271 (forcontent_statement -> basic_statement .)
    LOCALPARAM      reduce using rule 271 (forcontent_statement -> basic_statement .)
    GENVAR          reduce using rule 271 (forcontent_statement -> basic_statement .)
    ASSIGN          reduce using rule 271 (forcontent_statement -> basic_statement .)
    ALWAYS          reduce using rule 271 (forcontent_statement -> basic_statement .)
    INITIAL         reduce using rule 271 (forcontent_statement -> basic_statement .)
    ID              reduce using rule 271 (forcontent_statement -> basic_statement .)
    SENS_OR         reduce using rule 271 (forcontent_statement -> basic_statement .)
    FUNCTION        reduce using rule 271 (forcontent_statement -> basic_statement .)
    TASK            reduce using rule 271 (forcontent_statement -> basic_statement .)
    LPAREN          reduce using rule 271 (forcontent_statement -> basic_statement .)
    INPUT           reduce using rule 271 (forcontent_statement -> basic_statement .)
    OUTPUT          reduce using rule 271 (forcontent_statement -> basic_statement .)
    INOUT           reduce using rule 271 (forcontent_statement -> basic_statement .)
    TRI             reduce using rule 271 (forcontent_statement -> basic_statement .)
    REG             reduce using rule 271 (forcontent_statement -> basic_statement .)
    WIRE            reduce using rule 271 (forcontent_statement -> basic_statement .)
    SIGNED          reduce using rule 271 (forcontent_statement -> basic_statement .)
    SUPPLY0         reduce using rule 271 (forcontent_statement -> basic_statement .)
    SUPPLY1         reduce using rule 271 (forcontent_statement -> basic_statement .)
    ENDGENERATE     reduce using rule 271 (forcontent_statement -> basic_statement .)
    IF              reduce using rule 271 (forcontent_statement -> basic_statement .)
    FOR             reduce using rule 271 (forcontent_statement -> basic_statement .)
    ELSE            reduce using rule 271 (forcontent_statement -> basic_statement .)
    END             reduce using rule 271 (forcontent_statement -> basic_statement .)
    JOIN            reduce using rule 271 (forcontent_statement -> basic_statement .)
    CASE            reduce using rule 271 (forcontent_statement -> basic_statement .)
    CASEX           reduce using rule 271 (forcontent_statement -> basic_statement .)
    WHILE           reduce using rule 271 (forcontent_statement -> basic_statement .)
    WAIT            reduce using rule 271 (forcontent_statement -> basic_statement .)
    FOREVER         reduce using rule 271 (forcontent_statement -> basic_statement .)
    BEGIN           reduce using rule 271 (forcontent_statement -> basic_statement .)
    FORK            reduce using rule 271 (forcontent_statement -> basic_statement .)
    DELAY           reduce using rule 271 (forcontent_statement -> basic_statement .)
    AT              reduce using rule 271 (forcontent_statement -> basic_statement .)
    DOLLER          reduce using rule 271 (forcontent_statement -> basic_statement .)
    DISABLE         reduce using rule 271 (forcontent_statement -> basic_statement .)
    LBRACE          reduce using rule 271 (forcontent_statement -> basic_statement .)
    SEMICOLON       reduce using rule 271 (forcontent_statement -> basic_statement .)
    ENDTASK         reduce using rule 271 (forcontent_statement -> basic_statement .)
    ENDFUNCTION     reduce using rule 271 (forcontent_statement -> basic_statement .)
    ENDCASE         reduce using rule 271 (forcontent_statement -> basic_statement .)
    DEFAULT         reduce using rule 271 (forcontent_statement -> basic_statement .)
    MINUS           reduce using rule 271 (forcontent_statement -> basic_statement .)
    PLUS            reduce using rule 271 (forcontent_statement -> basic_statement .)
    LNOT            reduce using rule 271 (forcontent_statement -> basic_statement .)
    NOT             reduce using rule 271 (forcontent_statement -> basic_statement .)
    AND             reduce using rule 271 (forcontent_statement -> basic_statement .)
    NAND            reduce using rule 271 (forcontent_statement -> basic_statement .)
    NOR             reduce using rule 271 (forcontent_statement -> basic_statement .)
    OR              reduce using rule 271 (forcontent_statement -> basic_statement .)
    XOR             reduce using rule 271 (forcontent_statement -> basic_statement .)
    XNOR            reduce using rule 271 (forcontent_statement -> basic_statement .)
    INTNUMBER_DEC   reduce using rule 271 (forcontent_statement -> basic_statement .)
    SIGNED_INTNUMBER_DEC reduce using rule 271 (forcontent_statement -> basic_statement .)
    INTNUMBER_BIN   reduce using rule 271 (forcontent_statement -> basic_statement .)
    SIGNED_INTNUMBER_BIN reduce using rule 271 (forcontent_statement -> basic_statement .)
    INTNUMBER_OCT   reduce using rule 271 (forcontent_statement -> basic_statement .)
    SIGNED_INTNUMBER_OCT reduce using rule 271 (forcontent_statement -> basic_statement .)
    INTNUMBER_HEX   reduce using rule 271 (forcontent_statement -> basic_statement .)
    SIGNED_INTNUMBER_HEX reduce using rule 271 (forcontent_statement -> basic_statement .)
    FLOATNUMBER     reduce using rule 271 (forcontent_statement -> basic_statement .)
    STRING_LITERAL  reduce using rule 271 (forcontent_statement -> basic_statement .)


state 737

    (264) for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .

    END             reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    INTEGER         reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    REAL            reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    PARAMETER       reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    LOCALPARAM      reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    IF              reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    CASE            reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    CASEX           reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    FOR             reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    WHILE           reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    WAIT            reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    FOREVER         reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    BEGIN           reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    FORK            reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    DELAY           reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    AT              reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    DOLLER          reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    DISABLE         reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    INPUT           reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    OUTPUT          reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    INOUT           reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    TRI             reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    REG             reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    WIRE            reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    SIGNED          reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    SUPPLY0         reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    SUPPLY1         reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    LBRACE          reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    ID              reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    SEMICOLON       reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    ENDMODULE       reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    GENERATE        reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    GENVAR          reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    ASSIGN          reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    ALWAYS          reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    INITIAL         reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    SENS_OR         reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    FUNCTION        reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    TASK            reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    LPAREN          reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    ENDGENERATE     reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    ELSE            reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    JOIN            reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    ENDTASK         reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    ENDFUNCTION     reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    ENDCASE         reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    DEFAULT         reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    MINUS           reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    PLUS            reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    LNOT            reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    NOT             reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    AND             reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    NAND            reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    NOR             reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    OR              reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    XOR             reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    XNOR            reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    INTNUMBER_DEC   reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    SIGNED_INTNUMBER_DEC reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    INTNUMBER_BIN   reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    SIGNED_INTNUMBER_BIN reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    INTNUMBER_OCT   reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    SIGNED_INTNUMBER_OCT reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    INTNUMBER_HEX   reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    SIGNED_INTNUMBER_HEX reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    FLOATNUMBER     reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    STRING_LITERAL  reduce using rule 264 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)


state 738

    (263) else_statement -> ifcontent_statement .

    ENDMODULE       reduce using rule 263 (else_statement -> ifcontent_statement .)
    GENERATE        reduce using rule 263 (else_statement -> ifcontent_statement .)
    INTEGER         reduce using rule 263 (else_statement -> ifcontent_statement .)
    REAL            reduce using rule 263 (else_statement -> ifcontent_statement .)
    PARAMETER       reduce using rule 263 (else_statement -> ifcontent_statement .)
    LOCALPARAM      reduce using rule 263 (else_statement -> ifcontent_statement .)
    GENVAR          reduce using rule 263 (else_statement -> ifcontent_statement .)
    ASSIGN          reduce using rule 263 (else_statement -> ifcontent_statement .)
    ALWAYS          reduce using rule 263 (else_statement -> ifcontent_statement .)
    INITIAL         reduce using rule 263 (else_statement -> ifcontent_statement .)
    ID              reduce using rule 263 (else_statement -> ifcontent_statement .)
    SENS_OR         reduce using rule 263 (else_statement -> ifcontent_statement .)
    FUNCTION        reduce using rule 263 (else_statement -> ifcontent_statement .)
    TASK            reduce using rule 263 (else_statement -> ifcontent_statement .)
    LPAREN          reduce using rule 263 (else_statement -> ifcontent_statement .)
    INPUT           reduce using rule 263 (else_statement -> ifcontent_statement .)
    OUTPUT          reduce using rule 263 (else_statement -> ifcontent_statement .)
    INOUT           reduce using rule 263 (else_statement -> ifcontent_statement .)
    TRI             reduce using rule 263 (else_statement -> ifcontent_statement .)
    REG             reduce using rule 263 (else_statement -> ifcontent_statement .)
    WIRE            reduce using rule 263 (else_statement -> ifcontent_statement .)
    SIGNED          reduce using rule 263 (else_statement -> ifcontent_statement .)
    SUPPLY0         reduce using rule 263 (else_statement -> ifcontent_statement .)
    SUPPLY1         reduce using rule 263 (else_statement -> ifcontent_statement .)
    ENDGENERATE     reduce using rule 263 (else_statement -> ifcontent_statement .)
    IF              reduce using rule 263 (else_statement -> ifcontent_statement .)
    FOR             reduce using rule 263 (else_statement -> ifcontent_statement .)
    ELSE            reduce using rule 263 (else_statement -> ifcontent_statement .)
    END             reduce using rule 263 (else_statement -> ifcontent_statement .)
    JOIN            reduce using rule 263 (else_statement -> ifcontent_statement .)
    CASE            reduce using rule 263 (else_statement -> ifcontent_statement .)
    CASEX           reduce using rule 263 (else_statement -> ifcontent_statement .)
    WHILE           reduce using rule 263 (else_statement -> ifcontent_statement .)
    WAIT            reduce using rule 263 (else_statement -> ifcontent_statement .)
    FOREVER         reduce using rule 263 (else_statement -> ifcontent_statement .)
    BEGIN           reduce using rule 263 (else_statement -> ifcontent_statement .)
    FORK            reduce using rule 263 (else_statement -> ifcontent_statement .)
    DELAY           reduce using rule 263 (else_statement -> ifcontent_statement .)
    AT              reduce using rule 263 (else_statement -> ifcontent_statement .)
    DOLLER          reduce using rule 263 (else_statement -> ifcontent_statement .)
    DISABLE         reduce using rule 263 (else_statement -> ifcontent_statement .)
    LBRACE          reduce using rule 263 (else_statement -> ifcontent_statement .)
    SEMICOLON       reduce using rule 263 (else_statement -> ifcontent_statement .)
    ENDTASK         reduce using rule 263 (else_statement -> ifcontent_statement .)
    ENDFUNCTION     reduce using rule 263 (else_statement -> ifcontent_statement .)
    ENDCASE         reduce using rule 263 (else_statement -> ifcontent_statement .)
    DEFAULT         reduce using rule 263 (else_statement -> ifcontent_statement .)
    MINUS           reduce using rule 263 (else_statement -> ifcontent_statement .)
    PLUS            reduce using rule 263 (else_statement -> ifcontent_statement .)
    LNOT            reduce using rule 263 (else_statement -> ifcontent_statement .)
    NOT             reduce using rule 263 (else_statement -> ifcontent_statement .)
    AND             reduce using rule 263 (else_statement -> ifcontent_statement .)
    NAND            reduce using rule 263 (else_statement -> ifcontent_statement .)
    NOR             reduce using rule 263 (else_statement -> ifcontent_statement .)
    OR              reduce using rule 263 (else_statement -> ifcontent_statement .)
    XOR             reduce using rule 263 (else_statement -> ifcontent_statement .)
    XNOR            reduce using rule 263 (else_statement -> ifcontent_statement .)
    INTNUMBER_DEC   reduce using rule 263 (else_statement -> ifcontent_statement .)
    SIGNED_INTNUMBER_DEC reduce using rule 263 (else_statement -> ifcontent_statement .)
    INTNUMBER_BIN   reduce using rule 263 (else_statement -> ifcontent_statement .)
    SIGNED_INTNUMBER_BIN reduce using rule 263 (else_statement -> ifcontent_statement .)
    INTNUMBER_OCT   reduce using rule 263 (else_statement -> ifcontent_statement .)
    SIGNED_INTNUMBER_OCT reduce using rule 263 (else_statement -> ifcontent_statement .)
    INTNUMBER_HEX   reduce using rule 263 (else_statement -> ifcontent_statement .)
    SIGNED_INTNUMBER_HEX reduce using rule 263 (else_statement -> ifcontent_statement .)
    FLOATNUMBER     reduce using rule 263 (else_statement -> ifcontent_statement .)
    STRING_LITERAL  reduce using rule 263 (else_statement -> ifcontent_statement .)


state 739

    (256) if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .

    JOIN            reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    IF              reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    CASE            reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    CASEX           reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    FOR             reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    WHILE           reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    WAIT            reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    FOREVER         reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    BEGIN           reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    FORK            reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    DELAY           reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    AT              reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    DOLLER          reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    DISABLE         reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    LBRACE          reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    ID              reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    SEMICOLON       reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    ENDMODULE       reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    GENERATE        reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    INTEGER         reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    REAL            reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    PARAMETER       reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    LOCALPARAM      reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    GENVAR          reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    ASSIGN          reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    ALWAYS          reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    INITIAL         reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    SENS_OR         reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    FUNCTION        reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    TASK            reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    LPAREN          reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    INPUT           reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    OUTPUT          reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    INOUT           reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    TRI             reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    REG             reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    WIRE            reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    SIGNED          reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    SUPPLY0         reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    SUPPLY1         reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    ENDGENERATE     reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    ELSE            reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    END             reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    ENDTASK         reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    ENDFUNCTION     reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    ENDCASE         reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    DEFAULT         reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    MINUS           reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    PLUS            reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    LNOT            reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    NOT             reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    AND             reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    NAND            reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    NOR             reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    OR              reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    XOR             reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    XNOR            reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    INTNUMBER_DEC   reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    SIGNED_INTNUMBER_DEC reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    INTNUMBER_BIN   reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    SIGNED_INTNUMBER_BIN reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    INTNUMBER_OCT   reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    SIGNED_INTNUMBER_OCT reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    INTNUMBER_HEX   reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    SIGNED_INTNUMBER_HEX reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    FLOATNUMBER     reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    STRING_LITERAL  reduce using rule 256 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)


state 740

    (343) generate_forcontent -> generate_block .

    ELSE            reduce using rule 343 (generate_forcontent -> generate_block .)
    ENDGENERATE     reduce using rule 343 (generate_forcontent -> generate_block .)
    IF              reduce using rule 343 (generate_forcontent -> generate_block .)
    FOR             reduce using rule 343 (generate_forcontent -> generate_block .)
    INTEGER         reduce using rule 343 (generate_forcontent -> generate_block .)
    REAL            reduce using rule 343 (generate_forcontent -> generate_block .)
    PARAMETER       reduce using rule 343 (generate_forcontent -> generate_block .)
    LOCALPARAM      reduce using rule 343 (generate_forcontent -> generate_block .)
    GENVAR          reduce using rule 343 (generate_forcontent -> generate_block .)
    ASSIGN          reduce using rule 343 (generate_forcontent -> generate_block .)
    ALWAYS          reduce using rule 343 (generate_forcontent -> generate_block .)
    INITIAL         reduce using rule 343 (generate_forcontent -> generate_block .)
    ID              reduce using rule 343 (generate_forcontent -> generate_block .)
    SENS_OR         reduce using rule 343 (generate_forcontent -> generate_block .)
    FUNCTION        reduce using rule 343 (generate_forcontent -> generate_block .)
    TASK            reduce using rule 343 (generate_forcontent -> generate_block .)
    LPAREN          reduce using rule 343 (generate_forcontent -> generate_block .)
    INPUT           reduce using rule 343 (generate_forcontent -> generate_block .)
    OUTPUT          reduce using rule 343 (generate_forcontent -> generate_block .)
    INOUT           reduce using rule 343 (generate_forcontent -> generate_block .)
    TRI             reduce using rule 343 (generate_forcontent -> generate_block .)
    REG             reduce using rule 343 (generate_forcontent -> generate_block .)
    WIRE            reduce using rule 343 (generate_forcontent -> generate_block .)
    SIGNED          reduce using rule 343 (generate_forcontent -> generate_block .)
    SUPPLY0         reduce using rule 343 (generate_forcontent -> generate_block .)
    SUPPLY1         reduce using rule 343 (generate_forcontent -> generate_block .)
    END             reduce using rule 343 (generate_forcontent -> generate_block .)


state 741

    (342) generate_forcontent -> generate_item .

    ELSE            reduce using rule 342 (generate_forcontent -> generate_item .)
    ENDGENERATE     reduce using rule 342 (generate_forcontent -> generate_item .)
    IF              reduce using rule 342 (generate_forcontent -> generate_item .)
    FOR             reduce using rule 342 (generate_forcontent -> generate_item .)
    INTEGER         reduce using rule 342 (generate_forcontent -> generate_item .)
    REAL            reduce using rule 342 (generate_forcontent -> generate_item .)
    PARAMETER       reduce using rule 342 (generate_forcontent -> generate_item .)
    LOCALPARAM      reduce using rule 342 (generate_forcontent -> generate_item .)
    GENVAR          reduce using rule 342 (generate_forcontent -> generate_item .)
    ASSIGN          reduce using rule 342 (generate_forcontent -> generate_item .)
    ALWAYS          reduce using rule 342 (generate_forcontent -> generate_item .)
    INITIAL         reduce using rule 342 (generate_forcontent -> generate_item .)
    ID              reduce using rule 342 (generate_forcontent -> generate_item .)
    SENS_OR         reduce using rule 342 (generate_forcontent -> generate_item .)
    FUNCTION        reduce using rule 342 (generate_forcontent -> generate_item .)
    TASK            reduce using rule 342 (generate_forcontent -> generate_item .)
    LPAREN          reduce using rule 342 (generate_forcontent -> generate_item .)
    INPUT           reduce using rule 342 (generate_forcontent -> generate_item .)
    OUTPUT          reduce using rule 342 (generate_forcontent -> generate_item .)
    INOUT           reduce using rule 342 (generate_forcontent -> generate_item .)
    TRI             reduce using rule 342 (generate_forcontent -> generate_item .)
    REG             reduce using rule 342 (generate_forcontent -> generate_item .)
    WIRE            reduce using rule 342 (generate_forcontent -> generate_item .)
    SIGNED          reduce using rule 342 (generate_forcontent -> generate_item .)
    SUPPLY0         reduce using rule 342 (generate_forcontent -> generate_item .)
    SUPPLY1         reduce using rule 342 (generate_forcontent -> generate_item .)
    END             reduce using rule 342 (generate_forcontent -> generate_item .)


state 742

    (341) generate_for -> FOR LPAREN forpre forcond forpost RPAREN generate_forcontent .

    ENDGENERATE     reduce using rule 341 (generate_for -> FOR LPAREN forpre forcond forpost RPAREN generate_forcontent .)
    IF              reduce using rule 341 (generate_for -> FOR LPAREN forpre forcond forpost RPAREN generate_forcontent .)
    FOR             reduce using rule 341 (generate_for -> FOR LPAREN forpre forcond forpost RPAREN generate_forcontent .)
    INTEGER         reduce using rule 341 (generate_for -> FOR LPAREN forpre forcond forpost RPAREN generate_forcontent .)
    REAL            reduce using rule 341 (generate_for -> FOR LPAREN forpre forcond forpost RPAREN generate_forcontent .)
    PARAMETER       reduce using rule 341 (generate_for -> FOR LPAREN forpre forcond forpost RPAREN generate_forcontent .)
    LOCALPARAM      reduce using rule 341 (generate_for -> FOR LPAREN forpre forcond forpost RPAREN generate_forcontent .)
    GENVAR          reduce using rule 341 (generate_for -> FOR LPAREN forpre forcond forpost RPAREN generate_forcontent .)
    ASSIGN          reduce using rule 341 (generate_for -> FOR LPAREN forpre forcond forpost RPAREN generate_forcontent .)
    ALWAYS          reduce using rule 341 (generate_for -> FOR LPAREN forpre forcond forpost RPAREN generate_forcontent .)
    INITIAL         reduce using rule 341 (generate_for -> FOR LPAREN forpre forcond forpost RPAREN generate_forcontent .)
    ID              reduce using rule 341 (generate_for -> FOR LPAREN forpre forcond forpost RPAREN generate_forcontent .)
    SENS_OR         reduce using rule 341 (generate_for -> FOR LPAREN forpre forcond forpost RPAREN generate_forcontent .)
    FUNCTION        reduce using rule 341 (generate_for -> FOR LPAREN forpre forcond forpost RPAREN generate_forcontent .)
    TASK            reduce using rule 341 (generate_for -> FOR LPAREN forpre forcond forpost RPAREN generate_forcontent .)
    LPAREN          reduce using rule 341 (generate_for -> FOR LPAREN forpre forcond forpost RPAREN generate_forcontent .)
    INPUT           reduce using rule 341 (generate_for -> FOR LPAREN forpre forcond forpost RPAREN generate_forcontent .)
    OUTPUT          reduce using rule 341 (generate_for -> FOR LPAREN forpre forcond forpost RPAREN generate_forcontent .)
    INOUT           reduce using rule 341 (generate_for -> FOR LPAREN forpre forcond forpost RPAREN generate_forcontent .)
    TRI             reduce using rule 341 (generate_for -> FOR LPAREN forpre forcond forpost RPAREN generate_forcontent .)
    REG             reduce using rule 341 (generate_for -> FOR LPAREN forpre forcond forpost RPAREN generate_forcontent .)
    WIRE            reduce using rule 341 (generate_for -> FOR LPAREN forpre forcond forpost RPAREN generate_forcontent .)
    SIGNED          reduce using rule 341 (generate_for -> FOR LPAREN forpre forcond forpost RPAREN generate_forcontent .)
    SUPPLY0         reduce using rule 341 (generate_for -> FOR LPAREN forpre forcond forpost RPAREN generate_forcontent .)
    SUPPLY1         reduce using rule 341 (generate_for -> FOR LPAREN forpre forcond forpost RPAREN generate_forcontent .)
    ELSE            reduce using rule 341 (generate_for -> FOR LPAREN forpre forcond forpost RPAREN generate_forcontent .)
    END             reduce using rule 341 (generate_for -> FOR LPAREN forpre forcond forpost RPAREN generate_forcontent .)


state 743

    (334) generate_block -> BEGIN COLON ID . generate_items END
    (327) generate_items -> . empty
    (328) generate_items -> . generate_items generate_item
    (329) generate_items -> . generate_item
    (393) empty -> .
    (330) generate_item -> . standard_item
    (331) generate_item -> . generate_if
    (332) generate_item -> . generate_for
    (60) standard_item -> . decl
    (61) standard_item -> . integerdecl
    (62) standard_item -> . realdecl
    (63) standard_item -> . declassign
    (64) standard_item -> . parameterdecl
    (65) standard_item -> . localparamdecl
    (66) standard_item -> . genvardecl
    (67) standard_item -> . assignment
    (68) standard_item -> . always
    (69) standard_item -> . initial
    (70) standard_item -> . instance
    (71) standard_item -> . function
    (72) standard_item -> . task
    (73) standard_item -> . pragma
    (335) generate_if -> . IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item
    (336) generate_if -> . IF LPAREN cond RPAREN gif_true_item
    (341) generate_for -> . FOR LPAREN forpre forcond forpost RPAREN generate_forcontent
    (74) decl -> . sigtypes declnamelist SEMICOLON
    (75) decl -> . sigtypes width declnamelist SEMICOLON
    (84) integerdecl -> . INTEGER integernamelist SEMICOLON
    (85) integerdecl -> . INTEGER SIGNED integernamelist SEMICOLON
    (89) realdecl -> . REAL realnamelist SEMICOLON
    (80) declassign -> . sigtypes declassign_element SEMICOLON
    (81) declassign -> . sigtypes width declassign_element SEMICOLON
    (93) parameterdecl -> . PARAMETER param_substitution_list SEMICOLON
    (94) parameterdecl -> . PARAMETER SIGNED param_substitution_list SEMICOLON
    (95) parameterdecl -> . PARAMETER width param_substitution_list SEMICOLON
    (96) parameterdecl -> . PARAMETER SIGNED width param_substitution_list SEMICOLON
    (97) parameterdecl -> . PARAMETER INTEGER param_substitution_list SEMICOLON
    (98) localparamdecl -> . LOCALPARAM param_substitution_list SEMICOLON
    (99) localparamdecl -> . LOCALPARAM SIGNED param_substitution_list SEMICOLON
    (100) localparamdecl -> . LOCALPARAM width param_substitution_list SEMICOLON
    (101) localparamdecl -> . LOCALPARAM SIGNED width param_substitution_list SEMICOLON
    (102) localparamdecl -> . LOCALPARAM INTEGER param_substitution_list SEMICOLON
    (322) genvardecl -> . GENVAR genvarlist SEMICOLON
    (106) assignment -> . ASSIGN lvalue EQUALS rvalue SEMICOLON
    (107) assignment -> . ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON
    (196) always -> . ALWAYS senslist always_statement
    (283) initial -> . INITIAL initial_statement
    (290) instance -> . ID parameterlist instance_bodylist SEMICOLON
    (291) instance -> . SENS_OR parameterlist instance_bodylist SEMICOLON
    (296) instance -> . ID instance_bodylist_noname SEMICOLON
    (297) instance -> . SENS_OR instance_bodylist_noname SEMICOLON
    (351) function -> . FUNCTION width ID SEMICOLON function_statement ENDFUNCTION
    (352) function -> . FUNCTION ID SEMICOLON function_statement ENDFUNCTION
    (370) task -> . TASK ID SEMICOLON task_statement ENDTASK
    (7) pragma -> . LPAREN TIMES ID EQUALS expression TIMES RPAREN
    (8) pragma -> . LPAREN TIMES ID TIMES RPAREN
    (35) sigtypes -> . sigtypes sigtype
    (36) sigtypes -> . sigtype
    (37) sigtype -> . INPUT
    (38) sigtype -> . OUTPUT
    (39) sigtype -> . INOUT
    (40) sigtype -> . TRI
    (41) sigtype -> . REG
    (42) sigtype -> . WIRE
    (43) sigtype -> . SIGNED
    (44) sigtype -> . SUPPLY0
    (45) sigtype -> . SUPPLY1

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for REAL resolved as shift
  ! shift/reduce conflict for PARAMETER resolved as shift
  ! shift/reduce conflict for LOCALPARAM resolved as shift
  ! shift/reduce conflict for GENVAR resolved as shift
  ! shift/reduce conflict for ASSIGN resolved as shift
  ! shift/reduce conflict for ALWAYS resolved as shift
  ! shift/reduce conflict for INITIAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SENS_OR resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for TASK resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for OUTPUT resolved as shift
  ! shift/reduce conflict for INOUT resolved as shift
  ! shift/reduce conflict for TRI resolved as shift
  ! shift/reduce conflict for REG resolved as shift
  ! shift/reduce conflict for WIRE resolved as shift
  ! shift/reduce conflict for SIGNED resolved as shift
  ! shift/reduce conflict for SUPPLY0 resolved as shift
  ! shift/reduce conflict for SUPPLY1 resolved as shift
    END             reduce using rule 393 (empty -> .)
    IF              shift and go to state 217
    FOR             shift and go to state 215
    INTEGER         shift and go to state 83
    REAL            shift and go to state 63
    PARAMETER       shift and go to state 70
    LOCALPARAM      shift and go to state 101
    GENVAR          shift and go to state 69
    ASSIGN          shift and go to state 85
    ALWAYS          shift and go to state 68
    INITIAL         shift and go to state 66
    ID              shift and go to state 92
    SENS_OR         shift and go to state 99
    FUNCTION        shift and go to state 93
    TASK            shift and go to state 90
    LPAREN          shift and go to state 2
    INPUT           shift and go to state 91
    OUTPUT          shift and go to state 96
    INOUT           shift and go to state 72
    TRI             shift and go to state 89
    REG             shift and go to state 67
    WIRE            shift and go to state 104
    SIGNED          shift and go to state 98
    SUPPLY0         shift and go to state 79
    SUPPLY1         shift and go to state 80

  ! IF              [ reduce using rule 393 (empty -> .) ]
  ! FOR             [ reduce using rule 393 (empty -> .) ]
  ! INTEGER         [ reduce using rule 393 (empty -> .) ]
  ! REAL            [ reduce using rule 393 (empty -> .) ]
  ! PARAMETER       [ reduce using rule 393 (empty -> .) ]
  ! LOCALPARAM      [ reduce using rule 393 (empty -> .) ]
  ! GENVAR          [ reduce using rule 393 (empty -> .) ]
  ! ASSIGN          [ reduce using rule 393 (empty -> .) ]
  ! ALWAYS          [ reduce using rule 393 (empty -> .) ]
  ! INITIAL         [ reduce using rule 393 (empty -> .) ]
  ! ID              [ reduce using rule 393 (empty -> .) ]
  ! SENS_OR         [ reduce using rule 393 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 393 (empty -> .) ]
  ! TASK            [ reduce using rule 393 (empty -> .) ]
  ! LPAREN          [ reduce using rule 393 (empty -> .) ]
  ! INPUT           [ reduce using rule 393 (empty -> .) ]
  ! OUTPUT          [ reduce using rule 393 (empty -> .) ]
  ! INOUT           [ reduce using rule 393 (empty -> .) ]
  ! TRI             [ reduce using rule 393 (empty -> .) ]
  ! REG             [ reduce using rule 393 (empty -> .) ]
  ! WIRE            [ reduce using rule 393 (empty -> .) ]
  ! SIGNED          [ reduce using rule 393 (empty -> .) ]
  ! SUPPLY0         [ reduce using rule 393 (empty -> .) ]
  ! SUPPLY1         [ reduce using rule 393 (empty -> .) ]

    decl                           shift and go to state 62
    localparamdecl                 shift and go to state 64
    declassign                     shift and go to state 65
    generate_for                   shift and go to state 211
    integerdecl                    shift and go to state 71
    standard_item                  shift and go to state 212
    genvardecl                     shift and go to state 74
    sigtype                        shift and go to state 75
    initial                        shift and go to state 76
    instance                       shift and go to state 78
    sigtypes                       shift and go to state 88
    realdecl                       shift and go to state 82
    parameterdecl                  shift and go to state 84
    empty                          shift and go to state 213
    function                       shift and go to state 87
    generate_items                 shift and go to state 751
    assignment                     shift and go to state 81
    pragma                         shift and go to state 102
    generate_item                  shift and go to state 216
    task                           shift and go to state 95
    always                         shift and go to state 97
    generate_if                    shift and go to state 218

state 744

    (333) generate_block -> BEGIN generate_items END .

    ELSE            reduce using rule 333 (generate_block -> BEGIN generate_items END .)
    ENDGENERATE     reduce using rule 333 (generate_block -> BEGIN generate_items END .)
    IF              reduce using rule 333 (generate_block -> BEGIN generate_items END .)
    FOR             reduce using rule 333 (generate_block -> BEGIN generate_items END .)
    INTEGER         reduce using rule 333 (generate_block -> BEGIN generate_items END .)
    REAL            reduce using rule 333 (generate_block -> BEGIN generate_items END .)
    PARAMETER       reduce using rule 333 (generate_block -> BEGIN generate_items END .)
    LOCALPARAM      reduce using rule 333 (generate_block -> BEGIN generate_items END .)
    GENVAR          reduce using rule 333 (generate_block -> BEGIN generate_items END .)
    ASSIGN          reduce using rule 333 (generate_block -> BEGIN generate_items END .)
    ALWAYS          reduce using rule 333 (generate_block -> BEGIN generate_items END .)
    INITIAL         reduce using rule 333 (generate_block -> BEGIN generate_items END .)
    ID              reduce using rule 333 (generate_block -> BEGIN generate_items END .)
    SENS_OR         reduce using rule 333 (generate_block -> BEGIN generate_items END .)
    FUNCTION        reduce using rule 333 (generate_block -> BEGIN generate_items END .)
    TASK            reduce using rule 333 (generate_block -> BEGIN generate_items END .)
    LPAREN          reduce using rule 333 (generate_block -> BEGIN generate_items END .)
    INPUT           reduce using rule 333 (generate_block -> BEGIN generate_items END .)
    OUTPUT          reduce using rule 333 (generate_block -> BEGIN generate_items END .)
    INOUT           reduce using rule 333 (generate_block -> BEGIN generate_items END .)
    TRI             reduce using rule 333 (generate_block -> BEGIN generate_items END .)
    REG             reduce using rule 333 (generate_block -> BEGIN generate_items END .)
    WIRE            reduce using rule 333 (generate_block -> BEGIN generate_items END .)
    SIGNED          reduce using rule 333 (generate_block -> BEGIN generate_items END .)
    SUPPLY0         reduce using rule 333 (generate_block -> BEGIN generate_items END .)
    SUPPLY1         reduce using rule 333 (generate_block -> BEGIN generate_items END .)
    END             reduce using rule 333 (generate_block -> BEGIN generate_items END .)


state 745

    (339) gif_false_item -> generate_item .

    ELSE            reduce using rule 339 (gif_false_item -> generate_item .)
    ENDGENERATE     reduce using rule 339 (gif_false_item -> generate_item .)
    IF              reduce using rule 339 (gif_false_item -> generate_item .)
    FOR             reduce using rule 339 (gif_false_item -> generate_item .)
    INTEGER         reduce using rule 339 (gif_false_item -> generate_item .)
    REAL            reduce using rule 339 (gif_false_item -> generate_item .)
    PARAMETER       reduce using rule 339 (gif_false_item -> generate_item .)
    LOCALPARAM      reduce using rule 339 (gif_false_item -> generate_item .)
    GENVAR          reduce using rule 339 (gif_false_item -> generate_item .)
    ASSIGN          reduce using rule 339 (gif_false_item -> generate_item .)
    ALWAYS          reduce using rule 339 (gif_false_item -> generate_item .)
    INITIAL         reduce using rule 339 (gif_false_item -> generate_item .)
    ID              reduce using rule 339 (gif_false_item -> generate_item .)
    SENS_OR         reduce using rule 339 (gif_false_item -> generate_item .)
    FUNCTION        reduce using rule 339 (gif_false_item -> generate_item .)
    TASK            reduce using rule 339 (gif_false_item -> generate_item .)
    LPAREN          reduce using rule 339 (gif_false_item -> generate_item .)
    INPUT           reduce using rule 339 (gif_false_item -> generate_item .)
    OUTPUT          reduce using rule 339 (gif_false_item -> generate_item .)
    INOUT           reduce using rule 339 (gif_false_item -> generate_item .)
    TRI             reduce using rule 339 (gif_false_item -> generate_item .)
    REG             reduce using rule 339 (gif_false_item -> generate_item .)
    WIRE            reduce using rule 339 (gif_false_item -> generate_item .)
    SIGNED          reduce using rule 339 (gif_false_item -> generate_item .)
    SUPPLY0         reduce using rule 339 (gif_false_item -> generate_item .)
    SUPPLY1         reduce using rule 339 (gif_false_item -> generate_item .)
    END             reduce using rule 339 (gif_false_item -> generate_item .)


state 746

    (340) gif_false_item -> generate_block .

    ELSE            reduce using rule 340 (gif_false_item -> generate_block .)
    ENDGENERATE     reduce using rule 340 (gif_false_item -> generate_block .)
    IF              reduce using rule 340 (gif_false_item -> generate_block .)
    FOR             reduce using rule 340 (gif_false_item -> generate_block .)
    INTEGER         reduce using rule 340 (gif_false_item -> generate_block .)
    REAL            reduce using rule 340 (gif_false_item -> generate_block .)
    PARAMETER       reduce using rule 340 (gif_false_item -> generate_block .)
    LOCALPARAM      reduce using rule 340 (gif_false_item -> generate_block .)
    GENVAR          reduce using rule 340 (gif_false_item -> generate_block .)
    ASSIGN          reduce using rule 340 (gif_false_item -> generate_block .)
    ALWAYS          reduce using rule 340 (gif_false_item -> generate_block .)
    INITIAL         reduce using rule 340 (gif_false_item -> generate_block .)
    ID              reduce using rule 340 (gif_false_item -> generate_block .)
    SENS_OR         reduce using rule 340 (gif_false_item -> generate_block .)
    FUNCTION        reduce using rule 340 (gif_false_item -> generate_block .)
    TASK            reduce using rule 340 (gif_false_item -> generate_block .)
    LPAREN          reduce using rule 340 (gif_false_item -> generate_block .)
    INPUT           reduce using rule 340 (gif_false_item -> generate_block .)
    OUTPUT          reduce using rule 340 (gif_false_item -> generate_block .)
    INOUT           reduce using rule 340 (gif_false_item -> generate_block .)
    TRI             reduce using rule 340 (gif_false_item -> generate_block .)
    REG             reduce using rule 340 (gif_false_item -> generate_block .)
    WIRE            reduce using rule 340 (gif_false_item -> generate_block .)
    SIGNED          reduce using rule 340 (gif_false_item -> generate_block .)
    SUPPLY0         reduce using rule 340 (gif_false_item -> generate_block .)
    SUPPLY1         reduce using rule 340 (gif_false_item -> generate_block .)
    END             reduce using rule 340 (gif_false_item -> generate_block .)


state 747

    (335) generate_if -> IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item .

    ELSE            reduce using rule 335 (generate_if -> IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item .)
    ENDGENERATE     reduce using rule 335 (generate_if -> IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item .)
    IF              reduce using rule 335 (generate_if -> IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item .)
    FOR             reduce using rule 335 (generate_if -> IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item .)
    INTEGER         reduce using rule 335 (generate_if -> IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item .)
    REAL            reduce using rule 335 (generate_if -> IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item .)
    PARAMETER       reduce using rule 335 (generate_if -> IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item .)
    LOCALPARAM      reduce using rule 335 (generate_if -> IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item .)
    GENVAR          reduce using rule 335 (generate_if -> IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item .)
    ASSIGN          reduce using rule 335 (generate_if -> IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item .)
    ALWAYS          reduce using rule 335 (generate_if -> IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item .)
    INITIAL         reduce using rule 335 (generate_if -> IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item .)
    ID              reduce using rule 335 (generate_if -> IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item .)
    SENS_OR         reduce using rule 335 (generate_if -> IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item .)
    FUNCTION        reduce using rule 335 (generate_if -> IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item .)
    TASK            reduce using rule 335 (generate_if -> IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item .)
    LPAREN          reduce using rule 335 (generate_if -> IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item .)
    INPUT           reduce using rule 335 (generate_if -> IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item .)
    OUTPUT          reduce using rule 335 (generate_if -> IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item .)
    INOUT           reduce using rule 335 (generate_if -> IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item .)
    TRI             reduce using rule 335 (generate_if -> IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item .)
    REG             reduce using rule 335 (generate_if -> IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item .)
    WIRE            reduce using rule 335 (generate_if -> IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item .)
    SIGNED          reduce using rule 335 (generate_if -> IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item .)
    SUPPLY0         reduce using rule 335 (generate_if -> IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item .)
    SUPPLY1         reduce using rule 335 (generate_if -> IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item .)
    END             reduce using rule 335 (generate_if -> IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item .)


state 748

    (310) param_arg -> DOT ID LPAREN expression RPAREN .

    RPAREN          reduce using rule 310 (param_arg -> DOT ID LPAREN expression RPAREN .)
    COMMA           reduce using rule 310 (param_arg -> DOT ID LPAREN expression RPAREN .)


state 749

    (258) if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .

    JOIN            reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    IF              reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    CASE            reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    CASEX           reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    FOR             reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    WHILE           reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    WAIT            reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    FOREVER         reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    BEGIN           reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    FORK            reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    DELAY           reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    AT              reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    DOLLER          reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    DISABLE         reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    LBRACE          reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    ID              reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    SEMICOLON       reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    ENDMODULE       reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    GENERATE        reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    INTEGER         reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    REAL            reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    PARAMETER       reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    LOCALPARAM      reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    GENVAR          reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    ASSIGN          reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    ALWAYS          reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    INITIAL         reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    SENS_OR         reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    FUNCTION        reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    TASK            reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    LPAREN          reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    INPUT           reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    OUTPUT          reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    INOUT           reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    TRI             reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    REG             reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    WIRE            reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    SIGNED          reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    SUPPLY0         reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    SUPPLY1         reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    ENDGENERATE     reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    ELSE            reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    END             reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    ENDTASK         reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    ENDFUNCTION     reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    ENDCASE         reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    DEFAULT         reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    MINUS           reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    PLUS            reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    LNOT            reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    NOT             reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    AND             reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    NAND            reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    NOR             reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    OR              reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    XOR             reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    XNOR            reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    INTNUMBER_DEC   reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    SIGNED_INTNUMBER_DEC reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    INTNUMBER_BIN   reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    SIGNED_INTNUMBER_BIN reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    INTNUMBER_OCT   reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    SIGNED_INTNUMBER_OCT reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    INTNUMBER_HEX   reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    SIGNED_INTNUMBER_HEX reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    FLOATNUMBER     reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    STRING_LITERAL  reduce using rule 258 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)


state 750

    (232) blocking_substitution_base -> delays lvalue EQUALS delays . rvalue
    (126) rvalue -> . expression
    (127) expression -> . MINUS expression
    (128) expression -> . PLUS expression
    (129) expression -> . LNOT expression
    (130) expression -> . NOT expression
    (131) expression -> . AND expression
    (132) expression -> . NAND expression
    (133) expression -> . NOR expression
    (134) expression -> . OR expression
    (135) expression -> . XOR expression
    (136) expression -> . XNOR expression
    (137) expression -> . expression POWER expression
    (138) expression -> . expression TIMES expression
    (139) expression -> . expression DIVIDE expression
    (140) expression -> . expression MOD expression
    (141) expression -> . expression PLUS expression
    (142) expression -> . expression MINUS expression
    (143) expression -> . expression LSHIFT expression
    (144) expression -> . expression RSHIFT expression
    (145) expression -> . expression LSHIFTA expression
    (146) expression -> . expression RSHIFTA expression
    (147) expression -> . expression LT expression
    (148) expression -> . expression GT expression
    (149) expression -> . expression LE expression
    (150) expression -> . expression GE expression
    (151) expression -> . expression EQ expression
    (152) expression -> . expression NE expression
    (153) expression -> . expression EQL expression
    (154) expression -> . expression NEL expression
    (155) expression -> . expression AND expression
    (156) expression -> . expression XOR expression
    (157) expression -> . expression XNOR expression
    (158) expression -> . expression OR expression
    (159) expression -> . expression LAND expression
    (160) expression -> . expression LOR expression
    (161) expression -> . expression COND expression COLON expression
    (162) expression -> . LPAREN expression RPAREN
    (163) expression -> . concat
    (164) expression -> . repeat
    (165) expression -> . partselect
    (166) expression -> . pointer
    (167) expression -> . functioncall
    (168) expression -> . systemcall
    (169) expression -> . identifier
    (170) expression -> . const_expression
    (171) concat -> . LBRACE concatlist RBRACE
    (174) repeat -> . LBRACE expression concat RBRACE
    (175) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (176) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (177) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (178) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (179) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (180) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (181) pointer -> . identifier LBRACKET expression RBRACKET
    (182) pointer -> . pointer LBRACKET expression RBRACKET
    (366) functioncall -> . identifier LPAREN func_args RPAREN
    (344) systemcall -> . DOLLER ID
    (345) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (346) systemcall -> . DOLLER SIGNED LPAREN sysargs RPAREN
    (385) identifier -> . ID
    (386) identifier -> . scope ID
    (183) const_expression -> . intnumber
    (184) const_expression -> . floatnumber
    (185) const_expression -> . stringliteral
    (387) scope -> . identifier DOT
    (388) scope -> . pointer DOT
    (187) intnumber -> . INTNUMBER_DEC
    (188) intnumber -> . SIGNED_INTNUMBER_DEC
    (189) intnumber -> . INTNUMBER_BIN
    (190) intnumber -> . SIGNED_INTNUMBER_BIN
    (191) intnumber -> . INTNUMBER_OCT
    (192) intnumber -> . SIGNED_INTNUMBER_OCT
    (193) intnumber -> . INTNUMBER_HEX
    (194) intnumber -> . SIGNED_INTNUMBER_HEX
    (186) floatnumber -> . FLOATNUMBER
    (195) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 32
    PLUS            shift and go to state 36
    LNOT            shift and go to state 24
    NOT             shift and go to state 56
    AND             shift and go to state 49
    NAND            shift and go to state 34
    NOR             shift and go to state 60
    OR              shift and go to state 59
    XOR             shift and go to state 39
    XNOR            shift and go to state 38
    LPAREN          shift and go to state 43
    LBRACE          shift and go to state 50
    DOLLER          shift and go to state 54
    ID              shift and go to state 46
    INTNUMBER_DEC   shift and go to state 35
    SIGNED_INTNUMBER_DEC shift and go to state 42
    INTNUMBER_BIN   shift and go to state 45
    SIGNED_INTNUMBER_BIN shift and go to state 40
    INTNUMBER_OCT   shift and go to state 28
    SIGNED_INTNUMBER_OCT shift and go to state 41
    INTNUMBER_HEX   shift and go to state 52
    SIGNED_INTNUMBER_HEX shift and go to state 26
    FLOATNUMBER     shift and go to state 25
    STRING_LITERAL  shift and go to state 48

    repeat                         shift and go to state 30
    partselect                     shift and go to state 33
    floatnumber                    shift and go to state 51
    rvalue                         shift and go to state 752
    systemcall                     shift and go to state 27
    const_expression               shift and go to state 29
    pointer                        shift and go to state 31
    functioncall                   shift and go to state 55
    intnumber                      shift and go to state 37
    scope                          shift and go to state 44
    identifier                     shift and go to state 57
    expression                     shift and go to state 481
    concat                         shift and go to state 47
    stringliteral                  shift and go to state 53

state 751

    (334) generate_block -> BEGIN COLON ID generate_items . END
    (328) generate_items -> generate_items . generate_item
    (330) generate_item -> . standard_item
    (331) generate_item -> . generate_if
    (332) generate_item -> . generate_for
    (60) standard_item -> . decl
    (61) standard_item -> . integerdecl
    (62) standard_item -> . realdecl
    (63) standard_item -> . declassign
    (64) standard_item -> . parameterdecl
    (65) standard_item -> . localparamdecl
    (66) standard_item -> . genvardecl
    (67) standard_item -> . assignment
    (68) standard_item -> . always
    (69) standard_item -> . initial
    (70) standard_item -> . instance
    (71) standard_item -> . function
    (72) standard_item -> . task
    (73) standard_item -> . pragma
    (335) generate_if -> . IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item
    (336) generate_if -> . IF LPAREN cond RPAREN gif_true_item
    (341) generate_for -> . FOR LPAREN forpre forcond forpost RPAREN generate_forcontent
    (74) decl -> . sigtypes declnamelist SEMICOLON
    (75) decl -> . sigtypes width declnamelist SEMICOLON
    (84) integerdecl -> . INTEGER integernamelist SEMICOLON
    (85) integerdecl -> . INTEGER SIGNED integernamelist SEMICOLON
    (89) realdecl -> . REAL realnamelist SEMICOLON
    (80) declassign -> . sigtypes declassign_element SEMICOLON
    (81) declassign -> . sigtypes width declassign_element SEMICOLON
    (93) parameterdecl -> . PARAMETER param_substitution_list SEMICOLON
    (94) parameterdecl -> . PARAMETER SIGNED param_substitution_list SEMICOLON
    (95) parameterdecl -> . PARAMETER width param_substitution_list SEMICOLON
    (96) parameterdecl -> . PARAMETER SIGNED width param_substitution_list SEMICOLON
    (97) parameterdecl -> . PARAMETER INTEGER param_substitution_list SEMICOLON
    (98) localparamdecl -> . LOCALPARAM param_substitution_list SEMICOLON
    (99) localparamdecl -> . LOCALPARAM SIGNED param_substitution_list SEMICOLON
    (100) localparamdecl -> . LOCALPARAM width param_substitution_list SEMICOLON
    (101) localparamdecl -> . LOCALPARAM SIGNED width param_substitution_list SEMICOLON
    (102) localparamdecl -> . LOCALPARAM INTEGER param_substitution_list SEMICOLON
    (322) genvardecl -> . GENVAR genvarlist SEMICOLON
    (106) assignment -> . ASSIGN lvalue EQUALS rvalue SEMICOLON
    (107) assignment -> . ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON
    (196) always -> . ALWAYS senslist always_statement
    (283) initial -> . INITIAL initial_statement
    (290) instance -> . ID parameterlist instance_bodylist SEMICOLON
    (291) instance -> . SENS_OR parameterlist instance_bodylist SEMICOLON
    (296) instance -> . ID instance_bodylist_noname SEMICOLON
    (297) instance -> . SENS_OR instance_bodylist_noname SEMICOLON
    (351) function -> . FUNCTION width ID SEMICOLON function_statement ENDFUNCTION
    (352) function -> . FUNCTION ID SEMICOLON function_statement ENDFUNCTION
    (370) task -> . TASK ID SEMICOLON task_statement ENDTASK
    (7) pragma -> . LPAREN TIMES ID EQUALS expression TIMES RPAREN
    (8) pragma -> . LPAREN TIMES ID TIMES RPAREN
    (35) sigtypes -> . sigtypes sigtype
    (36) sigtypes -> . sigtype
    (37) sigtype -> . INPUT
    (38) sigtype -> . OUTPUT
    (39) sigtype -> . INOUT
    (40) sigtype -> . TRI
    (41) sigtype -> . REG
    (42) sigtype -> . WIRE
    (43) sigtype -> . SIGNED
    (44) sigtype -> . SUPPLY0
    (45) sigtype -> . SUPPLY1

    END             shift and go to state 753
    IF              shift and go to state 217
    FOR             shift and go to state 215
    INTEGER         shift and go to state 83
    REAL            shift and go to state 63
    PARAMETER       shift and go to state 70
    LOCALPARAM      shift and go to state 101
    GENVAR          shift and go to state 69
    ASSIGN          shift and go to state 85
    ALWAYS          shift and go to state 68
    INITIAL         shift and go to state 66
    ID              shift and go to state 92
    SENS_OR         shift and go to state 99
    FUNCTION        shift and go to state 93
    TASK            shift and go to state 90
    LPAREN          shift and go to state 2
    INPUT           shift and go to state 91
    OUTPUT          shift and go to state 96
    INOUT           shift and go to state 72
    TRI             shift and go to state 89
    REG             shift and go to state 67
    WIRE            shift and go to state 104
    SIGNED          shift and go to state 98
    SUPPLY0         shift and go to state 79
    SUPPLY1         shift and go to state 80

    decl                           shift and go to state 62
    localparamdecl                 shift and go to state 64
    declassign                     shift and go to state 65
    generate_for                   shift and go to state 211
    integerdecl                    shift and go to state 71
    standard_item                  shift and go to state 212
    genvardecl                     shift and go to state 74
    sigtype                        shift and go to state 75
    initial                        shift and go to state 76
    instance                       shift and go to state 78
    sigtypes                       shift and go to state 88
    realdecl                       shift and go to state 82
    parameterdecl                  shift and go to state 84
    function                       shift and go to state 87
    assignment                     shift and go to state 81
    generate_item                  shift and go to state 356
    task                           shift and go to state 95
    always                         shift and go to state 97
    pragma                         shift and go to state 102
    generate_if                    shift and go to state 218

state 752

    (232) blocking_substitution_base -> delays lvalue EQUALS delays rvalue .

    RPAREN          reduce using rule 232 (blocking_substitution_base -> delays lvalue EQUALS delays rvalue .)


state 753

    (334) generate_block -> BEGIN COLON ID generate_items END .

    ELSE            reduce using rule 334 (generate_block -> BEGIN COLON ID generate_items END .)
    ENDGENERATE     reduce using rule 334 (generate_block -> BEGIN COLON ID generate_items END .)
    IF              reduce using rule 334 (generate_block -> BEGIN COLON ID generate_items END .)
    FOR             reduce using rule 334 (generate_block -> BEGIN COLON ID generate_items END .)
    INTEGER         reduce using rule 334 (generate_block -> BEGIN COLON ID generate_items END .)
    REAL            reduce using rule 334 (generate_block -> BEGIN COLON ID generate_items END .)
    PARAMETER       reduce using rule 334 (generate_block -> BEGIN COLON ID generate_items END .)
    LOCALPARAM      reduce using rule 334 (generate_block -> BEGIN COLON ID generate_items END .)
    GENVAR          reduce using rule 334 (generate_block -> BEGIN COLON ID generate_items END .)
    ASSIGN          reduce using rule 334 (generate_block -> BEGIN COLON ID generate_items END .)
    ALWAYS          reduce using rule 334 (generate_block -> BEGIN COLON ID generate_items END .)
    INITIAL         reduce using rule 334 (generate_block -> BEGIN COLON ID generate_items END .)
    ID              reduce using rule 334 (generate_block -> BEGIN COLON ID generate_items END .)
    SENS_OR         reduce using rule 334 (generate_block -> BEGIN COLON ID generate_items END .)
    FUNCTION        reduce using rule 334 (generate_block -> BEGIN COLON ID generate_items END .)
    TASK            reduce using rule 334 (generate_block -> BEGIN COLON ID generate_items END .)
    LPAREN          reduce using rule 334 (generate_block -> BEGIN COLON ID generate_items END .)
    INPUT           reduce using rule 334 (generate_block -> BEGIN COLON ID generate_items END .)
    OUTPUT          reduce using rule 334 (generate_block -> BEGIN COLON ID generate_items END .)
    INOUT           reduce using rule 334 (generate_block -> BEGIN COLON ID generate_items END .)
    TRI             reduce using rule 334 (generate_block -> BEGIN COLON ID generate_items END .)
    REG             reduce using rule 334 (generate_block -> BEGIN COLON ID generate_items END .)
    WIRE            reduce using rule 334 (generate_block -> BEGIN COLON ID generate_items END .)
    SIGNED          reduce using rule 334 (generate_block -> BEGIN COLON ID generate_items END .)
    SUPPLY0         reduce using rule 334 (generate_block -> BEGIN COLON ID generate_items END .)
    SUPPLY1         reduce using rule 334 (generate_block -> BEGIN COLON ID generate_items END .)
    END             reduce using rule 334 (generate_block -> BEGIN COLON ID generate_items END .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for GENERATE in state 21 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 21 resolved as shift
WARNING: shift/reduce conflict for REAL in state 21 resolved as shift
WARNING: shift/reduce conflict for PARAMETER in state 21 resolved as shift
WARNING: shift/reduce conflict for LOCALPARAM in state 21 resolved as shift
WARNING: shift/reduce conflict for GENVAR in state 21 resolved as shift
WARNING: shift/reduce conflict for ASSIGN in state 21 resolved as shift
WARNING: shift/reduce conflict for ALWAYS in state 21 resolved as shift
WARNING: shift/reduce conflict for INITIAL in state 21 resolved as shift
WARNING: shift/reduce conflict for ID in state 21 resolved as shift
WARNING: shift/reduce conflict for SENS_OR in state 21 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 21 resolved as shift
WARNING: shift/reduce conflict for TASK in state 21 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 21 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 21 resolved as shift
WARNING: shift/reduce conflict for OUTPUT in state 21 resolved as shift
WARNING: shift/reduce conflict for INOUT in state 21 resolved as shift
WARNING: shift/reduce conflict for TRI in state 21 resolved as shift
WARNING: shift/reduce conflict for REG in state 21 resolved as shift
WARNING: shift/reduce conflict for WIRE in state 21 resolved as shift
WARNING: shift/reduce conflict for SIGNED in state 21 resolved as shift
WARNING: shift/reduce conflict for SUPPLY0 in state 21 resolved as shift
WARNING: shift/reduce conflict for SUPPLY1 in state 21 resolved as shift
WARNING: shift/reduce conflict for IF in state 66 resolved as shift
WARNING: shift/reduce conflict for AT in state 68 resolved as shift
WARNING: shift/reduce conflict for IF in state 77 resolved as shift
WARNING: shift/reduce conflict for FOR in state 77 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 77 resolved as shift
WARNING: shift/reduce conflict for REAL in state 77 resolved as shift
WARNING: shift/reduce conflict for PARAMETER in state 77 resolved as shift
WARNING: shift/reduce conflict for LOCALPARAM in state 77 resolved as shift
WARNING: shift/reduce conflict for GENVAR in state 77 resolved as shift
WARNING: shift/reduce conflict for ASSIGN in state 77 resolved as shift
WARNING: shift/reduce conflict for ALWAYS in state 77 resolved as shift
WARNING: shift/reduce conflict for INITIAL in state 77 resolved as shift
WARNING: shift/reduce conflict for ID in state 77 resolved as shift
WARNING: shift/reduce conflict for SENS_OR in state 77 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 77 resolved as shift
WARNING: shift/reduce conflict for TASK in state 77 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 77 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 77 resolved as shift
WARNING: shift/reduce conflict for OUTPUT in state 77 resolved as shift
WARNING: shift/reduce conflict for INOUT in state 77 resolved as shift
WARNING: shift/reduce conflict for TRI in state 77 resolved as shift
WARNING: shift/reduce conflict for REG in state 77 resolved as shift
WARNING: shift/reduce conflict for WIRE in state 77 resolved as shift
WARNING: shift/reduce conflict for SIGNED in state 77 resolved as shift
WARNING: shift/reduce conflict for SUPPLY0 in state 77 resolved as shift
WARNING: shift/reduce conflict for SUPPLY1 in state 77 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 85 resolved as shift
WARNING: shift/reduce conflict for ID in state 85 resolved as shift
WARNING: shift/reduce conflict for ID in state 88 resolved as shift
WARNING: shift/reduce conflict for IF in state 166 resolved as shift
WARNING: shift/reduce conflict for IF in state 167 resolved as shift
WARNING: shift/reduce conflict for IF in state 175 resolved as shift
WARNING: shift/reduce conflict for IF in state 199 resolved as shift
WARNING: shift/reduce conflict for ID in state 236 resolved as shift
WARNING: shift/reduce conflict for IF in state 312 resolved as shift
WARNING: shift/reduce conflict for IF in state 326 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 388 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 388 resolved as shift
WARNING: shift/reduce conflict for OUTPUT in state 388 resolved as shift
WARNING: shift/reduce conflict for INOUT in state 388 resolved as shift
WARNING: shift/reduce conflict for TRI in state 388 resolved as shift
WARNING: shift/reduce conflict for REG in state 388 resolved as shift
WARNING: shift/reduce conflict for WIRE in state 388 resolved as shift
WARNING: shift/reduce conflict for SIGNED in state 388 resolved as shift
WARNING: shift/reduce conflict for SUPPLY0 in state 388 resolved as shift
WARNING: shift/reduce conflict for SUPPLY1 in state 388 resolved as shift
WARNING: shift/reduce conflict for IF in state 453 resolved as shift
WARNING: shift/reduce conflict for IF in state 506 resolved as shift
WARNING: shift/reduce conflict for IF in state 527 resolved as shift
WARNING: shift/reduce conflict for POWER in state 552 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 552 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 552 resolved as shift
WARNING: shift/reduce conflict for MOD in state 552 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 552 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 552 resolved as shift
WARNING: shift/reduce conflict for LSHIFT in state 552 resolved as shift
WARNING: shift/reduce conflict for RSHIFT in state 552 resolved as shift
WARNING: shift/reduce conflict for LSHIFTA in state 552 resolved as shift
WARNING: shift/reduce conflict for RSHIFTA in state 552 resolved as shift
WARNING: shift/reduce conflict for LT in state 552 resolved as shift
WARNING: shift/reduce conflict for GT in state 552 resolved as shift
WARNING: shift/reduce conflict for LE in state 552 resolved as shift
WARNING: shift/reduce conflict for GE in state 552 resolved as shift
WARNING: shift/reduce conflict for EQ in state 552 resolved as shift
WARNING: shift/reduce conflict for NE in state 552 resolved as shift
WARNING: shift/reduce conflict for EQL in state 552 resolved as shift
WARNING: shift/reduce conflict for NEL in state 552 resolved as shift
WARNING: shift/reduce conflict for AND in state 552 resolved as shift
WARNING: shift/reduce conflict for XOR in state 552 resolved as shift
WARNING: shift/reduce conflict for XNOR in state 552 resolved as shift
WARNING: shift/reduce conflict for OR in state 552 resolved as shift
WARNING: shift/reduce conflict for LAND in state 552 resolved as shift
WARNING: shift/reduce conflict for LOR in state 552 resolved as shift
WARNING: shift/reduce conflict for COND in state 552 resolved as shift
WARNING: shift/reduce conflict for IF in state 553 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 553 resolved as shift
WARNING: shift/reduce conflict for IF in state 555 resolved as shift
WARNING: shift/reduce conflict for IF in state 562 resolved as shift
WARNING: shift/reduce conflict for IF in state 586 resolved as shift
WARNING: shift/reduce conflict for IF in state 665 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 675 resolved as shift
WARNING: shift/reduce conflict for IF in state 681 resolved as shift
WARNING: shift/reduce conflict for FOR in state 681 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 681 resolved as shift
WARNING: shift/reduce conflict for REAL in state 681 resolved as shift
WARNING: shift/reduce conflict for PARAMETER in state 681 resolved as shift
WARNING: shift/reduce conflict for LOCALPARAM in state 681 resolved as shift
WARNING: shift/reduce conflict for GENVAR in state 681 resolved as shift
WARNING: shift/reduce conflict for ASSIGN in state 681 resolved as shift
WARNING: shift/reduce conflict for ALWAYS in state 681 resolved as shift
WARNING: shift/reduce conflict for INITIAL in state 681 resolved as shift
WARNING: shift/reduce conflict for ID in state 681 resolved as shift
WARNING: shift/reduce conflict for SENS_OR in state 681 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 681 resolved as shift
WARNING: shift/reduce conflict for TASK in state 681 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 681 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 681 resolved as shift
WARNING: shift/reduce conflict for OUTPUT in state 681 resolved as shift
WARNING: shift/reduce conflict for INOUT in state 681 resolved as shift
WARNING: shift/reduce conflict for TRI in state 681 resolved as shift
WARNING: shift/reduce conflict for REG in state 681 resolved as shift
WARNING: shift/reduce conflict for WIRE in state 681 resolved as shift
WARNING: shift/reduce conflict for SIGNED in state 681 resolved as shift
WARNING: shift/reduce conflict for SUPPLY0 in state 681 resolved as shift
WARNING: shift/reduce conflict for SUPPLY1 in state 681 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 683 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 697 resolved as shift
WARNING: shift/reduce conflict for IF in state 703 resolved as shift
WARNING: shift/reduce conflict for IF in state 705 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 710 resolved as shift
WARNING: shift/reduce conflict for IF in state 713 resolved as shift
WARNING: shift/reduce conflict for IF in state 714 resolved as shift
WARNING: shift/reduce conflict for IF in state 734 resolved as shift
WARNING: shift/reduce conflict for IF in state 743 resolved as shift
WARNING: shift/reduce conflict for FOR in state 743 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 743 resolved as shift
WARNING: shift/reduce conflict for REAL in state 743 resolved as shift
WARNING: shift/reduce conflict for PARAMETER in state 743 resolved as shift
WARNING: shift/reduce conflict for LOCALPARAM in state 743 resolved as shift
WARNING: shift/reduce conflict for GENVAR in state 743 resolved as shift
WARNING: shift/reduce conflict for ASSIGN in state 743 resolved as shift
WARNING: shift/reduce conflict for ALWAYS in state 743 resolved as shift
WARNING: shift/reduce conflict for INITIAL in state 743 resolved as shift
WARNING: shift/reduce conflict for ID in state 743 resolved as shift
WARNING: shift/reduce conflict for SENS_OR in state 743 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 743 resolved as shift
WARNING: shift/reduce conflict for TASK in state 743 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 743 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 743 resolved as shift
WARNING: shift/reduce conflict for OUTPUT in state 743 resolved as shift
WARNING: shift/reduce conflict for INOUT in state 743 resolved as shift
WARNING: shift/reduce conflict for TRI in state 743 resolved as shift
WARNING: shift/reduce conflict for REG in state 743 resolved as shift
WARNING: shift/reduce conflict for WIRE in state 743 resolved as shift
WARNING: shift/reduce conflict for SIGNED in state 743 resolved as shift
WARNING: shift/reduce conflict for SUPPLY0 in state 743 resolved as shift
WARNING: shift/reduce conflict for SUPPLY1 in state 743 resolved as shift
